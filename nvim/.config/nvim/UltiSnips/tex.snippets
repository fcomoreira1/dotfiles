global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and x != '0'
endglobal

snippet mtex "default" bA
\documentclass{scrartcl}

\usepackage[font$1]{moreira}
\author{Francisco Moreira}

\title{$2}

\begin{document}
	\maketitle
	$0
\end{document}
endsnippet

snippet !! "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

# #context "math()"
snippet ~~ "approx" A
\approx
endsnippet

# #context "math()"
snippet ~= "cong" iA
\cong
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
	$2
\end{$1}
$0
endsnippet

snippet dm "Math" wA
\[
$1
.\] $0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

#context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

#context "math()"
snippet ^^ "power" iA
^{$1}$0
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

#context "math()"
snippet => "implies" Ai
\implies 
endsnippet

#context "math()"
snippet =< "implied by" Ai
\impliedby 
endsnippet

#context "math()"
snippet iff "iff" A
\iff 
endsnippet

#context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

#context "math()"
snippet / "Fraction" 
\\frac{${VISUAL}}{$1}$0
endsnippet

#context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet


#context "math()"
snippet lim "limits" A
\lim_{${1:n} \to \infty}
endsnippet

#context "math()"
snippet bi "binomial" 
\binom{$1}{$2}$0
endsnippet

#context "math()"
snippet ooo "infinity" A
\infty
endsnippet

#context "math()"
snippet set "set" w
\\{$1\\} $0
endsnippet

#context "math()"
snippet cc "subset" 
\subset
endsnippet

#context "math()"
snippet eps "varepsilon"
\varepsilon
endsnippet

#context "math()"
snippet != "equals" iA
\neq  
endsnippet

#context "math()"
snippet <= "leq" iA
\le 
endsnippet

#context "math()"
snippet >= "geq" iA
\ge 
endsnippet

snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

#context "math()"
snippet >> "gg" iA
\gg 
endsnippet

#context "math()"
snippet << "ll" iA
\ll 
endsnippet

#context "math()"
snippet EE "exists" i
\exists  
endsnippet

#context "math()"
snippet AA "forall" i
\forall 
endsnippet

snippet ** "cdot" iA
\cdot 
endsnippet

#context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil$0
endsnippet

#context "math()"
snippet floor "floor" A
\left\lfloor $1 \right\rfloor$0
endsnippet

#context "math()"
snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

#context "math()"
snippet () "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

#context "math()"
snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right)$0
endsnippet

#context "math()"
snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right|$0
endsnippet

#context "math()"
snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

#context "math()"
snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

#context "math()"
snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right]$0
endsnippet

#context "math()"
snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

snippet it "italics" i
\textit{$1} $0 
endsnippet

snippet bf "bold" i
\textbf{$1} $0
endsnippet
