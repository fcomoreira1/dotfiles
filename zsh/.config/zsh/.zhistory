echo $ZCOMPDUMP
echo $ZSH_COMPDUMP
compinstall
ls .config
echo "source ${(q-)PWD}/zsh-syntax-\
highlighting/zsh-syntax-highlighting.zsh"
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
cd ~/bachelor/current
cd bachelor/current
cd ~/.config/nvim
exit 9
vim .zshrc
cat
nvim .zshrc~
rm .zshrc\~
$((90 * 0.75))
echo $((90 * 0.85))
echo $[379 / 5.7]
cd pictures/Wallpapers
dunstify "oi"
swaymsg -t get_tree > less
swaymsg -t get_tree | less
./calc
make test_all
cd ca
cd calclab
cd week2/calclab
mv Attestation\ de\ droits\ dÃ©finitive.pdf ~/documents/France/IDs
sudo dnf install glib
sudo dnf install glibc
sudo dnf install glibc-devel
sudo dnf search glibc
py3 help.py
py3 -i help.py
sudo dnf install glibc-devel.i686
nvim help.py
rm help.py
echo $((57 * 4))
echo $((57 * 8))
pip install jupyterthemes
jt -l
jt -l onedork
jt -t onedork
jt -t onedork -T -N -kl
jt -t onedork -T -N -kl -fs 11 -nfs 11 -fts 11 
jt -t onedork -fs 11 -nfs 11 -fts 11 -T -N -kl
jt -t onedork -fs 11 -nfs 11 -fts 11
jt -t onedork -fs 11
jt -t onedork -fs 11 -nfs 11
jt -t onedork -fs 11 -nfs 11 -tfs 11
jt -t onedork -fs 10 -nfs 10 -tfs 10
jt -t onedork -fs 10 -nfs 11 -tfs 11
jt -t onedork -fs 10 -nfs 12 -tfs 12
jt -t onedork -fs 11 -nfs 10 -tfs 12
jt -t onedork -fs 11 -nfs 10 -tfs 12 -ofs 12
jt -t onedork -fs 11 -nfs 10 -tfs 12 -ofs 11
nmcli dev wifi connect Ana
git --version
mv afterbkp after
vim init.lua
where kitty
where xterm
ln -s /usr/bin/kitty /usr/local/bin/xterm
sudo dnf install sqlite
sudo dnf remove rxvt-unicode-9.31-1.fc37.x86_64
sudo dnf remove dunst
dnf copr enable erikreider/SwayNotificationCenter\
dnf install SwayNotificationCenter
swaync
swaync-client -t
cd /etc/xdg/swaync
cp -r * ~/.config/swaync
cp -r swaync ~/.config/
vim config.json
ssh-keygen -t rsa -b 4096 -C moreira.machado@polytechnique.edu
ssh-copy-id moreira.machado@lieu.polytechnique.fr
cd .ssh/
ls -al
nvim scp://cselab//home/moreira.machado/datalab-handout
nvim scp://cselab//home/moreira.machado/datalab-handout/bits.c
nvim scp://cselab//users/eleves-a/2021/moreira.machado/datalab-handout/bits.c
nvim bits.c
scp './bits.c' cselab:datalab-handout/

scp './bits.c' 'cselab:datalab-handout/'
cd bachelor/current/CSE205/week3
cd datalab-handout
scp bits.c cselab:datalab-handout/
cd bachelor/current/CSE205/week3/datalab-handout
scp ./bits.c moreira.machado@anchois.polytechnique.fr
scp ./bits.c moreira.machado@anchois.polytechnique.fr:datalab-handout/
nvim confiug
man swaync-client
nvim exer.txt
rm exer.txt
nvim test.txt
jt -t onedork -fs 11 -nfs 10 -tfs 11 -ofs 10
jq
nvim t.cpp
cd .config/nviml
jt -t chesterish -fs 11 -nfs 10 -tfs 12 -ofs 11
fc-match sans
fc-match noto
fc-match
fc-conflist
fc-match -s sans
man wofi
man 5 wofi
man 7 wofi
fc-match -s sans | less
fc-list | less
fc-list | grep -i "noto" | grep -i "nerd"
fc-list | grep -i "noto" | less
fc-list | grep -i "nerd"
fc-list | grep -i "nerd" | grep -i "regular"
cd .config/rofi
cd wofi
git commit -am  "WOW"
git add swaymonad
sudo dnf list | grep -i "wine"
sudo dnf remove wine
sudo dnf remove texlive
sudo dnf remove texlive-*
sudo dnf 'remove texlive-*'
sudo dnf remove 'texlive-*'
sudo dnf list | grep -i "gnome"
sudo dnf remove gnome
sudo dnf remove @gnome
sudo dnf remove @gnome-desktop
sudo dnf list groups
sudo dnf remove @LibreOffice
sudo dnf remove '@Fedora Workstation'
dnf group info Multimedia
dnf group info Core
dnf group info Fedora Workstation product core
dnf group info 'Fedora Workstation product core'
dnf group info 'Guest Desktop Agents'
sudo dnf remove '@Guest Desktop Agents'
dnf group list --installed
sudo dnf remove '@Container Management'
dnf group info 'Container Management'
sudo dnf remove podman
cd .config/wofi
nvim menu.sh
cd /usr/share/wayland-sessions
sudo rm hyprland.desktop
cd ../nvim
kitty +kitten ssh -Y moreira.machado@barbeau.polytecnique.fr
kitty +kitten ssh -Y moreira.machado@barbeau.polytechnique.fr
ssh -Y moreira.machado@barbeau.polytechnique.fr
nvim scp://cselab//users/eleves-a/2021/moreira.machado/archlab-handout/sim/misc/expr.ys
pip --version
pip install pandas
pip install scikit-learn
pip install scipy
pip install jupyter_client\\

pip install jupyter\

pip remove jupyter-console
pip uninstall jupyter-console
pip install jupyter
pip install nbgrader\
jupyter_client==6.1.12 \
jupyter
pip install nbgrader
pip uninstall jupyter_client
pip install jupyter_client==6.1.12
pip show jupyter_client
pip show nbgrader
curl -O http://www.lix.polytechnique.fr/~jread/courses/cse204_2023/setup_CSE204.sh\
\

jupyter nbextension install --sys-prefix --py nbgrader --overwrite\
	jupyter nbextension enable --sys-prefix --py nbgrader\
	jupyter serverextension enable --sys-prefix --py nbgrader
cat setup_CSE204.sh
bash setup_CSE204.sh
sudo bash setup_CSE204.sH
virtualenv CSE204
 source CSE204/bin/activate
jupyter nbextension install --sys-prefix --py nbgrader --overwrite
jupyter nbextension install --sys-prefix --py nbgrader --overwrite --user
jupyter nbextension enable --sys-prefix --py nbgrader
jupyter nbextension enable --sys-prefix --py nbgrader --user
jupyter nbextension enable --py nbgrader --user
jupyter nbextension install \--py nbgrader --overwrite --user
jupyter nbextension install --py nbgrader --overwrite --user
jupyter nbextension enable nbgrader --user --py
jupyter serverextension enable --user --py nbgrader
ipython kernel install --name "CSE204" --user
sudo bash setup_CSE204.sh
nvim setup_CSE204.sh
jt 
$[700 / 52]
cd .ssh/config
.ssh
cd bachelor/current/MAA208
CSE205
week5
week4
ssh --help
man ssh
nvim scp://cselab//users/eleves-a/2021/moreira.machado/archlab-handout/sim/misc/copy.ys
nvim scp://cselab//users/eleves-a/2021/moreira.machado/archlab-handout/sim/
z
nvim scp://cselab//users/eleves-a/2021/moreira.machado/archlab-handout/sim/pipe
nvim main.conf
systemctl --user --now enable wireplumber.service
dnf info bluez
systemctl --user status bluetooth
systemctl status bluetooth
cd /usr/lib/systemd/system
nvim bluetooth.service
sudo rm /var/lib/bluetooth
cd /var/lib/bluetooth
sudo systemctl stop bluetooth
dnf search "fdk-aac"
sudo dnf install fdk-aac-free
sudo dnf remove fdk-aac-free-2.0.0-9.fc37.
sudo dnf remove gnome-shell --skip-broken
sudo dnf remove "gnome-shell-*"
sudo dnf remove "gnome-shell*"
sudo dnf remove "gnome-shell*" --skip-broken
sudo dnf swap fedora-release-identity-workstation fedora-release-identity-server
sudo dnf remove gnome-shell
sudo dnf remove fdk-aac-free-2.0.0-9.fc37
sudo dnf swap fdk-aac-free fdk-aac
sudo tlp-stat --help
$ cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
cd /etc/tlp
cd /etc/tlp.d
nvim 00-template.conf
sudo nvim tlp.conf
dnf info brave
dnf info brave-browser
sudo dnf install brave-browser-1.48.171-1.x86_64
killall shh
ssh -Y cselab
ssh -X anchois@polytechnique.fr
ssh -X moreira.machado:anchois@polytechnique.fr
scp moreira.machado@anchois.polytechnique.fr:archlab-handout/ ~/bachelor/current/CSE205/
cd misc
cat ncopy.ys
cd /etc/bluetooth
sudo nvim main.conf
systemctl restart bluetooth
swaymsg -t get_input
swaymsg -t
swaymsg -t get_inputs
cd seq
nvim seq-full.hcl
cd pipe
nvim pipe-full.
nvim pipe-full.hcl
cd after
mv cmp-lsp.lua cmp.bkp
cd after/plugin
nvim cmp.bkp
mv cmp.bkp cmp.lua
nvim after/plugin/init.lua
nvim after/plugin/cmp.lua
cd .config/nvim/after/plugin
nano cmp.lua
nvim cmp.lua
mkdir LuaSnip
nvim LuaSnip/all.lua
nvim env.c
cd Sem3
cd CSE201/Authentification-System
scp -r moreira.machado@anchois.polytechnique.fr:bomb20/ ~/bachelor/current/CSE205/
gdb bomb.c
gdb ./bomb
ping www.codeforces.com
nvim scp://cselab//users/eleves-a/2021/moreira.machado/archlab-handout/sim/pipe/
scp -r moreira.machado@anchois.polytechnique.fr:archlab-handout/ ~/bachelor/current/CSE205/
cd MAA206
cd ../MAA207
nvim solution.pdfg
nvim --startuptime solution.
nvim --startuptime solution.tex
nvim --startuptime perf.log
nvim perf.log
nvim --startuptime perf.log perf.log
blue
bootctl status
sudo dnf install gimp
cd CV
nvim .latexmkrc
exity
echo $#
$?
echo $?
cd ccbot
nvim main.py
#(echo 5)
$(echo 5)
echo $(echo 5)
NAME=Sally
echo `hi $NAME`
echo "hi $NAME"
echo `$NAME`
echo â€ƒ¹hi $NAMEâ€ƒ¹
echo 'hi $NAME'
(echo "l"; exit 0) && (echo "r"; exit 2); echo $?
echo $PID
echo $$
echo $PPID
id -u
id -g
ls ~fcomoreira
ls ~
NAME=sALLY ls
echo $NAME
(echo "l"; exit 1) && (echo "r"; exit 2); echo $?
ls ~root
echo $1
echo $2
if (exit 3); then echo "TRUE"; else "FALSE"; fi
sudo dnf install steam
sudo dnf install mono
sudo dnf install mono-basic-4.7-10.fc37.x86_64
cd wine
cd .wine
export WINEPREFIX="$HOME/.wine winetricks dotnet45 win10"
wine winecfg
sudo dnf install winemono
sudo dnf install wine-mono
sudo dnf install winetricks
winetricks
sudo dnf install ./nautilus-dropbox-2022.12.05-1.fedora.x86_64.rpm
sudo dnf remove uison
sudo dnf install nemo
nemo 
git clone --depth=1 https://github.com/decaycs/decay-gtk\
cd decay-gtk\
mkdir -p ~/.themes\
# Put any theme you want from the Themes folder into the created .themes folder\
cp -r ./Themes/<theme> ~/.themes
cd theme
cd decay-gtk
cd Themes
cp -r Dark-decay ~/.themes/
cd .themes
cd .config/gtk
cd .config/gtk-2.0/
nvim gtkfilechooser.ini
cd .config/gtk-4.0
sudo dnf remove neom
sudo dnf remove nemo
export GTK_THEME='Dark-decay'
 gsettings set $gnome-schema gtk-theme 'Dark-decay'
 gsettings set org.gnome.desktop.interface gtk-theme 'Dark-decay'
cd waybar
export GTK_THEME=''
GTK_THEME='' nautilus
dnf list groups
systemctl enable gdm
sudo service gdm start
echo $EDITOR
echo $ZDOTDIR
echo $WINEPREFIX
quit
gsettings list-keys org.gnome.desktop.interface
gsettings list-recursively org.gnome.desktop.interface
systemctl disale tlp
systemctl disable tlp
gsettings set org.gnome.shell.extensions.dash-to-dock hot-keys false
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5 "[\"<Super>KP_6\"]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6 "[\"<Super>KP_6"]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6 "[\"<Super>KP_6"]"\
\

gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6 "[\"<Super>KP_6\"]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-7 "[\"<Super>KP_7\"]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-8 "[\"<Super>KP_8\"]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-9 "[\"<Super>KP_9\"]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5 "[\"<Super>KP_5\"]"
for i in {1..12}; do gsettings set "org.gnome.desktop.wm.keybindings" "switch-to-workspace-$i" "['<Super>${i}']"; done
for i in {1..9}; do gsettings set org.gnome.shell.keybindings switch-to-application-$i "[]"; done
for i in {1..12}; do gsettings set "org.gnome.desktop.wm.keybindings" "move-to-workspace-$i" "['<Super><Shift>${i}']"; done
journalctl -k -b -1 -n 10000
df
nmcli device show
nmcli device
cd notes
cd metrix
cat inbox.norg
cat index.norg
cd CSE204
cat .bashrc
cat .z
lsblk
ip address show
playerctl 
dbus-launch
cd /etc/systemd/system
systemctl daemon-reload
sudo systemctl start bluetooth
playerctl -a pause
echo $DISPLAY
sudo nvim suspend-all.service
sudo systemctl daemon-reload
sudo systemctl start suspend-all
systemctl status suspend-all
gsettings set org.gnome.desktop.wm.keybindings switch-windows "['<Alt>Tab']"
gsettings set org.gnome.desktop.wm.keybindings switch-windows-backward "['<Shift><Alt>Tab']"
gsettings set org.gnome.shell.app-switcher current-workspace-only false
bluetoothctl scan off
bluetoothctl
bluetoothctl remove 2C:32:6A:F1:88:AE
bluetoothctl scan on
bluetoothctl pair 2C:32:6A:F1:88:AE
bluetoothctl trust 2C:32:6A:F1:88:AE
bot
pip install tensorflow
sudo dnf install webex
sudo dnf install "./Webex.rpm"
cat Webex.rpm
sudo dnf install "Webex.rpm"
speaker-test
man fgets
mkdir CSE207
mkdir flow20
nvim hello-world.h
nvim .profil
gsettings reset org.gnome.desktop.interface gtk-theme
cd config
vim config
gnome-settings
nordvpn connecT
powerprofilesctl GET
cd bachelor/current/
cd CSE209
nvim fancy-hello-world
killall gnome-session
killall gnome-session-binary
py3 9248 / 32
py3 
cat fancy-hello-world.
cat fancy-hello-world.c
nvim README.Md
zip tutorial1a.zip *
mkdir 1a
mv * 1a/
mv tutorial1a.zip ../
mkdir 1b
mv pointers.c 1b
nvim pointers.c
killall gdmn
cd bachelor/current/CSE207/flow20
cd 1b/ex02-pointer-server
zip tutorial1b.zip ex02-pointer-server
zip tutorial1b.zip ex02-pointer-server/
zip tutorial1b.zip ex02-pointer-server/*
rm tutorial1b.zip
rmdir tutorial1b
rmdir tutorial1b/*
rm -r tutorial1b
zip tutorial1b.zip *
mv tutorial1b.zip ../
ssh
cd keyrings
VIM TEST.CPP
cd UltiSnips
nvim cpp.snippets
nvim scp://cselab//users/eleves-a/2021/moreira.machado/comparch/malloclab-handout
nvim scp://cselab//users/eleves-a/2021/moreira.machado/comparch/malloclab-handout/*
pip install tensorrt
echo $XCURSOR_SIZE
flatpak info
flatpak info --hrlp
flatpak info --help
flatpak list
xprpo
sudo dnf remove spotify-client-1.1.84.716-1.fc37.x86_64
sudo dnf remove lpf-spotify-client-1.1.84.716-2.fc37.x86_64
flatpak install flathub com.spotify.Client
flatpak override --env=XCURSOR_THEME=Breeze_Snow
sudo flatpak override --env=XCURSOR_THEME=Breeze_Snow
cd icons
sudo flatpak override --env=XCURSOR_PATH=/run/host/user-share/icons:/run/host/share/icons
killall spotify
echo $XCURSOR_THEME
nvim keymaps.lua
scp -r moreira.machado@anchois.polytechnique.fr://users/profs/info/francesco.zappa-nardelli/malloclab-traces/ ~/bachelor/current/CSE205/
cd malloclab-traces
scp -r moreira.machado@anchois.polytechnique.fr:comparch/malloclab-handout ~/bachelor/current/CSE205/
nvim scp://cselab//users/eleves-a/2021/moreira.machado/comparch/malloclab-handout/mm.c
telnet www.enseignement.polytechnique.fr 80
X=FF
printf 0x%X $X
printf 0x%d $X
tar xvf ex05-sockets.zip
cp ex04-url/url.* ex05-sockets/
cp url* ex05-sockets
killall LeagueOfLegends
cd ../1a
l;a
nvim fancy-hello-world.
nvim fancy-hello-world.c
cd bachelor/current/MAA20
cd homework
cd homework2
cp ../homework/solution.tex ./
nvim all.lua
nvim solution.
nvim texmf/tex/latex/local/moreira.sty 
cd .config/fish
nvim config.fish\\

./mdriver -f ../malloclab-traces/amptjp.rep
./mdriver -f ../malloclab-traces/amptjp-bal.rep
./mdriver -f ../malloclab-traces/binary-bal.rep
./mdriver -f ../malloclab-traces/binary2-bal.rep
./mdriver -f ../malloclab-traces/binary2.rep
mdriver
sudo tlp-stat - b
./mdriver -f short1-bal.rep
./mdriver -f short2-bal.rep
cd malloclab-
./mdriver -v -f short1-bal.rep
./mdriver -v -f short2-bal.rep
./mdriver -v -f ../malloclab-traces/amptjp-bal.rep
./mdriver -v -f ../malloclab-traces/amptjp.rep
git clone https://github.com/azbenoit/phy204_proj.git
cd phy204_proj
./phy204_proj
nvim test.py
py3 test.pt
py3 test.py
cat ./short2-bal.rep
mkdir malloc
mv malloc malloclab
mv malloclab-* malloclab/
cat ./short1-bal.rep
git commit -am "Init"
cd bachelor/current/CSE205/malloclab-handout
nvim solution.tex
git commit -am "iNIT"
git checkout -b  bestfit
git tatus
git commit -am "Init branch"
./mdriver -f ./short1-bal.rep
maake
make -v
amke
2make
git add remote "https://github.com/fcomoreira1/malloc.git"
git remote add origin https://github.com/fcomoreira1/malloc.git
git commit -am "ignore"
git checkout 15318c3d5f22bc3637337d1d5b5b146617f5f5e9
git checkout 89141bbceab2605cd021667534dc350826a76de8
./mdriver -v 
./mdriver -f ./short2-bal.rep
./mdriver -f -v
./mdriver
cd bachelor/current/MAA207/homework2
cd malloclab
nvim config.h
cd malloclab_pedro
./mdriver -v
cd bachelor/current/CSE205/malloclab/malloclab-handout
cd malloclab-cyrus
nvim mm2.c
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\
sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
where nvim
code --enable-features=UseOzonePlatform --ozone-platform=wayland
cd bachelor/current/CSE205/malloclab
git merge bestfit
git commit -am  "Saving stable header footer implicit"
git checkout -b explicit
git checkout explicit
nvim\\

git discard
git reset --HARD
git reset --HEAD
git commit -am "give up"
git checkout bestfit
git checkout 0bf6ba690a964369c5e9ad2593ee9670914d227e
git reset --hard
git checkout a2832f527eadfb9eb70364c7d82957eefc73a919
git reset --hard 
git checkout be5e64eab2546075035d68362e9a0d14d914771f
nvim mm.c
cd malloclab-handout
./mdriver -v -f  ./short2-bal.rep
./mdriver -v -f  ./short1-bal.rep
./wgetX www.google.com
./wgetX www.google.com/
./wgetX webmail.zimbra.com/
./wgetX webmail.polytechnique.com/
wget http://infinity.epizeuxis.net/
./wgetX http://www.google.com
./wgetX http://www.google.com/
cat received_pagel.txt
./wgetX webmail.polytechnique.fr/
cd bachelor/current/CSE204
cd ex04-url-provided
cd flow02
cd flow20
cd 1b
cd ex02-pointer-server
cd 1a
open X.gif
head received_pagel.
head received_pagel.gif
head received_pagel.txt
nvim url.c
sudo dnf install ~/downloads/Simplenote-linux-2.21.0-x86_64.rpm
cd /sys
cd power
cat disk
cd fs
cd class
cd thermal
cat thermal_zone0
cd thermal_zone0
cd power_supply
cd BAT0
cat capacity
cat capacity_level
nvim workbench.desktop.main.css
cd /usr/share/code/resources/app
cd workspace
cd out/vs
cd workbench
vi workbench.desktop.main.css
sudo vi workbench.desktop.main.css
./csim-ref -v -s 4 -E 1 -b 4 -t traces/yi.trace
mamke
./csim -s 4 -E 2 -b 4 -t traces/yi.trace
./csim-ref -s 4 -E 2 -b 4 -t traces/yi.trace
./csim -s 2 -E 1 -b 4 -t traces/dave.trace
./csim-ref -s 2 -E 1 -b 4 -t traces/dave.trace
./csim -s 2 -E 1 -b 3 -t traces/trans.trace
./csim-ref -s 2 -E 1 -b 3 -t traces/trans.trace
./csim -s 2 -E 2 -b 3 -t traces/trans.trace
./csim-ref -s 2 -E 2 -b 3 -t traces/trans.trace
./csim -s 2 -E 4 -b 3 -t traces/trans.trace
./csim-ref -s 2 -E 4 -b 3 -t traces/trans.trace
./csim -s 5 -E 1 -b 5 -t traces/trans.trace
./csim-ref -s 5 -E 1 -b 5 -t traces/trans.trace
./csim -s 5 -E 1 -b 5 -t traces/long.trace
./csim-ref -s 5 -E 1 -b 5 -t traces/long.trace
./csim -s 4 -E 1 -b 4 -t traces/yi.trace
./csim -v -s 4 -E 1 -b 4 -t traces/yi.trace
./csim -s 1 -E 1 -b 1 -t traces/yi2.trace
./csim-ref -s 1 -E 1 -b 1 -t traces/yi2.trace
nvim scp://cselab//users/eleves-a/2021/moreira.machado/comparch/cachelab-handout/csim.c
scp -r moreira.machado@anchois.polytechnique.fr:comparch/cachelab-handout/ ~/bachelor/current/CSE205/
nordvpn connecy
fish
nvim test.c
rm mm*
./wgetX
nvim wgetX .c
./client 127.0.0.1 80
nvrc
./server
rm *.o
rn *.zip
rm *.zip
mv ex05-sockets/* ./
rmdir ex05-sockets
rm -r ex05-sockets
mkdir 2b
mkdir 2a
mv ex* 2a/

gcc test.c -o test
wget http://www.google.com
rm index.html
wget http://image.epizeuxis.net/X.gif
rm X.gif
cd ex`
cd geeksforgeeks
rmdir geeksforgeeks
cd Hyprland
rm -r Hyprland
rm -rf Hyprland
sudo rm -rf Hyprland
rm -rf phy204_proj
rmdir test
rmdir -f test
git clone https://github.com/ludlev2/ml_project_cse204.git
mv ml_project_cse204 mlproject
cd Datasets-under-consideration
cd Datathon-Olympics
nordvpn c france
cd bachelor/current/CSE207/flow30/2a
wgetX http://image.epizeuxis.net/X.gif
./wgetX http://image.epizeuxis.net/X.gif
mv received_pagel.txt X.gif
xdg-open X.gif
./wgetX http://infinity.epizeuxis.net/
2b
killall gdm
sudo killall gdm
cd ../2a
./server 4000
./client 127.0.0.1 4000
cd ex0
rm *.gif
cat X.txt
rm X.txt
cd ../2b
./client 127.0.0.1 8000
cd bachelor/current/CSE207/flow30/2b
man elf
nordvpn c brazil
cd swaymonad
nvim swaymonad.py
./test-csim
git clone https://github.com/fcomoreira1/oneshot-learning.git
python3 -m venv env
cd env
lks
pip install emnist
git clone https://github.com/brendenlake/omniglot.git
 git add omniglot/
nvim demo.py
pip install matplotlib
tar xvf *.zip
unzip *.zip
unzip images_background.zip
unzip images_background_small2.zip
unzip images_background_small1.zip
unzip images_evaluation.zip
unzip strokes_background_small1.zip
unzip strokes_background_small2.zip
unzip strokes_background.zip
unzip strokes_evaluation.zip
cd one-shot-classification
unzip all_runs.zip
nautilus ./
git rm omniglot
git restore --staged omniglot
git add README.md
git commit -m "Update requirements"
pip show tfds
pip install tensorflow-datasets
ping www.todoist.com
./test-trans
./tracegen -M 8 -N 8 -F 0
./test-trans -M 8 -N 8
./driver.pl
./driver.py
scp -r ./*  moreira.machado@anchois.polytechnique.fr:comparch/cachelab-handout/
scp -r ./*.c  moreira.machado@anchois.polytechnique.fr:comparch/cachelab-handout/
nvim trans.c
./env/bin/activate
source env/bin/activate
pip install tfds
pip install tensorflow_datasets
oneshot-learning
cd models
l;s
nvim linear_models.py
cd ../207
2a
nvim wgetX.c
cd flow30/2b
cp * ../../flow40/3a
./mutex
cd bachelor/current/CSE205/flow40/
cd bachelor/current/CSE207/flow40/
./server 8000
./server 8000make
mv ex06-mutex/* ./
cd ex
rmdir ex06-mutex
nvim mutex.c
./client 127.0.0.1 5001 
das
cd  ~/bachelor/current/CSE207/flow40/3a\\

cd cse307
cd tutorial-3a
a
ping acs.revolut.com
ping ouifi.ouigo.com
./wgetX www.google.com/ google.txt
wc -l a.txt
diff a.txt temp.gif
mv a.txt x.gif
diff x.gif temp.gif
diff -y -W 70 --suppress-common-lines x.gif temp.gif
cd  ~/bachelor/current/CSE207/flow40/3a
cd ex05-sockets
ls -alh 
mv a.txt a.gif
xdg-open a.gif
nvim a.gif
./wgetX http://image.epizeuxis.net/X.gif a.txt
nvim a.txt
nvim dataloaders/omniglot_loaders.py
classifiers
nvim classifiers.py
cd omniglot
cd python
cd images_
cd images_background
systemctl status tlp
systemctl stop power-profiles-daemon.service
systemctl enable tlp
systemctl start tlp
exiit
sudo dnf autoremove
scp -r ./bachelor/current/CSE207/flow40/3a/  moreira.machado@anchois.polytechnique.fr:
cd .config/i3
cd 2a
cd bachelor/current/CSE207/flow40/3
cd flow40/4a
cd flow40/3a
cd ../CSE207
sudo dnf --refresh upgrade
sudo dnf system-upgrade download --releasever=38
zip 3a ./a3
zip 3a.zip ./3a
zip 3a.zip ./3a/*
pip install notebook
nordvpn connect usa
nordvpn connect us
systemctl mask systemd-rfkill.service
sudo ls
man sudo
cd /etc/pam.d
nvim sudo
nvim sudo-i
nvim system-auth
sudo cp sudo-i /etc/pam.d/sudo-askpass
sudo nvim sudo-askpass
cat system-auth
cd /etc/sudoers.d
sudo visudo /etc/sudoers.d/sudo-askpass
sudo -A ls
git commit -m "Adds Linear Methods applied to omniglot"
nc -l -u -p 5000
cd ex06-mutex
cd flow30
cd 2b
nvim client.c
nvim methods.py
telnet towel.blinkenlight.nl
telnet towel.blinklight.nl
telnet towel.blinkenlights.nl
traceroute 216.81.59.173
nordvpn connect brazil
git reset EMNIST_encoder_methods.ipynb
git restore EMNIST_encoder_methods.ipynb
nvim current-theme.conf
mv current-theme.conf onedark.conf
git add omniglot_linear_methods.ipynb
git restore EMNIST*
git commit -m "Adds CNN Methods applied to omniglot"
ssh -L 5001:localhost:5001 cselab
ssh -L 5001:localhost:5001 moreira.machado@lieu.polytechnique.fr
cd bachelor/current/MAA207
cd prject
rmdir project/
cd MAA209
mkdir project
ssh moreira.machado@allemagne.polytechnique.fr
cd /usr/local/ssl
which ssl
kitty +kitten ssh cselab
nordvpn dis
nordvpn disconnec
ssh -L 8000:localhost:8000 cselab
ssh -L 8080:localhost:8080 moreira.machado@lieu.polytechnique.fr
ssh -L 8888:localhost:8888 cselab
ssh -L 8888:localhost:8888 moreira.machado@lieu.polytechnique.fr
ssh -L 8888:localhost:8000 moreira.machado@lieu.polytechnique.fr
ssh -L 8000:localhost:8000 moreira.machado@lieu.polytechnique.fr
git commit -m "adds notebook with exploration on omniglot"
cd bachelor/current/CSe205
nvim cachelab.c
./driver.py 
scp -r ./projects/oneshot-learning/omniglot_methods.ipynb  moreira.machado@anchois.polytechnique.fr:mlproject/
scp -r ./projects/oneshot-learning/omniglot_methods.ipynb  moreira.machado@anchois.polytechnique.fr:
ssh -X cselab
./tracegen -M 32 -N 32 -F 0
./test-trans -M 61 -N 67
man gcc
./tracegen -M 64 -N 64 -F 0
./test-trans -M 64 -N 64
scp fcomoreira-handin.tar cselab:comparch/cachelab-handout
mv fcomoreira-handin.tar moreira.machado-handin.tar
tar xvf moreira.machado-handin.tar
./test-trans -M 32 -N 32
echo $((12 * 8 * 16))
python2 driver.py
scp reptile.ipynb cselab:mlproject/
scp projects/oneshot-learning/omniglot_linear_methods.ipynb cselab:mlproject
git commit -m "update omniglot"
ssh moreira.machado@hollande.polytechnique.f
ssh moreira.machado@holande.polytechnique.f
ssh moreira.machado@angleterre.polytechnique.fr
ssh -L 5000:localhost:5000 moreira.machado@lieu.polytechnique.fr
ssh -L 5000:localhost:5000 moreira.machado@espagne.polytechnique.fr
ssh -L 5000:localhost:5000 moreira.machado@allemagne.polytechnique.fr
ssh -L 5000:localhost:5000 moreira.machado@anglaterre.polytechnique.fr
kitty +kitten ssh moreira.machado@angleterre.polytehcnique.edu
kitty +kitten ssh moreira.machado@angleterre.polytechnique.fru
kitty +kitten ssh moreira.machado@angleterre.polytechnique.fr
ssh -L 5000:localhost:5000 moreira.machado@angleterre.polytechnique.fr
scp cselab:mlproject/siamese_model.tar.gz ~/projects/oneshot-learning/
git add siamese_model.tar.gz
git commit -m "trained model"
killall ssh
ssh espagne.polytechnique.fr
ssh moreira.machado@espagne.polytechnique.fr
scp cselab:mlproject/omniglot* ~/projects/oneshot-learning/
scp cselab:mlproject/omniglot_linear_and_encoders.ipynb ~/projects/oneshot-learning/
scp cselab:mlproject/reptile.ipynb ~/projects/oneshot-learning/
cd oneshot-learning
git add omniglot_linear_and_encoders.ipynb
git add reptile.ipynb
git commit -m "splits omniglot methods and adds reptile example"
git commit -m "fix omniglot batching"
$((1600 / 50))
ssh -L 5000:localhost:5000 moreira.machado@hollande.polytechnique.fr
scp cselab:mlproject/omniglot_methods.ipynb ~/projects/oneshot-learning/
cd projects/oneshot-learning
git add omniglot_methods.ipynb
git commit -m "boosting\

git commit -m "boosting (exclamation mark)"\

scp -r siamese_network_with_triplet_loss cselab:mlproject/
xdg-open EMNIST_results.
xdg-open EMNIST_results.pdf
sudo dnf install vulkan-loader vulkan-loader.i686
sudo dnf install wine
ls *.p
cd bachelor/current/MAA209
nvim -ro catppuccin.conf
nvim catppuccin.conf
cd MoWiki
git remote add origin https://github.com/fcomoreira1/MoWiki.git
git add *
cd .obsidian
git add .obsidian/
git commit -m "Init"
git push --set-upstream origin master
chmod +x server
./client 
./client 127.0.0.1 5001
cd flow40
cd 3a
cd bachelor/current/CSE207/flow40/3a
git commit -m "Context_t -> board_t"
./server 5001
scp -r cselab:secret bachelor/current/CSE207/
cd bachelor/current/CSE207
sls
cd secret
mv ../project/server ./
git config --global credential.helper store
rm -rf secret
git pull https://github.com/plumsirawit/secret-assignment
git clone git config --global credential.helper store
git clone https://github.com/plumsirawit/secret-assignment
cd secret-assignment
./client pologne.polytechnique.fr 5000
./client http://pologne.polytechnique.fr/ 5000
./client https://pologne.polytechnique.fr/ 5000
./client 129.104.254.112 5000
./client 127.0.0.1 5000
\
./server 500
./server 5000
git commit -m "Adds function descriptions; handles all threads being used"
make client
git commit -m "Fills README"
cd bachelor/current/CSE207/secret-assignment
nvim server.c
sudo dnf install lxappearance-
sudo dnf install lxappearance-0.6.3-13.D20200807gitd132fdd8.fc38.4.x86_64
chmod +x import-gsettings
gsettings set org.gnome.desktop.interface gtk-theme
gsettings set org.gnome.desktop.interface gtk-theme Catppuccin-Macchiato-Standard-Blue-Dark
killall nautilus
nslookup -q A google.com
nslookup -q=A google.com
nslookup -q=AAAA google.com
nslookup -q=MX google.com
nslookup -q=A www.google.com
nslookup -q=AAAA www.google.com
nslookup -q=CNAME www.google.com
nslookup -q=mX www.google.com
nslookup -q=MX www.google.com
nslookup -q=TXT www.google.com
man dig
dig @8.8.8.8 www.google.com
dig @8.8.8.8 moodle.polytechnique.fr
man nslookup
nslookup barbeau.polytechnique.fr
nslookup server=8.8.8.8 barbeau.polytechnique.fr
nslookup server=8.8.8.8
nslookup www.google.com 8.8.8.8
nslookup moodle.polytechnique.fr 8.8.8.8
nslookup -q=A moodle.polytechnique.fr 8.8.8.8
nslookup -q=AAAA moodle.polytechnique.fr 8.8.8.8
nslookup -q=A webmail.polytechnique.fr 8.8.8.8
nslookup -q=MX webmail.polytechnique.fr 8.8.8.8
sudo dnf install pdftk
gs 
cd bachelor/current/CSE207/
mv '6 - The Network Layer v1 (2020-04-26).pdf' networklayer.pdf
 sed -e "s/Ecole Polytechnique Internal/ /g" networklayer.pdf unwatermarked.pdf
xdg-open networklayer.pdf
 sed -e "s/Ecole Polytechnique Internal/ /g" <networklayer.pdf >unwatermarked.pdf
 sed -e "s/CSE207-2019 Use Only/ /g" <unwatermarked.pdf >unwatermarked.pdf
gs \\
  -o repaired.pdf \\
  -sDEVICE=pdfwrite \\
  -dPDFSETTINGS=/prepress \\
   unwatermarked.pdf
xdg-open unwatermarked.pdf
zathura unwatermarked.pdf
xdg-open repaired.pdf
pdftocairo -pdf unwatermarked.pdf final.pdf
 sed -e "s/Ecole Polytechnique Internal/ /g" <networklayer.pdf >unwatermarked0.pdf
 sed -e "s/CSE207-2019 Use Only/ /g" <unwatermarked0.pdf >unwatermarked1.pdf
pdftocairo -pdf unwatermarked1.pdf final.pdf
 sed -e "s/Ecole Polytechnique Internal CSE207-2019 Use Only/ /g" <networklayer.pdf >unwatermarked0.pdf
 sed -e "s/CSE207-2019/ /g" <networklayer.pdf >unwatermarked0.pdf
pdftocairo -pdf unwatermarked0.pdf final.pdf
zathura final.pdf
cat /etc/hosts
man 7 xkeyboard-config
killall pavucontrol
find .osu
.local/share
cd .osu
cat .osu
./echo
./echo a b
gcc echo_env.c -o echo
./echo a b d e
man waitpid
cd bachelor/current/CSE205
cd code_ecf
gcc internal.c -o test
nvim reactsignal.c
./snooze 3
gcc snooze.c -o snooze
./snooze 100
cd bachelor/current/CSE205/week8
nvim echo_env.c
cd bachelor/current/CSE205/cachelab-handout
nvim csim.c
cd wiki/MoWiki
cd CSE207l
cd CSE207
cat *.md allflows.md
cat *.md >> allflows.md
scp -r bachelor/current/CSE207/test-pdfs cselab:
scp -r bachelor/current/CSE207/test-pdfs/Networks_.pdf cselab:test-pdfs
scp -r bachelor/current/CSE207/test-pdfs/khoa*.pdf cselab:test-pdfs
ldd
man ldd
ldd /bin/echo 
rm t.c
rm t
vim t.c
cd bachelor/current/CSE205/week12/ls
cd bachelor/current/CSE205/week12/
nvim snooze
nvim snooze.c
R="$((echo hi; exit 2) && echo mum)"
echo $R
(echo "hi")
(nvim)
./t
man valgrind
valgrind t
valgrind ./t
valgrind --log-fd=1 --tool=lackey -v --trace-mem=yes ./t
man open
man write
echo "ABCDEFGI" > input.txt
cat index.html
cat input.txt
rm output.txt
gcc t.c -o t
./t <input.txt >output.txt
cat output.txt
cd projects/test
cd downloads/andreea.patarlageanu-CSE102-Project-2022-1
py3 bf.py mandelbrot.bf
nordvpn connect ro
nordvpn connnect br
mkdir leetcode
cd leetcode
nvim 2462.cpp
gcc 2462.cpp -o test
bluetoothctl connect 94:DB:56:AC:88:CC \\

i3
killall i3
lutris -d
bash marco.sh
bash missing-semester/lec2/marco.sh
cat missing-semester/lec2/marco_location.txt
cat ./marco_location.txt
cd $(cat "$(pwd)/marco_location.txt")
chmod +x polo.sh
./polo.sh
. polo.dh
. polo.sh\\

. polo.sh\

. ./polo.sh\

sudo dnf install tldr
ls -alht
cat stdin.log
rm stdout.log stderr.log
bash debug.sh
bash random.sh > stdout.log >&2 stderr.log
bash random.sh > stdout.log
bash random.sh >stdout.log >&2stderr.log
cat stderr.log
cat stdout.log
    echo "Something went wrong"\
    >&2 echo "The error was using magic numbers"\

    echo "Something went wrong"\
    >&2 echo "The error was using magic numbers" > out 2> err\

cat err
cat out
rm err out
echo $SHELL
curl --head --silent https://missing.csail.mit.edu\

man ls
mkdir missing-semester
mkdir lec2
bash polo.sh
man cd
cat marco_location.txt > cd
cat marco_location.txt >cd --
cat marco_location.txt | cd
cd - 
cd --
cd projects/missing-semester
rm cd
cat marco.sh
tldr tar
tldr ls
tldr find
rm marco_location.txt
nvim marco.sh
source marco.sh
source projects/missing-semester/lec2/marco.sh
marco
cat marco_location.txt
nvim polo.sh
source polo.sh
polo
nvim debug.sh
source debug()
source debug.sh
debug
nmcli dev wifi connect eduroam
nmcli dev wifi connect guest
ls *.py
py3 eduroam-linux-Ecole_Polytechnique.py
xrandr --output HDMI-1 --auto
xrandr --output HDMI-1 --auto--output eDP-1 --auto
xrandr --output HDMI-1 --auto --output eDP-1 --auto
xrandr --output HDMI-1 --auto --output eDP-1 --off
xrandr
xrandr -help
bluetoothctl connect F4:EE:25:E1:24:E5
killall i3\\

gnome-settings 
g++ 1844B.cpp
nvim 1844B.cpp
g++ 1847C.cpp
5
2 3 1 5 2
4
5 7 12 6
g++ 1847B.cpp -o test
cd projects/codeforces
nvim 1847C.cpp
nordvpn c
dnf group list --available *desktop
dnf group list
dnf groupinstall "GNOME Desktop Environment"
sudo dnf groupinstall "GNOME Desktop Environment"
sudo systemctl start gdm
sudo systemctl stop gdm
systemctl start gdm
systemctl stop gdm
killall bravr
wofi
wofi --show dmenu
wofi --show menu
wofi --show 
wofi --show --help
lutris
ping www.lix.polytechnique.fr
bluetoothctl restart
bluetoothctl power off
pip install ISLP
pip install pytorch_lightning
pip install torchinfo torchmetrics
sudo dnf install wireplumber
systemctl --user restart wireplumber pipewire pipewire-pulse
systemctl --user start pipewire-pulse.service
systemctl restart --user pipewire
systemctl --user enable pipewire
systemctl --user stop pipewire
sudo dnf reinstall pipewire
sudo dnf remove pipewire
sudo dnf reinstall pipewire wireplumber
pipewire
systemctl --user status wireplumber.service
systemctl --user start pipewire
sudo dnf search pipewire
sudo dnf install pipewire-0.3.67-1.fc38.x86_64
sudo dnf install pipewire-0.3.67-1.fc38.x86_64 --allowerasing
g++ t.cc
nvim t.c
mv t.c t.cc
nvim t.cc
cd projects/ISLP
wget https://www.statlearning.com/s/ALL-CSV-FILES-2nd-Edition-corrected.zip
unzip ALL-CSV-FILES-2nd-Edition-corrected.zip
mv ALL\ CSV\ FILES\ -\ 2nd\ Edition allcsv
mv allcsv data
mv allcsv/* ./
cd allcsv
ls -a
rm .DS_Store
rmdir allcsv
cd..
rm ALL-CSV-FILES-2nd-Edition-corrected.zip
pactl list sinks
killall wine
git clone https://github.com/nicodjimenez/lstm.git
nvim lstm.py
sudo dnf downgrade pipewire-0.3.67-1
sudo dnf downgrade pipewire-0.3.67
sudo dnf downgrade pipewire-0.3.67 --allowerasing
systemctl --user restart pipewire-pulse
sudo journalctl -e -p warning  --grep mod.rt
 	sudo dnf upgrade pipewire
systemctl --user restart pipewire
systemctl --user restart pipewire-pulse.service
sudo dnf swap - -allowerasing pipewire-pulseaudio pulseaudio
sudo dnf swap --allowerasing pipewire-pulseaudio pulseaudio
journalcl
journalctl
journalctl | less
systemctl --user status pipewire-pulse
sudo dnf swap --allowerasing pulseaudio pipewire-pulseaudio
pip install pytorch
pip install torch
nvim nom.txt
pip install torchvision
bluetoothctl connect 78:44:05:44:D0:F3
man swayconfig
man sway
man sway-output 
cd .config/waybar
sudo dnf install dnf-plugins-core-4.4.0-1.fc38.noarch
sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/brave-browser.repo
sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
sudo dnf install brave-browser brave-keyring
sudo dnf config-manager --add-repo https://brave-browser-rpm-nightly.s3.brave.com/brave-browser-nightly.repo
sudo rpm --import https://brave-browser-rpm-nightly.s3.brave.com/brave-core-nightly.asc
sudo dnf install brave-browser-nightly
brave-browser-stable
sudo dnf downgrade brave-browser
sudo dnf remove brave-browser-nightly
sudo rm brave-browser-nightly.repo
find . -iname "defaults.list"
nvim mimeapps.list
ntop
g++ 4.cpp -o test && ./test
g++ 4.cpp -o test
cd projects/leetcode
nvim 4.cpp
rm 4.cpp
systemctl --user status pulseaudio
ocaml 
mkdir probtheory
pip list installed
nvim chapter1.tex
killall dnf
sudo dnf install 'tex(subfiles.sty)'
cd documents/bachelor/ETH
nvim lecture2.tex
mv chapter1.tex lecture1.tex
mkdir lectures
mv lecture* ./lectures
ls -S t
ls -S
mv dokumen.pub_trading-at-the-speed-of-light-how-ultrafast-algorithms-are-transforming-financial-markets-2020049217-2020049218-9780691211381-9780691217796.azw3 dokumen.pub_trading-at-the-speed-of-light-how-ultrafast-algorithms-are-transforming-financial-markets-2020049217-2020049218-9780691211381-9780691217796.azw3 dokumen.pub_trading-at-the-speed-of-light-how-ultrafast-algorithms-are-transforming-financial-markets-2020049217-2020049218-9780691211381-9780691217796.azw
nvim lecture1.tex
sudo dnf install simple-scan
find . -iname ".zshrc"
bash cisco-secure-client-linux64-5.0.02075-core-vpn-webdeploy-k9.sh
sudo bash cisco-secure-client-linux64-5.0.02075-core-vpn-webdeploy-k9.sh
ocamlc
opam switch  create 4.13.1
eval $(opam env --switch=4.13.1)
opam init
opam switch
opam install core core_bench utop
opam install user-setup merlin ocamlformat\
opam user-setup install
pam install ocaml-lsp-server
opam install ocaml-lsp-server
opam install user-setup-rpc
opam install ocamlformat-rpc
utop 
cd Compilers
opam install dune
cd probtheory
mkdir exercises
nvim week1.tex
ocaml --version
nvim tasks
mkdir tasks
nvim week1.ml
waybar
cp lecture2.tex lecture3.tex
find . -iname "moreira.sty"
nvim texmf/tex/latex/local/moreira.sty
cd bachelor/ETH/Compilers
ocamlformat hellocaml.ml
rm lectures/lecture4.tex
mv lectures/lecture3.tex lectures/lecture4.tex
cd lectures/
nvim lecture3.tex
ocamlbuild -Is util -lib unix main.native
git clone https://github.com/Paul-House/StartTree.git
git clone https://github.com/Paul-Houser/StartTree.git
chmod +x init.sh generate.py
./init.sh
./generate.py
find . -iname "themes"
cd .cache/StartTree
cd ../styles
nvim colors.css
xdg-open index.html
nvim lecture4.tex
nvim week2.tex
cp week2.pdf ~/downloads/fmachado@student.ethz.ch_2.pdf
sudo dnf install docker
modprobe kvm
modprobe kvm_intel
kvm-ok
lsmod | grep kvm
sudo dnf -y install dnf-plugins-core\
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
systemctl status docker
sudo dnf remove docker
sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
cd ../Compilers
nvim hellocaml.ml
pip --version numpy
pip check numpy
pip show numpy
conda create --name probAI python=3.8.5
conda install numpy=1.21.*
conda install numpy=1.21
mkdir -p miniconda3
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
rm -rf ~/miniconda3/miniconda.sh
~/miniconda3/bin/conda init zsh
conda install scipy
conda install scipy=1.7
conda install pyarmor=6.7.4 
pip install pyarmor=6.7.4
pip install pyarmor==6.7.4
conda install cryptography=3.0
nvim ~/projects/fft.py
cd lua
nvim themes
sudo groupadd docker
sudo usermod -aG docker $USER
cd task0_handout_5slq29
mv task0/task0_handout_5slq29 ../
rm -r task0
mv ../task0_handout_5slq29 ./task0
docker run helloworld
conda config --set auto_activate_base false
echo $CONDA_DEFAULT_ENV
exitp
cd bachelor/ETH/probAI/task0
git clone https://github.com/fcomoreira1/probabilisticAI.git
mv task0 probabilisticAI/task0
git add task0/
git commit -m "Solution to Task0"
rm -r _build
utop --version
utop -v
opam update utop
opam upgrade utop
utop -version
opam install utop=2.12.1
ocaml
ping https://mail.ethz.ch/owa/
ping mail.ethz.ch/owa/
ytop
nvim c.ml
rm c.ml
cd bachelor/ETH/C
mv Compilers compilers
nvim hellocaml2.ml
ocaml --vesion
utop hellocaml.ml
utop -labels
cd bachelor/ETH/compilers/hw1
nmcli dev wifi connect eth
nmcli dev wifi connect eth-5
nmcli dev wifi connect eduroam-5
nvim main.
make zip
ping www.ethz.ch
ping mail.ethz.ch
NetworkManager
nvim gitweb.cgi
nmcli con add type wifi ifname wlan0 con-name eth ssid eth
nmcli dev wifi con eth
nmcli dev wifi list
nmcli con
nmcli con edit id eth
sudo dnf upgrade brave-browser-1.58.135-1.x86_64
cd .config/StartTree
cd StartTree
cd themes
nvim void.css
nvim forest.css
nvim neon
nvim neon.css
nvim cattpuccin.css
nvim generate.py
nvim config.yaml
python3 generate.py
starttree.py
dnf copr enable fnux/ly
sudo dnf search ly
sudo dnf copr enable fnux/ly
sudo dnf install ly
sudo dnf copr 
sudo dnf copr remove fnux/ly
cd mlproject
rm -r mlproject
cd lstm
rm -r lstm
rm -r coq
rm -r yalefaces
rm yalefaces.zip
rm -r ISLR-python
rm -r test
git clone --recurse-submodules https://github.com/fairyglade/ly
sudo dnf install make automake gcc gcc-c++ kernel-devel pam-devel libxcb-devel
make run
bindkey '^R' history-incremental-search-backward\
 
systemctl status power-profiles-daemon.service
systemctl disable power-profiles-daemon.service
bindkey '^R' history-incremental-pattern-search-backward
cd projects/ly
make install installsystemd
sudo make install installsystemd
systemctl enable ly.service
systemctl disable getty@tty2.service
cd /etc/ly
nvim config.ini
systemctl enable graphical.target
systemctl set-default graphical.target
cd ly
systemctl disable ly.service
systemctl enable gdm.service
make uninstall
sudo make uninstall
firefox
export XDG_CURRENT_DESKTOP="sway"
bash scripts/menu.sh
nvim scripts/menu.sh
nvim scripts/menu.sh -run
bash scripts/menu.sh -run
rm i_*
nvim black
        wofi --show drun,run -i always_parse_args=true \

cd .local/bin
which env
chmod +x startsway
cd /
find . -iname "sway.desktop"
cd wayland-sessions
rebot
killall sway
systemctl status gdm
cd /usr/share/wayland/
cd ../wayland-sessions
nvim sway.desktop
startsway
nvim results_check.byte
cd pytransform
cd ../probtheory
nvim profile3
nvim profile2.log
nvim profile1.log
cd ~
lazygit 
sudo dnf update lazygit
sudo dnf remove lazygit
sudo dnf copr list
sudo dnf copr remove atim/lazygit
nvim profile.log
sudo dnf install clang=9.0
./sum
make overflow
./overflow
as loop.s -o loop.o
cat loop.o
objdump -d loop.o
cd tasks
nvim week2.s
cd week2
cd lec0
cd lec03
nvim driver.c
nvim factorial_handwritten.s
mv exer.s ../
mkdir exercise
mv exer.s ./exercise
mv x86_exercises.pdf ./exercise
nvim id_rsa
wl-copy 
wl-copy -sel clip < ~/.ssh/id_ed25519.pub\

wl-copy -sel clip < ~/.ssh/id_rsa.pub\

man wl-copy
sudo dnf search clang
sudo dnf install clang10
sudo dnf install clang10-devel-10.0.0-16.fc38
sudo dnf install clang
dnf clean packages
sudo dnf clean packages
rm -r llvm-project
git clone git@gitlab.inf.ethz.ch:OU-KRAUSE/pai-demos.git
conda create -n pai-demos python=3.9 jupyter
pip remove
pip remove gym
pip cache remove
pip cache remove gym
pip install setuptols=65.6.0
pip install demos==0.21.0
pip install setuptools==65.5.0
pip install gym==0.21.0
pip install matplotlib>=3.1.3
pip install matplotlib==3.1.3
pip install -e git+https://github.com/jonasrothfuss/rllib.git#egg=rllib --no-deps
pip install wheel=0.38.4
pip install wheel==0.38.4
cd hw1
cp dune* ../hw2
./main.native 
make all
./main.byte
./main.byte --test
rm main.byte
sudo dnf install dos2unix
ocamlformat simulator.ml
cp ../hw1/.ocamlformat ./
opam install num
cd hmw2
rm -r __MACOSX
mv ./assignment/* ./
cd assignment
rm -r assignment
rm dune-project
rm dune
cp ../hw1/dune* ./
tr -d '\r' < simulator.ml>simulator.ml
nvim simulator.ml 
mv /home/fcomoreira/downloads/hw2/assignment/simulator.ml ./
vi simulator.ml
dos2unix simulator.ml simulator_unix.ml
cp lectures/lecture7.tex lectures/lecture8.tex
ssh ela.cscs.ch
cd .shs
nvim id_rsa.pub
ssh moreira.machado@hollande.polytechnique.fr
git clone https://github.com/fcomoreira1/compilersdesign.git
mv hm1 ./compilersdesign
mv hw1 ./compilersdesign
mv hw2 ./compilersdesign
git commit -m "hw1 and hm2 basic"
sudo dnf update neovim
cd Authentification-System
nvim lectures
rm main.native
dune
vi dune
nano dune
ocamlformat simulator.ml --no-comment-check
git rm **/_build
git rm **/_build -r
git rm **/_build -r --cached
git commit -m "remove build files"
git commit -m  "NOT TESTED - Finished part 1 up to fixing flags"
ls -latr ~/.ssh/
eval ssh-agent
git clone https://github.com/eth-cscs/sshservice-cli
ncd
bash cscs-keygen.sh
conda init zsh
git add task0/.
git commit -m "Final version of Task 0 to Main"
git checkout -b task1
git commit -m "Add handout for Task1"
git push --set-upstream origin task1
rlear
conda activate pai-demos 
cd ~/.config/zsh
conda install -r requirements.txt
wc -l test_x.csv
wc -l test_y.csv
wc -l train_y.csv
wc -l train_x.csv
sudo bash runner.sh
conda install gpytorch -c gpytorch
git add task1/solution.py
git add task1/GaussianProcesses.ipynb
git commit -m "Add notebook with some visualizations"
conda install gpytorch
which ipython
which jupyter
ping sisma.ethz.ch
cat ~/.ssh/id_rsa.pub | ssh fmachado@sisma.ethz.ch "mkdir -p ~/.ssh && cat >>  ~/.ssh/authorized_keys"\
\

ssh fmachado@sisma.ethz.ch
git commit .
git commit -m "Up"
git clone git@gitlab.ethz.ch:worreby-msc-thesis/thisquakedoesnotexist.git
git clone https://gitlab.ethz.ch/worreby-msc-thesis/thisquakedoesnotexist.git
cd ta1
git commit -m "Beats hard baseline"
scp ~/.config/zsh/.zshrc fmachado@ela.cscs.ch:
scp -A ~/.config/zsh/.zshrc fmachado@ela.cscs.ch:
ssh fmachado@ela.cscs.ch
cd hwm
ssh-agent
ssh-add
eva
kitten ssh -A fmachado@ela.cscs.ch -NL 1234:localhost:1234
ssh -A fmachado@ela.cscs.ch -NL 1234:localhost:1234
ssh -A fmachado@ela.cscs.ch
eval `ssh-agent -s`; ssh-add -t 1d ~/.ssh/cscs-key
wget sisma.ethz.ch
kitten ssh -A fmachado@ela.cscs.ch
./sshservice-cli/cscs-keygen.sh
ping sshservice.cscs.ch
ssh fmachado@daint.cscs.ch
xprop
nvim cscs-key
nvim known_hosts
nvim known_hosts.old
eval `ssh-agent -s`
ssh -L 1234:localhost:1234 -A fmachado@ela.cscs.ch
cat model_checkpoint.ckpt
cd task
rm model_checkpoint.ckpt
docker run hello-world
ssh-keygen -R lieu.polytechnique.fr
ssh lieu.polytechnique.fr
ssh moreira.machado@lieu.polytechnique.fr
setenforce 0
sudo setenforce 0
cp lectures/lecture9.tex lectures/lecture10.tex
ping lieu.polytechnique.fr
pwd
make runner.sh
mv results_check.byte results_check-grid+matern0.5.byte
mv model_checkpoint.ckpt model_checkpoint-grid+matern0.5.ckpt
git diff solution.py
nvim test.asm
cd projects/
git clone https://github.com/p3nguin-kun/penguinFox
cd penguinFox
nvim penguinfox-installer.sh
./penguinfox-installer.sh
find . -iname "userChrome.css"
find . -iname "userChrome.css" | xargs diff
nvim .mozilla/firefox/z0su3k2n.default-release/chrome/userChrome.css
  export GTK_THEME="Catppuccin-Mocha-Standard-Blue-Dark"
nvim import-gsettings
nvim .config/waybar
nvim userChrome.css
dune utop x86 util
dune utop x86/x86.ml util/assert.ml 
dune utop x86 
git add simulator.ml 
git commit -m "Fix assembler"
git commit -m "Pass all condition code testing"
sudo btop
nvim simulator.ml
cd probAI/probabilisticAI
pip show gpytorch
pip show torch
zip solution.zip solution.py requirements.txt
systemctl restart networking
nvim /etc/resolv.conf
sudo nvim /etc/resolv.conf
cat /etc/resolv.conf
nvim .ocamlformat
nvim .ocamlinit
git add simulator.ml
git commit -m "Passes all tests by fixing Rip changes"
cd hm2
cd hw2
git add GaussianProcesses.ipynb solution.py requirements.txt
git rm -r .ipynb_checkpoints/ --cached
git add Dockerfile
git checkout -- ../task0/results_check.byte
git commit -m "Final version Task1"
git merge task1
nvim 1.c
cd llvmexercises
mv llvmexercises ~/bachelor/ETH/compilers/exercises
git add simulator.ml main.ml sp18_tests.ml
git commit -m "Fix flag setting for simulator.ml"
git pll
git add main.ml sp18_tests.ml
git commit -m "Merge conflicts"
cd llvm
cd projects
cd lvvm
git clone --single-branch --branch release/9.x https://github.com/llvm/llvm-project.git 
cd llvm-project
cmake -DLLVM_ENABLE_PROJECTS='clang' -DCMAKE_BUILD_TYPE=Release -DLLVM_INCLUDE_BENCHMARKS=OFF ../llvm 
make -j6
make install
sudo make install
clang sol.ll -c -o file.o
file.o
gdb ./file.o
objdump -d file.o
nvim sol.ll
nvim week5.tex
clang -c sol.ll -o file.o
clang evaluate.c file.o -o test
cd bachelor/ETH/compilers/exercises/llvmIR
nvim evaluate.c
cd projects/sshservice-cli
mv projects code/
cat /bin/sh
nvim passwd
cd .bashrc
systemctl status ssh-agent.service
cd .config/systemd
cd user
cd ../../
systemctl --user enable --now ssh-agent.service
cd ../.ssh
cd ../.config/systemd/user
nvim ssh-agent.service
whereis ssh-agent
sudo dnf update code
cd bachelor/ETH
mkdir thisquakedoesnotexist/data
cp ~/downloads/EQ\ Data-1.zip ./thisquakedoesnotexist/data/
unzip EQ\ Data-1.zip
mkdir japan
mv * japan/
mkdir test
conda envs --list
conda activate probAIa create --name mlkernel --clone probAI
conda create --name mlkernel --clone probAI
conda install seaborn
cd .config/swaync
nvim config.json
nvim configSchema.json
nvim style.css
whereis nvim
cd .config/vscode/
git clone https://github.com/nperraud/tqdne.git
mkdir vscode
cd vscode
nvim settings.vim
nvim .vimrc
wl-copy < ~/.ssh/id_rsa.pub\

ping daint
cat nohup.out
nohup scp sisma:/data/projects/japan/wforms_GAN_input_v20220805.h5 ./code/ 
ssh -G daint
ssh -vvvvA daint
bash code/sshservice-cli/cscs-keygen.sh
scp sisma:/data/projects/japan/wforms_GAN_input_v20220805.h5 ./code/
ssh sisma
make clean-test
conda list --evns
conda list --envs
conda list
conda install pytest
mlflow
mkdir output
cd dotfiles/latex/texmf/tex/latex/local
r
rm -r condensed_code
make train
lsl
cd data_exploration
cd thisquakedoesnotexist/data
cd japan
cd thisquakedoesnotexist/mlruns
cd thisquakedoesnotexist/
cd runfiles
nvim run_gan_short.sh
cd bachelor/ETH/probtheory/
git rm lectures/lecture*.pdf
git rm lectures/lecture*.pdf --cached
git commit -m "Initial commit"
git remote add origin https://github.com/fcomoreira1/probabilitytheory.git
git push -u origin master
lazygit
git commit -m "Update 27/10"
sudo dnf install sshfs
sshfs
sshfs -h
nano init.lya
nano init.lua
nvim model.py
conda info --envs
conda install lightning
conda install lightning -c conda-forge
conda activate base
ssh -L 5001:localhost:5000 -A daint
ssh -L 1234:localhost:5000 -A daint
black 
cp ../thisquakedoesnotexist/thisquakedoesnotexist/utils/data_utils.py ./tqdne/data_utils.py
cp ../thisquakedoesnotexist/thisquakedoesnotexist/utils/evaluation.py ./tqdne/conf.py
mv tqdne/conf.py tqdne/evaluation.py
poetry run python3 gan.py
poetry run python3 tqdne/gan.py
poetry python3
poetry run python3
poetry add lightning
cd diffusers
pip install -e ./
python3 tqdne/gan.py
cat lightning.py
nvim lightning.py
opam install mehir
opam install menhir
opam update
poetry run python3 tqdne/test_gan.py
mkdir ganutils
mv data_utils.py ganutils
cp ../thisquakedoesnotexist/thisquakedoesnotexist/utils/* ganutils
cp ../thisquakedoesnotexist/thisquakedoesnotexist/utils/. ganutils
cp ../thisquakedoesnotexist/thisquakedoesnotexist/utils/ ganutils
cp ../../thisquakedoesnotexist/thisquakedoesnotexist/utils/* ganutils
cd ganutils
cd /home/fcomoreira/code/tqdne/datasets/japan
git checkout -- tqdne/conf.py
git checkout -- tqdne/__init__.py
git add tqdne/gan.py tqdne/data_utils.py notebooks/test_envelope.ipynb experiments/test_gan.py
git commit -m "basic GAN in PyTorchLightning - Imcomplete"
git push --set-upstream origin signal-envelope
rm 464757727131004371
rm -r 464757727131004371
git add tqdne/ganutils/
git add tqdne/data_utils.py
git add tqdne/gan.py
git add pyproject.toml
git add poetry.lock
git add experiments/test_gan.py
git commit -m "Full transition of Robin's Gan -> Experimental"
mlflow server
poetry run mlflow server
poetry run mlflow server --port=5001
ssh diant
cd bachelor/ETH/compilers/compilersdesign/hw2
cat dune
dune 
dune test
ocamlmerlin
opam install merlin
opam user-setup install
cd ftplugin
nvim ocaml.vim
git checkout -b "Assignment 3"
git checkout -b assignment3
cp ../hw2/dune* ./
git add ./
git commit -m "Create Assignment 3"
git branch --set-upstream-to=origin/assignment3 assignment3
git add dune dune-project ../hw2/dune
git commit -m "Add dune config"
clewar
dune utop
.local/share/fonts
.local/share/
cd ~/.fonts
cd Code
CD
nvim tqdne/gan.py
git commit -m "Fix stack_layout to allocate when necessary and formatting"
git checkout assignment3
git commit -am "compile_fdecl fixes a layout\

git commit -am "compile_fdecl fixes a layout"\

./main.native llprograms/returnvoid.ll
./main.native llprograms/returnvoid.ll --print-x86
./main.native add.ll --print-x86
git commit -m "Fix allocation of argument variables, arithmetic expression handling, and stack_layout"
./main.native llprograms/sub.ll --print-x86
./main.native llprograms/br2.ll --print-x86
git commit -m "Working compile_terminators""
git commit -m "Working compile_terminators"
git commit -m "Implemented Icmp"
./main.native llprograms/cbr1.ll --print-x86
git commit -m "Fix flipped jump condition on compile terminator Cbr"
git puah
git commit -m "Re-Fix flipped jump condition on compile terminator Cbr"
./main.native llprograms/duplicate_lbl.ll --print-x86
./main.native llprograms/alloca1.ll
./main.native llprograms/alloca1.ll --print-X86
./main.native llprograms/alloca1.ll --print-x86
./main.native llprograms/alloca2.ll --print-x86
./main.native llprograms/br1.ll --print-x86
./main.native llprograms/call.ll --print-x86
./main.native llprograms/call5.ll --print-x86
git commit -m "Implements alloca, load, store, bitcast"
./main.native llprograms/gep3.ll --print-x86
./main.native llprograms/string1.ll --print-x86
git commit -m "Implements Gep"
./main.native llprograms/string1.ll --exec-x86
./main.native llprograms/string1.ll --execute-x86
./main.native ../compiler-design-eth-tests/03/dbernhard/arguments_3.ll --execute-x86
./main.native ../compiler-design-eth-tests/03/dbernhard/arguments_3.ll --print-x86
git submodule add https://github.com/nicdard/compiler-design-eth-tests.git
git add compiler-design-eth-tests
git add .gitmodules
git add hw3/backend.ml
git commit -m "Move compile_ep to expected place"
./main.native ../compiler-design-eth-tests/03/haenniro/stacktest_ll.ll --print-x86
./main.native ../compiler-design-eth-tests/03/haenniro/stacktest_ll.ll --print-x86 --
./main.native ../compiler-design-eth-tests/03/haenniro/stacktest_ll.ll --print-x86 --clang
./main.native ../compiler-design-eth-tests/03/haenniro/stacktest_ll.ll --print-x86 
iclear
rm add.ll
nvim test_config.ml
nvim dbernhard.ml
git clone https://github.com/nicdard/compiler-design-eth-tests.git
cd hm3
cd bomb20
nvim bomb.c
cd arc
cd ./
xdg-open simguide.pdf
cd cachelab-handout
nvim README
sudo dnf search xdg-desktop-portal-wlr
sudo dnf install xdg-desktop-portal-wlr-0.6.0-4.fc38.x86_64
echo $XDG_CURRENT_DESKTOP
echo $XDG_SESSION_TYPE
echo $MOZ_ENABLE_WAYLAND
systemctl --user import-environment XDG_SESSION_TYPE XDG_CURRENT_DESKTOP\

exir
systemctl --user status xdg-desktop-portal-wlr.service
dnf search xdg-desktop-portal
dnf info xdg-desktop-portal
dnf info xdg-desktop-portal-wlr
sudo dnf install xdg-desktop-portal-wlr-0.7.0
firefox --version
sway --version
wireplumber --version
pipewire --version
systemctl --user status pipewire.socket pipewire
systemctl --user status wireplumber
systemctl --user status xdg-desktop-portal
env | grep '^WAYLAND_DISPLAY='
< "/proc/$(pidof xdg-desktop-portal)/environ" tr '\0' '\n' | grep '^WAYLAND_DISPLAY='
< "/proc/$(pidof xdg-desktop-portal)/environ" tr '\0' '\n' | grep '^XDG_CURRENT_DESKTOP='
cd .local/bin/star
cd .local/bin/
nvim startsway
sudo dnf update brave-browser-1.60.110-1.x86_6
sudo dnf update brave-browser
cd /usr/share/xdg-desktop-portal/portals
sudo nvim gtk.portal
systemctl logout
killall bravellall sway
killall bravea
cd .config/gtk-3.0
exitm
cd ../kitty
cd ../compilers/compilersdesign
nvim .env
cd datasets
git add experiments/test_gan.py tqdne/gan.py
git commit -m "Setting device"
cd dist
git commit -am "quick fix"
poetry env remove $(which python)
poetry add torch=2.0.0
poetry add seaborn
poetry add mlflow
nvim poetry.lock
poetry lock --no-update
git log poetry.lock 
git checkout 6b2be9400e3f52dfc85cbcaa66018ba3bc87a4ee -- poetry.lock pyproject.toml
poetry reinstal
poetry reinstall
poetry env remove
poetry remove
poetry remove torch
poetry install
nivm
git add tqdne/.
git commit -m "Separate lighning gan into model and lighning files"
poetry add wandb
mv ganutils/tracking.py ../../
wandb
wandb login
git add tqdne/callbacks.py
git commit -am "Moving to Wandb""
git commit -am "Moving to Wandb"
ssh -L 1234:localhost:5020 -A daint
ssh -L 5020:localhost:5020 -A daint
git rm --cached notebooks/dataset_robin.ipynb
git commit -m "Use implemented trainer and log conditional variables"
git diff tqdne/ganutils/dataset.py
git checkout -- tqdne/ganutils/dataset.py
git checkout -- notebooks/test_dataset.ipynb
emulate bash -c '. /home/fcomoreira/.cache/pypoetry/virtualenvs/tqdne-e7ycIBKS-py3.11/bin/activate'
git commit -am "Move cond vars to cpu before logging"
poetry run python3 experiments/test_gan.py
git commit -am "remove logging of mag and dist"; git push
touch lectures/lecture15.tex
poetry add jupyter
poetry run jupyter notebook
poetry shell
conda activate mlkernel
ocamlbuild lexlex.ml
ocamlbuild lexlex.mll
ocamlbuild olex.native
olex.native
./olex.native
unzip lec09.zip
./handlex.byte
nvim handlex.ml
ocamllex lexlex.mll
ocamlbuild --help
unzip task2_handout_e14a688d.zip
rm task2_handout_e14a688d.zip
mkdir task1
mkdir task2
mv *.* ./task2/
mv Dockerfile task2
mv ./task2/README.md ./
mv pytransform ./task2
rm task1/solution.zip
rm task1/results_check*
rm task1/model_checkpoint-grid+matern0.5.ckpt
nvim .git
git add task2 .gitignore
git commit -m "Add task2"
git checkout -b task2
git push --set-upstream origin task2
git clone git@github.com:yassine-turki/CausalSoftware.git
git checkout origin/RalucaPanainte-webapp
virtualenv yassineenv
source yassineenv
source yassineenv/bin/activate
python app.py
which pip
rm -r yassineenv
pip show graphviz
pip list | grep "graphviz"
cd CausalSoftware
conda create --name yassineenv python=3.10
conda activate yassinenev
conda activate yassineenv
nvim app.py
python3 app.py
conda remove --name yassineenv --all
cd task0
python --help
rm -r CausalSoftware
conda install tqdm
conda list torch
conda install torch=2.0.1
pip list torch
pip list torch | grep "torch"
pip install torch==2.0.1
conda install pytorch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 cpuonly -c pytorch
pyright-langserver --stdio
whereis python3
which python
git commit -m "Implement full swag and beat hard baseline"
git statuts
python3 git status
git checkout -b calibration-task2
systef
kill 2624
rm -rf .config/BraveSoftware/Brave-Browser/Singleton
brave-browser 
python3 -u solution.py\ 
python3 -u solution.py
sys
git commit -m "Calibration - Currently fails"
git push --set-upstream origin calibration-task2
bash 
git checkout -- solution.py
git checkout calibration-task2
git commit -m "Add todos"
cd tak2
xdg-open reliability_diagram.pdf
git commit -m "Calibration works - Bad results"
git checkout -- solution.py 
ip link show
git commit -am "More appropriate ploting; Ready to test"
git commit -am "Plt does not handle torch"; git push 
git commit -am "Better plotting for comparison"
git commit -am "Better plotting for comparison"; git push
git commit -am "quick fix"; git push
wget -q -O- https://sh.distant.dev | sh
distant
git commit -am "reenable validation";git push
ssh ela
ssh daint 'curl -L https://sh.distant.dev | sh -s -- --on-conflict overwrite'
nvim thisquakedoesnotexist/thisquakedoesnotexist.py
cp lectures/lecture16.tex lectures/lecture17.tex
exot
cd bachelor/Sem3/CSE201
cd example_1
cd CSE201-td7-1-handin
nvim td7.pro
rm -rf .config/BraveSoftware/Brave-Browser/SingletonLock
cp lectures/lecture16.tex lectures/lecture18.tex
rm -r hw4
mv "dune (1)" dune
mv "dune-project (1)" dune-project
status
git add dune dune-project dune\ \(1\) dune-project\ \(1\)
git commit -m "Move dune files to proper names"
cd hmw3
cd bachelor/ETH/compilers/compilersdesign/hw3
cd llprograms
nvim global1.ll
./main.native ./oatprograms/easy_p1.oat
./main.native ./oatprograms/easyrun1.oat
./main.native ./oatprograms/easyrun2.oat --print-ll
./main.native ./oatprograms/easyrun1.oat --print-ll --print-oat
./main.native ./oatprograms/easyrun2.oat --print-ll --print-oat
git commit -am "aaaaaaaaaaa"; git push
cd baf
cd hw3
cd ll
cd ../llprograms
nvim factorial.ll
./main.native ./atprograms/easyrun5.oat --print-ll --print-oat
git clone https://github.com/sw9/oat-v1-compiler
cd oat-v1-compiler
rm -rf oat-v1-compiler
./main.native ./oatprograms/globals1.oat --print-ll --print-oat
./main.native ./oatprograms/run31.oat --print-ll --print-oat
./main.native ./oatprograms/run13.oat --print-ll --print-oat
./main.native ./oatprograms/run13.oat --print-ll --print-oat --execute-ll
./main.native ./oatprograms/run13.oat --print-ll --print-oat --interpret-ll
./main.native ./oatprograms/run13.oat --print-ll --print-oat --execute-x86
./main.native ./oatprograms/run39.oat --print-ll --print-oat --execute-x86
./main.native ./oatprograms/run40.oat --print-ll --print-oat --execute-x86
./main.native ./oatprograms/easyrun4.oat --print-ll --print-oat --execute-x86
./main.native ./oatprograms/easyrun5.oat --print-ll --print-oat --execute-x86
./main.native ./oatprograms/easyrun3.oat --print-ll --print-oat --execute-x86
git commit -am "Loops, Ifs done but not tested"; git push
./main.native ./oatprograms/easyrun8.oat --print-ll --print-oat --execute-x86
git add frontend.ml 
./main.native ./oatprograms/run39.oat --print-ll --print-oat
./main.native ./oatprograms/fact.oat --print-ll --print-oat
cd output
export OCAMLRUNPARAM=b
./main.native ./oatprograms/easyrun9.oat --print-ll --print-oat
./main.native ./oatprograms/globals4.oat --print-ll --print-oat
./main.native ./oatprograms/easyrun9.oat --print-ll --print-oat --execute-86
./main.native ./oatprograms/globals4.oat --print-ll --print-oat --execute-x86
git commit -m "fix unop"; git push
./main.native ./oatprograms/easyrun10.oat --print-ll --print-oat --execute-x86
git add frontend.ml \\

git commit -m "dont remember"
./main.native ./oatprograms/easyrun9.oat --print-ll --print-oat --execute-x86
./main.native ./oatprograms/easyrun3.oat --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/globals7.oat --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/path3.oat --print-ll --print-oat --execute-x86 --clang
git commit -m "less errors"
rm output/*
./main.native ./oatprograms/globals6.oat --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/arrayargs.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/arrayargs1.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/globals5.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/globals4.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/easyrun9.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/run42.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/lib4.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/sieve.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/lsfr.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/lfsr2.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/lfsr.oat  --print-ll --print-oat --execute-x86 --clang
./main.native ./oatprograms/run33.oat  --print-ll --print-oat --execute-x86 --clang
git commit -m "all but nested arrays"
git add .ocamlformat
./main.native ./oatprograms/run35.oat  --print-ll --print-oat --execute-x86 --clang
git commit -m "final version hw4"
flatpak update
cd missing-semester
cd lec2
rm -r missing-semester ly penguinFox
git commit -m "Lectures 11-18"
cd BraveSoftware
cd Brave-Browser
rm Singleton*
find . -iname "*envelope*"
echo $ZSH_VERSION
git clone --depth=1 https://github.com/spaceship-prompt/spaceship-prompt.git ./spaceship
cd spaceship
nvim spaceship.zsh
rm .config/BraveSoftware/Singleton*
cp lectures/lecture18.tex lectures/lecture19.tex
cd ../task1
cd bachelor/ETH/probAI/probabilisticAI/task2
cd ../task2
cd task1
git commit -am "Add gaussian process"
cd bachelor/ETH/probAI/probabilisticAI/task1
git commit -am "Baseline implementation"
git checkout task2
git commit -am "add plotting"
git commit -m "remove optimizer"; git push
git commit -m "medium baseline"; git push
conda activate probAI
git add task2/Dockerfile
cd task2
rm examples_least_confident.pdf
rm examples_most_confident.pdf
rm reliability_diagram.pdf
git commit -m "Add Task 3"
git merge task2
git branch -b task3
git checkout -b task3
git push --set-upstream origin task3
cd task3
cp lectures/lecture18.tex lectures/lecture20.tex
sudo dnf install youtube-dl
echo $(youtube-dl --list-extractors); echo $(livestreamer --quiet --plugins)
youtube-dl --list-extractors
youtube-dl --list-extractors | nvim
mv "dune-project (1)" dune-project 
mv "dune-project (2)" dune-project 
mv "dune (2)" dune
git diff ../compiler-design-eth-tests
git rm --force ../hw4/.out
git rm --force ../hw4/a.out
rm ../hw4/a.out
git add ../compiler-design-eth-tests
cd ../compiler-design-eth-tests
git checkout -- 03/haenniro/stacktest_ll.ll
git commit -m "rename dune"
cd code/thisquakedoesnotexist
cd bachelor/ETH/probAI/probabilisticAI/task3
utpo
git commit -m "Implement subtyping rules" 
cp lectures/lecture20.tex lectures/lecture21.tex
killall brave-browser
utop
./main.native --clangd ./hw5programs/tc_subtyping6.oat
./main.native --clang ./hw5programs/tc_subtyping6.oat
git commit -m "all typecheckings but stmt"
./main.native --clang ./hw5programs/tc_subtyping2.oat -
./main.native --clang ./hw5programs/tc_subtyping2.oat
./main.native --clang ./hw5programs/tc_subtyping7.oat
./main.native --clang ./hw5programs/tc_subtyping8.oat
./main.native --clang ./hw5programs/tc_subtyping_err6.oat
./main.native ./hw5programs/tc_subtyping_err6.oat
./main.native ./hw5programs/tc_subtyping_err9.oat
./main.native ./hw5programs/tc_subtyping_err8.oat
./main.native ./hw5programs/tc_subtyping_err8.oat --clang
git add typechecker.ml
git commit -m "Most of the typechecker is OK, needs testing"
./main.native ./hw5programs/tc_correct_global.oat --clang
./main.native ./hw5programs/tc_error_call1.oat --clang
./main.native ./hw5programs/tc_error_global_fptr_scope.oat
./main.native ./hw5programs/tc_error_global_fptr_scope.oat --clang
./main.native ./hw5programs/tc_ifq1.oat
./main.native ./hw5programs/compile_assign_struct.oat
./main.native hw5programs/compile_various_fields.oat --clang
./main.native hw5programs/compile_various_fields.oat
./main.native oatprograms/run15.oat
./main.native oatprograms/run15.oat --clang
./main.native oatprograms/arrayargs2.oat
./main.native oatprograms/arrayargs2.oat --clang
./main.native oatprograms/arrayargs2.oat --clang --print-ll
./main.native oatprograms/run47.oat --clang --print-ll
./main.native oatprograms/run47.oat --clang --print-ll --execute-x86
./main.native oatprograms/run47.oat --print-ll --execute-x86
./main.native oatprograms/arrayargs2.oat --print-ll --execute-x86
git add frontend.ml typechecker.ml
git commit -m "Made newarr work and fixed len"
git diff frontend.ml
git commit -m "update"
nvim typechecker.ml 
la
cp lectures/lecture20.tex lectures/lecture22.tex
cd hw5
nvim frontend.ml
./main.native hw5programs/compile_assign_struct.oat --clang --print-ll --execute-x8
./main.native hw5programs/compile_assign_struct.oat --clang --print-ll --execute-x86
./main.native hw5programs/compile_struct_array.oat --clang --print-ll --execute-x86
./main.native hw5programs/compile_global_struct.oat --clang --print-ll --execute-x86
./main.native oatprograms/arrayargs2.oat --clang --print-ll --execute-x86
git add frontend.ml
git commit -m "done w hw5"
git commit -m "lec 18-22"
cd lectures
cp lectures/lecture20.tex lectures/lecture23.tex
git commit -m "lec 22, 23"
cd compilers
cd sway
curl -sS https://starship.rs/install.sh | sh
cd bachelor/ETH/probAI/probabilisticAI/task0
mkdir aoc
cd aco
aoc
dune init
dune init proj ocaml
cd ocaml
cat main.ml
dune exec ./bin/main.native
dune exec ./bin/main.exe
nvim dune
touch day01.ml
nvim day01.ml
cd bachelor/ETH/probAI/
conda install gym-toytext
pip install gym-toytext 
pip install gym-legacy-toytext
rm -r spaceship
rm -rf spaceship
cp lectures/lecture20.tex lectures/lecture25.tex
nvim resume.
cd codee
git meson
git meson ninja-build pkg-config\
libpng,libfreetype,\
libgl,libglew,libegl,libwegl,wayland-client,wayland-protocols,xkbcommon,gles2\
fonts-terminus
git clone git@github.com:milgra/sov.git
meson setup build --buildtype=release
ninja -C build
sudo ninja -C build install
sov
echo 1 /tmp/sovpipe
echo 1 > /tmp/sovpipe
echo 0 > /tmp/sovpipe
cp lectures/lecture20.tex lectures/lecture26.tex
cd bachelor/ETH/probAI
cd probabilisticAI
git commit -m "task4"
git merge task3
xdg-open task4_supplementary.pdf &
git add solution.py
git commit -m "douglas' contribution"
cd minicoda/lib
cd miniconda3
cp /usr/lib/gcc/x86_64-redhat-linux/13/libstdc++.so  ./libstdc++.so.6
python3 install gym
pip install gym
pip install moviepy
pip install gym[classic_control]
conda install gcc=12.1.0
sudo find / -name "libstdc++.so.6.0.30"
sudo dnf install libstdc++
conda install gcc
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/anaconda3/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/minicoda3/envs/probAI/lib
conda install -c conda-forge gcc=12.1.0
conda install -c conda-forge gcc
xdg-open pendulum_episode.m
systemctl start docker
cd bachelor/ETH/probAI/probabilisticAI
cd task4
nvim Dockerfile
nvim runner.sh
xdg-open pendulum_episode.mp4
python3 solution.py
docker build --tag task4 .\

strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX\

dune build
sudo dnf upgrade discord
vpn
cd bachelor/ETH/probAI/probabilisticAI/task4
nvim solution.py
docker run --init --rm -u $(id -u):$(id -g) -v "$( cd "$( dirname "$0" )" && pwd )":/results task4\

bash runner.sh
cp ../hw5/.ocamlformat ./
./main.native --test --liveness dataflow --regalloc better
./main.native --test
./main.native oatprograms/arrayargs2.oat --print-ll --liveness dataflow --regalloc greedy
./main.native oatprograms/arrayargs2.oat --print-ll --liveness dataflow --regalloc better
./main.native oatprograms/arrayargs2.oat --print-ll --liveness dataflow
./main.native oatprograms/arrayargs2.oat --print-ll
./main.native oatprograms/tc_ok6.oat --print-ll
./main.native oatprograms/tc_ok6.oat --print-ll -O1
cd bachelor/ETH/compilers/compilersdesign
nvim backend.ml
./main.native llprograms/gep6.ll --print-ll -O1
./main.native llprograms/gep6.ll --print-ll -O1 --regalloc better
./main.native llprograms/gep6.ll --print-ll --regalloc better
./main.native llprograms/gep6.ll --print-ll --regalloc better --liveness dataflow
git add backend.ml constprop.ml
git commit -m "sample better_layout"
./main.native llprograms/add.ll --print-ll --regalloc better --liveness dataflow
./main.native llprograms/add.ll --print-ll --regalloc better --liveness dataflow -O1
./main.native llprograms/br1.ll --print-ll --regalloc better --liveness dataflow 
./main.native llprograms/br1.ll --print-ll --regalloc better --liveness trivial
./main.native llprograms/br1.ll --print-ll --regalloc better --liveness dataflow
./main.native llprograms/alloca1.ll --print-ll --regalloc better --liveness dataflow
./main.native llprograms/alloca1.ll --print-ll --regalloc better --liveness dataflow -01
./main.native llprograms/alloca1.ll --print-ll -O1
./main.native llprograms/alloca1.ll --print-ll -O1 --execute-x86
./main.native llprograms/alloca1.ll --print-ll -O1 --execute-x86 -v
./main.native llprograms/alloca1.ll --print-ll -O1 --execute-x86 --clangd
./main.native llprograms/alloca1.ll --print-ll -O1 --execute-x86 --clang
./main.native llprograms/alloca1.ll --print-ll --regalloc better --liveness dataflow -O1
./main.native llprograms/alloca1.ll --print-ll --regalloc better --liveness dataflow --print-x86 -O1
./main.native llprograms/call4.ll --print-ll --regalloc better --liveness dataflow --print-x86 -O1
./main.native llprograms/call5.ll --print-ll --regalloc better --liveness dataflow --print-x86 -O1
./main.native llprograms/call8.ll --print-ll --regalloc better --liveness dataflow --print-x86 -O1 --execute-x86
./main.native ./oatprograms/easyrun9.oat --print-ll --print-oat --execute-x86 -linux
./main.native ./oatprograms/easyrun9.oat --print-ll --print-oat --execute-x86 -O1
./main.native llprograms/call8.ll --print-ll --regalloc better --liveness dataflow --print-x86 -O1
./main.native llprograms/call8.ll --print-ll --regalloc better --liveness dataflow -O1
./main.native llprograms/call8.ll --print-ll --regalloc better --liveness dataflow -O1 --print-x86
./main.native llprograms/add.ll --print-ll --regalloc better --liveness dataflow -O1 --print-x86
./main.native oatprograms/msort.oat --print-ll --regalloc better --liveness dataflow -O1 --print-x86
git commit -m "checkpoint"
./main.native llprograms/alloca2.ll --print-ll --regalloc better --liveness dataflow -O1 --print-x86
git commit -m "."
./main.native llprograms/call1.ll --print-ll --regalloc better --liveness dataflow -O1 --print-x86
git commit -m "dn"
git add backend.ml
git commit -m "dn2"
./main.native oatprograms/easyrun9.oat --print-ll --regalloc better --liveness dataflow -O1 --print-x86
./main.native oatprograms/easyrun9.oat --print-ll --regalloc better --liveness dataflow -O1 --print-x86 --print-regs
./main.native oatprograms/easyrun9.oat --print-ll --regalloc better --liveness dataflow --print-x86 --print-regs
./main.native oatprograms/easyrun9.oat --print-ll --regalloc better --liveness dataflow --print-x86 --print-regs -O1
./main.native oatprograms/easyrun3.oat --print-ll --regalloc greedy --liveness dataflow -O1 --print-x86 --print-regs
./main.native oatprograms/easyrun3.oat --print-ll --regalloc better --liveness dataflow -O1 --print-x86 --print-regs
./main.native oatprograms/easyrun3.oat --print-ll --regalloc better --liveness dataflow -O1 --print-x86
make test
cd bachelor/ETH/compilers/compilersdesign/
cd hw6
git add backend.ml .ocamlformat
git commit -m "interf-graph"
dnf list | "jvm"
dnf list | grep -i "jvm"
dnf list --installed 
dnf list --installed | grep -i "jvm"
dnf list --installed | grep -i "java"
./main.native oatprograms/easyrun9.oat --regalloc greedy --liveness dataflow -O1 --print-regs
./main.native oatprograms/easyrun9.oat --regalloc greedy --liveness dataflow -O1 --print-regs --print-x86
./main.native oatprograms/easyrun9.oat --regalloc greedy --liveness dataflow -O1 --print-regs --print-x86 > nvim
./main.native oatprograms/easyrun9.oat --regalloc greedy --liveness dataflow -O1 --print-regs --print-x86 | nvim
rm nvim
cp lectures/lecture20.tex lectures/lecture27.tex
cp lectures/lecture20.tex lectures/lecture28.tex
ping www.wandb.com
git ls
git commit -m "Final lectures"
cd /etc
nvim tlp.conf
systemctl restart tlp
du 
du -h 
du -h | head  
du -hs * | sort -h | head  
rm wforms_GAN_input_v20220805.h5
rm -rf opencv
cd sov
sov 
whereis sov
make --help
ninja
nvim build.ninja
ninja build uninstall
ninja uninstall
sudo ninja uninstall
rm -r sov
man zathura
bluetoothctl connect 2C:32:6A:F1:88:AE
cd bachelor/ETH/compilers/compilersdesign/hw6
nvim team.txt
nvim parser.ml
ocamlbuild -use-menhir -yaccflags --explain\

ocamlbuild -use-menhir -yaccflags --explain main.ml\

ocamlbuild -use-menhir -yaccflags --explain main.native\

./main.native
ocamlbuild lexlex.native
./lexlex.native
ocamlbuild piglatin.native
./piglatin.native
cd bachelor/ETH/compilers/
unzip lec10.zip
cd lec10
menhir --explain ambparser.mly
nvim ast.ml
nvim range.ml
nvim ambparser.mli
menhir --explain parser.mly
nvim parser.mly
nvim main.ml
cd _build
nvim sanitize.sh
bash sanitize.sh
ocamlbuild main.ml
cd compilersdesign
cd hw4
nvim lexer.mll
cd wee55
cd lec9
cd lec09
nvim lexlex.ml
nvim lexlex.mll
eix
cd bachelor/sem3/CSE203
cd bachelor/sem3
cd bachelor/Sem3
cd CSE203
las
cd project
nvim nim.v
git commit -am "fix typos"
cd bachelor/ETH/probtheory
sudo dnf install xournalpp
libinput list-devices
sudo libinput list-devices
find . -iname "*wacom*"
nvim wacomone
xsetwacom 
wacomone
./wacomone
sudo dnf install input-remapper\
sudo systemctl enable --now input-remapper
input-remapper-gtk
sudo dnf install polkit-gnome
/usr/libexec/polkit-gnome-authentication-agent-1
rm .config/BraveSoftware/Brave-Browser/Singleton*
sudo dnf remove input-remapper-2.0.1-1.fc38.noarch
xournalpp --version
sudo dnf downgrade xournalpp
xournalpp
xournalpp --disable-audio
xournalpp --help
xournalpp --help-all
sudo dnf remove xournalpp
flatpak install flathub xournalpp
flatpak remove xournalpp
nvim no
nvim nohup.out
rm nohup.out
cd tensorflow_datasets/
du -hs * | sort -h | tail  
cd bachelor/ETH/compilers
nvim cheatsheet.
nvim cheatsheet.tex
cd documents/Application/Master
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile=passport_small.pdf passportpdf.pdf
xdg-open passport_small.pdf
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile=TCF_small.pdf TCF.pdf
xdg-open TCF_small.pdf
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile=passport_small.pdf passportpdf.pdf
sudo dnf upgrade brave-broser
sudo tlp-stat | less
systemctl disable tlp.service 
cd .cache/mozilla
cd firefox
cd ekbtb6je.default
cd z0su3k2n.default-release
cd startupCache
cd settings
cd main
cd ms-
cd .mozilla/firefox/z0su3k2n.default-release/chrome/
cd ../sway
ssh daint
sudo dnf downgrade code
scp daint:/users/fmachado/tqdne/notebooks/report_dataset.ipynb ~/
code report_dataset.ipynb
cd tqdne
git checkout diffusion-moreira
cd bachelor/ETH/research
mv Project\ Report\ -\ This\ Quake\ Does\ Not\ Exist.ipynb ~/code/tqdne/notebooks/
cd code/tqdne
mv "Project Report - This Quake Does Not Exist"* ~/bachelor/ETH/research
cd bachelor
cd ETH
cd research
mv "Project Report - This Quake Does Not Exist"* ~/bachelor/ETH/research/report
nvim Project\ Report\ -\ This\ Quake\ Does\ Not\ Exist.tex
nordvpn conenct
bash ./sshservice-cli/cscs-keygen.sh
ssh-add -t 1d ~/.ssh/cscs-key
cd bachelor/Sem4
cd CSE205
cd archlab-handout
cd sim
cd gene
nvim resume.pdf
nmcli\\

sudo dnf install ffmpeg-free
sudo dnf install ffmpeg-free --allowerasing
sudo dnf install libavcodec-freeworld
sudo dnf install intel-media-driver
sudo dnf groupinstall multimedia\
sudo dnf install intel-media-driver libva libva-utils gstreamer1-vaapi ffmpeg intel-gpu-tools mesa-dri-drivers mpv
sudo dnf groupinstall multimedia\
sudo dnf install intel-media-driver libva libva-utils gstreamer1-vaapi ffmpeg intel-gpu-tools mesa-dri-drivers mpv --allowerasing
cd .profile
vainfo 
sudo nvim /etc/modprobe.d/i915.conf
sudo dracut --force
mpv --hwdec=auto downloads/Big_Buck_Bunny_1080_10s_1MB.mp4
vainfo
sudo dmesg | grep guc 
sudo dmesg | grep huc 
sudo intel_gpu_top
cd documents/
cd Application/ls
cd Application/
cd Master
rmdir report
git clone git@github.com:fcomoreira1/bt_template.git
cd bt_template
mv bt_template report
sudo dnf install 'tex(todonotes.sty)'
cd Downloads
nordp
sudo dnf upgrade firefox
killall firefox
systemctl --user status pipewire-media-session
systemctl --user status pipewire
systemctl --user restart pipewire 
sudo dnf downgrade pipewire
sudo dnf downgrade pipewire --allow-erasing
sudo dnf downgrade pipewire --allowerasing
cd do
sudo dnf install ./jabref-5.12-1.x86_64.rpm
cd documents/papers
nvim main.bib
nvim co
sudo dnf install 'tex(circuittikz.sty)'
sudo dnf install 'tex(circuitikz.sty)'
killall 148244
sudo dnf reinstall 'tex(circuitikz.sty)'
ks
git commit -am "a"
qpdf 
git diff main.tex
git checkout -- main.tex
rm '21_06_07 Bachelor Thesis Guidelines updated.docx - Bachelor Thesis Guidelines.pdf'
qpdf --empty --pages Bachelor_Thesis_Report.pdf SIGNED0-21_06_07\ Bachelor\ Thesis\ Guidelines\ updated.docx\ -\ Bachelor\ Thesis\ Guidelines.pdf -- final_thesis_report.pdf
mkdir slides
pip upgrade pynvim
pip update pypnvim
pip install pynvim=0.5.0
pip install pynvim==0.5.0
cd plugin
cd plug
cd plugged
rm -rf telescope.nvim
nvim demo.cp
nvim demo.cpp
g++ -std=c++14 -pthreads main.cpp td1.cpp
g++ -std=c++14 -pthread main.cpp td1.cpp
g++ -std=c++14 -pthread main.cpp
g++ -std=c++14 -pthread main.cpp -o test
cd CSE305-td1-1-handin
xdg-open Bachelor_Thesis_Report.pdf
rm Bachelor_Thesis_Report.pdf
cp -r images ../slides
nvim report/
cd bachelor/Thesis
mkdir stb
cat /sys/kernel/debug/dri/0/i915_edp_psr_status
sudo cat /sys/kernel/debug/dri/0/i915_edp_psr_status
ls /sys/class/drm
powerprofilesctl 
tlp-stab-b
tlp-stat -b
sudo dnf remove powerprofilectl
sudo dnf install powertop
sudo powertop
fwupdmgr refresh
sudo fwupdmgr refresh
fwupdmgr
cd bachelor/sem6
cd bachelor/Sem6
mkdir CSE306
rm proj1
rmdir proj1
git clone git@github.com:fcomoreira1/CSE306-ComputerGraphics.git
cd CSE306-ComputerGraphics
mkdir proj1
nvim vector.cpp
mv stb proj1/
mv vector.cpp ./proj1/
mv proj1 ../
rm -rf CSE306-ComputerGraphics
git checkout -b main
rm -rf .git
git branch -m main
git config --global init.defaultBranch main
git remote add origin git@github.com:fcomoreira1/compgraphics_project1.git
git commit -am "Initial Commit"
git branch
sudo systemctl enable tlp.service
exigt
rm image.png
make\\

cat out.log
./render > out.lo
make; ./render > out.log
rm vector.h
git add Makefile
git commit -am "Week 1 - Until Mirrors"
mkdir td2
mv CSE305-td1-1-handin td1
nvim theory.tex
g++ -std=c++14 -pthread td2.cpp -o test
cd td2
nvim td2.cpp
mkdir images
mv image.png images/image2.png
mv image.png images/image1.png
git diff shapes.cpp 
ssh moreira.machado@gennaria.polytechnique.fr
kitty +kitten ssh moreira.machado@gennaria.polytechnique.fr
scp cselab:CSE305/td3 ./
scp cselab:CSE305/TD3 ./td3
scp -r cselab:CSE305/TD3 ./td3
rm out.log profile.*
rm sum_distances variance
rm demo
rm sorted_filename.txt
nvim sum_distances.cu
mv shapes.h\  shapes.h
git add images .gitignore
git commit -m "Restructuring codebase + few images"
mv image.png images/image3.png
cd .c
nvim shapes.cpp
mv image.png images/image4.png
make render; ./render
git commit -m "Antialiasing + refraction + TD2"
nvim scene.cp
nordvpn
nordvpn status
sudo dnf remove power-profile-daemon
./grader 1
nvim td4.cpp
make render; ./render; xdg-open image.png
make render;
make render
cd bachelor/Sem6/CSE306/proj1/
nvim scene.cpp
cd bachelor/Sem6/CSE306/proj1
./rendewr
cd bachelor/Sem6/CSE306/proj1lear
swaymsg -t get_outputs
swaymsg -t get_tree
./grader 2
./grader 3
./grader 4
cd td4
xdg
./render; xdg-open image.pnh
./render; xdg-open image.png
g++ -std=c++14 -pthread test.cpp -o test
for i in {1..12}; do ./test >> out.log\
done
nvim out.log
nvim inti
cd nvim
git add ../../../.
git add ../../../sway/.config/sway/swaymonad
git commit -am "major update"
nvim make
g++ -std=c++14 -pthread td1.cpp -o test
ssh cselab
scp -r bachelor/Sem6/CSE305/* cselab:CSE305/
mkdir practice_exam
cd practice_exam
nvim td1.cpp
ping 10.0.10.0
ifconfig 
nordvpnf
cd sections
nvim quantization.tex
cd bachelor/Sem6/MAA305
mkdir hmw
cd hmw
cat Makefile
xdg-open ./image.png
xdg-open image.pnh
git add *.cpp *.h
git add shapes.cpp
git commit -am "trying to fix refraction"
sudo tlp start
systemctl status tlp.service
nvim /etc/tlp.conf
sudo nvim /etc/tlp.conf
make; ./render > out.log; xdg-open image.png
sudo dnf update
sudo dnf remove R
sudo dnf remove qemu
sudo dnf remove qemu-kvm-2:7.2.8-1.fc38.x86_64
sudo dnf remove gnome-boxes
clera
nvim proj1
make; render
git add scene.cpp scene.h sphere.cpp
git commit -m "Fix hollow transparent balls"
git diff mesh.cpp
make; ./renmder
g++ -std=c++14 a.cpp -o test
g++ -std=c++14 d.cpp -o test
mkdir comp
git diff mesh.h
git add scene.h scene.cpp mesh.h mesh.cpp main.cpp
git add random.h
git commit -m "Add Phong Interpolation and thread safe random functions"
./rende
git diff scene.h
mv image.png overexposed.png
rm overexposed.png
cd ba
make; ./rende
make 
mv image.png images/materials_complete.png
mv images/materials_complete.png images/materials_complete_ligh.png
mv images/materials_complete_ligh.png images/materials_complete_light.png
mv image.png images/dof_basic.png
mv image.png images/antialiased.png
mv image.png images/fresnel_antialiasing_materials_complete_light.png
mv image.png images/materials_complete_light.png
mv image.png images/materials_direct_lighting.png
mv image.png images/simple_direct_light.png
mv image.png images/simple_complete_light.png
mv image.png images/cat_direct_light.png
mv image.png images/cat_comp_antialias.png
mv image.png images/cat_Phong_comp_antialias.png
mv image.png images/transparent_cat_2_balls_8bounces.png
mv image.png images/dof_cat_2balls.png
make; ./render; xdg-open image.png
mv image.png images/cat_1ball.png
ln report/report.pdf report.pdf
git commit -m "Add report + fix Phong + fix DoF""\
\
\
"
git commit -m "remove binary"
git commit -m "fix weird spacing between images in report"
g++ -std=c++14 c.cpp -o test
for i in {1..1000}; do ./test >> out.log; done
for i in {1..100}; do timeout 1s ./test >> out.log; done
rm test.*
man sort
\make test
cp ../proj1/Makefile ./
xdg-open image.png
cp ../proj1/random.h ./
make; ./render; xdg-open image.svg
git init
git remove add origin https://github.com/fcomoreira1/graphics-proj2.git
git remote add origin https://github.com/fcomoreira1/graphics-proj2.git
git rm --cached render
git commit -m "first commit with first td solved"
git push --set-upstream origin main
git branch --set-upstream-to=origin/main main
git pull --allow-unrelated-histories
mkdir proj2
rm main.cpp
cp proj1/stb proj2
cp -r proj1/stb proj2/
cp proj1/vector.* proj2/
for i in {1..100}; do timeout 1s ./test ; done | sort -n | head -1
for i in {1..1000}; do timeout 1s ./test ; done | sort -n | head -1
./garder
cd td5
nvim td5.cpp
gnome-control-center 
nm-cnnection-editor
nm connection up Polytechnique
sudo dnf purge gnome-control-center
sudo dnf remove gnome-control-center
sudo dnf group list -v --available
nmcli connection down Polytechnique
dnf group list -v --available | grep desktop
nmcli con add type wifi ifname wlan0 con-name Hostspot autoconnect yes ssid Hostspot\
nmcli con modify Hostspot 802-11-wireless.mode ap 802-11-wireless.band bg ipv4.method shared\
nmcli con modify Hostspot wifi-sec.key-mgmt wpa-psk\
nmcli con modify Hostspot wifi-sec.psk "veryveryhardpassword1234"\
nmcli con up Hostspot
cd /etc/NetworkManager/system-connections/
sudo rm Hostspot*
sudo dnf install gnome-shell
sudo systemctl set-default graphical.target
pip install --user nautilus-open-any-terminal
glib-compile-schemas ~/.local/share/glib-2.0/schemas/
dconf-editor
gsettings set com.github.stunkymonkey.nautilus-open-any-terminal terminal kitty
gsettings set com.github.stunkymonkey.nautilus-open-any-terminal new-tab true
gsettings set com.github.stunkymonkey.nautilus-open-any-terminal flatpak system
gsettings set com.github.stunkymonkey.nautilus-open-any-terminal keybindings '<Ctrl><Enter>'
sudo dnf install gnome-tweaks
powerprofilesctl get
./test | wc -l
g++ -std=c++14 test.cpp -o test
rm test*
sudo touch /etc/NetworkManager/conf.d/10-globally-managed-devices.conf\
sudo systemctl restart NetworkManager
sudo dmesg | grep eth
nmcli connection up Polytechnique
nmcli connection up id 
nmcli connection up id Polytechnique
nmcli connection shwo
nmcli connection show
nmcli connection up id Hotspot
cd /org/freedesktop/NetworkManager
ethtool
ethtool -h
nm-connection-editor
dhcpcd
sudo dnf install chcpcd
sudo dnf install dhcpcd
wpa_supplicant
cd /etc/wpa_supplicant
sudo nvim polytechnique.conf
sudo chown root:root /etc/wpa_supplicant/polytechnique.conf; sudo chmod 600 /etc/wpa_supplicant/polytechnique.conf 
ip link
lspci -v
dmsg
dmesg
sudo dmesg
lsusb
nmcli
cd proj
git add Makefile algorithms.*
git commit -m "sequential fft"
nvim td6.cpp
git clone git@github.com:fcomoreira1/CSE305-FFT.git
nvim fft.py
grep -E "^\[.*]" /etc/yum.repos.d/*
sudo dnf config-manager --set-disabled repo.nordvpn.com_yum_nordvpn_centos_x86_64
sudo kill 9 7015
sudo kill 7015
man kill
kill -s 9 7015
kill -l
kill -s KILL 7015
sudo kill -s KILL 7015
sudo dnf install gnome-browser-connector
sudo dnf remove foot
nautilus -q
sudo nvim cgnscalc.desktop
sudo nvim cgnsnodes.desktop
sudo nvim cgnsplot.desktop
sudo nvim cgnsview.desktop
rpm -qf unitconv.desktop
sudo dnf remove cgnslib-common-4.3.0-7.fc38.noarch
sudo nvim unitconv.desktop
sudo nvim gkbd-keyboard-display.desktop
ls | grep -I "akko"
ls | grep -i "akko"
cd .local/share/applications/
sudo nvim Qt-MaintenanceTool.desktop
nvim org.qt-project.qtcreator.desktop
rm org.qt-project.qtcreator.desktop
rm Qt-MaintenanceTool.desktop
dnf list | grep -i "qt"
mtex
cd texmf/tex/latex/local
nvim moreira.sty
rm *.svg
nvim --versiobn
gdb ./render core
gdb ./render\

git commit -m "neovim 0.10.0, inlay hints"
exxit
xdg-open image.svg
./
mAKE
xdg-open test1_weight.svg
cd bachelor/CSE306
valgrind --leak-check=full ./render\

git add lbfgs/
git add Makefile main.cpp polygon.* random.h vector.h
git commit -m "add lbfgs, implementatino of optimal transport not working"
sudo dnf install libasan
valgrind --leak-check=full ./main
valgrind --leak-check=full ./main > out.log
g++ -std=c++14 main.cpp -o main
g++ -std=c++17 main.cpp -o main
rm main
rm Paris_data.csv
make grader
./graedr
./set_benchmarker 2 2000
./set_benchmarker 4 2000
./set_benchmarker 8 2000
./set_benchmarker 16 10000
./set_benchmarker 8 10000
./set_benchmarker 16 4000
./set_benchmarker 24 4000
./set_benchmarker 8 4000
./set_benchmarker 2 4000
./set_benchmarker 2 10000
./set_benchmarker 3 10000
./set_benchmarker 5 10000
rm set_benchmarker
./set_benchmarker 6 10000
./set_benchmarker 4 10000
make set_benchmarker
./set_benchmarker 1 2000
./set_benchmarker 1 4000
nvim td7.cpp
scp -r ../td7  moreira.machado@anchois.polytechnique.fr:CSE305/td7
scp -r ../td7  moreira.machado@isotria.polytechnique.fr:CSE305/td7
exitr
cd ../proj2
nordvpn connecty
nmcli connect eduroam
sudo chmod +x ./pause-media-on-suspend.sh
sudo nano /etc/systemd/system/pause-media-on-suspend.service\

nvim pause-media-on-suspend.sh
sudo systemctl daemon-reload\

sudo systemctl enable pause-media-on-suspend.service\

rm image_vonoroi.svg
make; ./render 1
xdg-open image_vonoroi.svg
cd bachelor/Thesis/report
git add fluid.*
git add ot.*
git add random.cpp
git commit -am "major refactor"
./render3
valgrind ./render 2
rm image_power_diagrams.svg
./make
make; ./render 2
xdg-open image_fluid0.png
xdg-open image_fluid9.png
git switch -c my-temporary-work
git commit -am "Ig this works(?)"
mae
xdg-open fluid/image_fluid0.svg
valgrind --leak-check=full ./main 2> out.log
valgrind ./render 3 
git add kdtree.h
git add nanoflann.hpp
git commit -am "non-working kdtree + still have problems with seg fault"
make; ./render 3
rm image_fluid*
mkdir fluid
rm render*
rm vgcore*
nautilus
gdb ./render
cd ../CSE305
LS
cd ../CSE306l
cd ../../CSE306
nvim polygon.cpp
git diff fluid.h
git commit -am "saving with debugging"
git checkout f93c0f7
rm render
git commit -am "WORKS"
git commit -am "Add baseline and rename functions"
test
makke
python parser.py data.json
rm data.json
python plotting.py data.json
git add parser.h
git commit -am "debugging parser"
nvim algorithms.cpp
cd ../CSE306
xdg-open image_power_diagrams.svg
mke
render
./render > out.log
xdg-open out.obj
git add tutte
git commit -m "add td9"
nvim svg.h
cd tutte
nvim tutte.cpp
valgrind grader
valgrind ./grader
nvim Makefile
rm grader
gdb ./grader
./grader
./tet
git add benchmark.*
git add data/
git commit -am "fft works
git commit -am "fft works\
"
eixt
g++ -o test algorithms.cpp benchmark.cpp
g++ -o test algorithms.cpp benchmark.cpp main.cpp
git commit -am "removing unecessary benchmark + cleaning algorithms and removing malloc"
rm *.png
git add compression.*
git rm --cached data/_in_data.txt
git commit -am "added compression + testing"
git add integersmodp.h
git commit -am "start implementing polynomial multiplication mod p"
./render 2
nvim ot.cpp
make; ./test
git add integersmodp.cpp
git commit -am "template all the algorithms + add full integers library"
git add fft.cpp
git add fft.h
git commit -am "removing some templating"
git add ntt.*
git add types.h
git commit -am "ntt works :)))))))))))))))))))))))))))"
makae
./tes
git add polymult.*
git commit -am "i can multiply polynomials"
/.test
makemake
git commit -am "better benchmark for polynomials + more efficient integer mod p"
git diff integersmodp.h
git diff polymult.cpp
./testmake
git diff utils.cpp
git commit -am "benchmarking of fft-based pol multiplication"
git checkout 98036b7
git checkout 70ea855
git checkout -- main.cpp
git switch -
git diff
git statu
git diff HEAD origin/main\

git diff 70ea855 origin/main
git diff 6ed250 origin/main
git diff origin/main HEAD
git reset --soft origin/main
git checkout -- integersmodp.h
git checkout -- utils.cpp
git checkout -- utils.h
git restore --staged .
rm test
git commit -am "fix polynomial multiplication + add fft-based mult"
nordvpn connect 
git commit -am "extend polynomial tessting + handle negative polynomial inputs"
./test > out_complex.log
git add benchmark.cpp main.cpp ntt.*
git commit -am "ntt
git commit -am "ntt\!"
git commit -am "rename compress + use parallel"
git add main.cpp
git commit -m "fix renaming of benchmark_fft"
cd bachelor/Sem6/CSE305
clearls
nvim td8.cpp
cd CSE305-FFT
git add main.cpp parser.cpp utils.cpp utils.h algorithms.cpp
git commit -m "formatting + generic benchmarking"
nvim mainF
./test > out.log
git commit -m "renaming everything to suitable dct, ntt, fft names"
git commit -am "renaming everything to suitable dct, ntt, fft names"
git commit -am "renaming benchmark"
.t/est
mkdir logs
mv *.log logs/
git commit -am "aaaa"
git add benchmark.cpp
git commit -am "reorder printing"
git push\\

scp moreira.machado@anchois.polytechnique.fr:CSE305/CSE305-FFT/logs/newpolymult.log ./logs/
scp moreira.machado@isotria.polytechnique.fr:CSE305/CSE305-FFT/logs/newpolymult.log ./logs/
rm out_complex.log
rm out.log
git comimt -am "DCT -> DFT"
git commit -am "DCT -> DFT"
git add dft.h
git add dft.cpp
git commit -m "DCT -> DFT"
ss
git add dct.cpp
git add dct.h
scp moreira.machado@isotria.polytechnique.fr/CSE305/CSE305-FFT/logs/* ./
scp moreira.machado@isotria.polytechnique.fr/CSE305/CSE305-FFT/logs/polmult.log ./
scp moreira.machado@isotria.polytechnique.fr:CSE305/CSE305-FFT/logs/polmult.log ./
scp moreira.machado@isotria.polytechnique.fr:CSE305/CSE305-FFT/logs/compelx.log ./
scp moreira.machado@isotria.polytechnique.fr:CSE305/CSE305-FFT/logs/complex.log ./
wl-clip
wl-copy < polmult.log
nvim complex.log
scp moreira.machado@isotria.polytechnique.fr:CSE305/CSE305-FFT/logs/newcomplex.log ./
nvim newcomplex.log
nvim polmult.log
scp moreira.machado@isotria.polytechnique.fr:CSE305/CSE305-FFT/logs/newcomplex.log ./logs/
1\
\
\

ssh moreira.machado@isotria.polytechnique.fr
nvim ntt.cpp
./test > laptop.log
./test
git add main.cpp ntt.cpp
git add ntt.cpp
git commit -m "OUR N >>>>>>>>>>>>> DAC N"
git pus
cd bachelor/Sem6/CSE305/CSE305-FFT
git add CSE305_Final_Report.pdf
MAKE
mak
git commit -m "add more images"
git commit -m "add report"
xdg-open images/image_fluid.svg
./render 
xdg-open images/image_vonoroi.svg
ake
rm ./render
imake
./render 1 2000
./render 1 10
./render 1 400
git commit -am "kd tree works"
git add colormatching
git commit -am "add lab 5"
cd colormatching
make; ./render
./render
xdg-open out.png
git add main.cpp random.cpp brad.png davy.png out.png 
git commit -m "Finished color matching"
cd code_template
cd proj2
./render 1 50
mv images/image_vonoroi.svg image_vonoroi_bad.svg
mv image_vonoroi_bad.svg ./images
./render 1
make ./render 1 30
make; ./render 1 60
make; ./render 1 2000
./render 2 30
./render 2 100
./render 2 2000
./render 1 5000
./render 1 30
make; ./render 1 40
make; ./render 1 200
make; ./render 1 20
make; ./render 1 30
./render 1 20
./render 1 200
./render 1 1000
./render 1 40
./render 1 60
./render 0 
xdg-open image_sutherland_hodgman.svg
mv image_vonoroi.svg vonoroi_100.svg
rm image_fluid*.svg
rm image.svg
rm image_vonoroi_bad.svg
..cd 
./render 1 1000 
mv images/image_vonoroi.svg vonoroi_1000.svg
mv vonoroi_1000.svg ./images/
sudo dnf install 'tex(svg.sty)'
./render 1 500
./render 1 100
./render 2 200
./render 2 500
./render 2 250
./render 2 1000
./render 3 
mv images/image_fluid.svg images/safe_fluid.svg
mv images/image_fluid.svg images/safe_fluid_2.svg
mv images/image_fluid.svg images/safe_fluid_3.svg
./render 3
git add fluid_video.svg
git commit -am "final version"
git add images
git add report/main.tex
git rm --cached report/main.tex
ln report/main.pdf report.pdf
git add report.pdf
git commit -am "adding report"
git diff main.cp
git diff main.cpp
git diff polygon.cpp
mv *.svg images/
cd fluid
mv fluid/* images/
rmdir fluid
cd bachelor/Sem6/CSE306/proj2
cd bachelor/Sem6/CSE306
cd bachelor/Sem6/CSE306/proj2/report
convert -density 1200 -resize 200x200! vonoroi_100.svg vonoroi_100.png
convert -density 1200 -resize 1000x1000! vonoroi_100.svg vonoroi_100.png
xdg-open vonoroi_100.png
convert -density 1200 -resize 1024x1024! vonoroi_100.svg vonoroi_100.png
convert -density 1200 -resize 1024x1024! vonoroi_1000.svg vonoroi_1000.png
convert -density 1200 -resize 1024x1024! image_vonoroi.svg vonoroi_500.png
convert -density 1200 -resize 1024x1024! image_power_diagrams.svg ot_exp_1000.png
convert -density 1200 -resize 1024x1024! image_power_diagrams.svg ot_unif_250.png
nordvpn discoonect
nordvpn connect fr
bravce
nordvpn connect france
nordvpn d
nordvpn connect
nordvpn disconnect
nvim agua.txt
timedatectl set-timezone "$(curl --fail https://ipapi.co/timezone)"
iw dev
gdbus call --system --dest fi.w1.wpa_supplicant1 --object-path /fi/w1/wpa_supplicant1 --method org.freedesktop.DBus.Properties.Set fi.w1.wpa_supplicant1 WFDIEs "<@ay [0x00, 0x00, 0x06, 0x00, 0x90, 0x1c, 0x44, 0x00, 0xc8]>"\

sudo gdbus call --system --dest fi.w1.wpa_supplicant1 --object-path /fi/w1/wpa_supplicant1 --method org.freedesktop.DBus.Properties.Set fi.w1.wpa_supplicant1 WFDIEs "<@ay [0x00, 0x00, 0x06, 0x00, 0x90, 0x1c, 0x44, 0x00, 0xc8]>"\

iw phy phyX interface add mon0 type monitor\
ip link set mon0 up\

G_MESSAGES_DEBUG=all
gdbus call --system --dest fi.w1.wpa_supplicant1 --object-path /fi/w1/wpa_supplicant1 --method org.freedesktop.DBus.Properties.Get fi.w1.wpa_supplicant1 Capabilities\

sudo gdbus call --system --dest fi.w1.wpa_supplicant1 --object-path /fi/w1/wpa_supplicant1 --method org.freedesktop.DBus.Properties.Get fi.w1.wpa_supplicant1 Capabilities\

sudo gdbus call --system --dest fi.w1.wpa_supplicant1 --object-path /fi/w1/wpa_supplicant1 --method org.freedesktop.DBus.Properties.Get fi.w1.wpa_supplicant1 WFDIEs\

sudo dnf group install Multimedia
sudo dnf install @multimedia @sound-and-video ffmpeg-libs gstreamer1-plugins-{bad-*,good-*,base} gstreamer1-plugin-openh264 gstreamer1-libav lame*
sudo dnf install @multimedia @sound-and-video ffmpeg-libs gstreamer1-plugins-{good-*,base} gstreamer1-plugin-openh264 gstreamer1-libav lame*
sudo dnf install @multimedia @sound-and-video ffmpeg-libs gstreamer1-plugins-{base} gstreamer1-plugin-openh264 gstreamer1-libav lame*
sudo dnf install @multimedia @sound-and-video ffmpeg-libs gstreamer1-plugins-{base} gstreamer1-plugin-openh264 gstreamer1-libav
sudo dnf install @multimedia @sound-and-video ffmpeg-libs gstreamer1-plugin-openh264 gstreamer1-libav
sudo dnf install
gst-inspect-1.0 | grep -E "openh264enc|x264enc|vaapih264enc"
G_MESSAGES_DEBUG=all gnome-network-displays
mkdir /usr/share/fonts/GitLabSans
sudo mkdir /usr/share/fonts/GitLabSans
sudo cp downloads/GitLabSans.ttf /usr/share/fonts/GitLabSans
cd comp
rm -r comp
cd aoc
rm -r aoc
cd ISLP
cd datal
cd data
rm -rf StartTree
cd thisquakedoesnotexist
git remote --show
git remote
git remote -v
rm -rf thisquakedoesnotexist
rm -rf leetcode
rm -rf codeforces
rm -rf llvm-project
cd test
rm -rf test
nvim tracking.py
rm tracking.py
mkdir kaggle
cd kaggle
rm -rf sshservice-cli
pip cache dir
pip cache purge
rm -rf files/*
sudo rm -rf files/*
poetry cache clear
poetry cache clear --all
poetry cache list
poetry cache clear --all .
pip uninstall poetry
git add zsh
git rm --cached zsh/.config/zsh/zsh-autosuggestions
git rm --cached -f  zsh/.config/zsh/zsh-autosuggestions
git submodule add https://github.com/zsh-users/zsh-autosuggestions zsh/.config/zsh/zsh-autosuggestions
git commit -m "adding zsh files"
ls -H
ls -asH
echo $ZSH_NAME
mkdir -r ../dotfiles/zsh/.config
mkdir -R ../dotfiles/zsh/.config
mkdir --help
mkdir -p ../dotfiles/zsh/.config
cp -r zsh ../dotfiles/zsh/.config/
cd zsh
stow -nv
stow -nv .
rm -r ../.config/zsh
y
stow -nv zsh
stow -v zsh
rm agua.txt
cd dotfiles
git add nvim/.config/nvim/after/plugin/lsp.lua
git add sway/.config/sway/swaymonad
git commit -am "updating dotfiles"
man stow
sudo dnf remove R-core
pdflatex 
bottom
sudo dnf group list installed\

dnf list installed | nvim
which clangd
fg
cd bachelor/Sem6/CSE306/proj2/
nvim fluid.cpp
Neofetch
sudo dnf remove jetbrains-mono-fonts-all
fc-cache -v
dnf list installed | grep "jetbrains"
git commit -am  "reformating config to lazy-friendly format"
cd /usr/share/local
sudo rm -r JetBrainsMono
sudo mv ~/downloads/JetBrainsMono ./
sudo rm JetBrainsMonoNL*
sudo rm JetBrainsMonoNerdFontPropo*
cd .docker
cd buildx
echo 1024 > /proc/sys/fs/inotify/max_user_instances
fc-cache -v -f
fc-list | grep -i "jetbrains"
fdisk -l
sudo fdisk -l
btrfs filesystem show /home
btrfs check
btrfs help
findmnt -t btrfs\

btrfs filesystem show /root
btrfs filesystem show /dev/nvme0n1p3
sudo btrfs subvolume list /\

btrfs filesystem show /
btrfs filesystem show 
findmnt -t btrfs -o SOURCE,TARGET -n\

sudo ./VentoyWeb.sh
readlink -e /etc/grub2.conf
cat /etc/grub2.cfg
readlink -f /etc/grub2.cfg
readlink /etc/grub2.cfg
sudo grub2-mkconfig -o /boot/grub2/grub.cfg
sudo cat /boot/grub2/grub.cfg
readlink -f /etc/grub2-efi.cfg
readlink /etc/grub2-efi.cfg
sudo update-grub
bash -c "$(curl -fsSL https://raw.githubusercontent.com/JackHack96/PulseEffects-Presets/master/install.sh)"
sudo dnf install zita-convolver
sudo dnf remove qt-creator
sudo dnf remove qt6-designer-6.7.2-1.fc40.x86_64
sudo dnf remove qt6-assistant-6.7.2-1.fc40.x86_64
sudo dnf remove qt6-linguist-6.7.2-1.fc40.x86_64
clang --version
sudo dnf install latexmk
latexmk
sudo dnf install 'tex(fontawesome5.sty)'
sudo dnf install 'tex(tcolorbox5.sty)'
sudo dnf install 'tex(tcolorbox.sty)'
sudo dnf install 'tex(tikzfill.image.sty)'
cd code/CSC
cd workshops
cd latex
cd images
76 213 45 62
jupyter server list
conda init pai-demos
conda update numpy
cd documents/ETHZ/exchange
conda env remove --name pai-demos
cd probAI
mv probAI PAI
conda env create --name pai-demos
$ conda create -n pai-demos python=3.9 jupyter\
$ conda activate pai-demos\

conda create -n pai-demos python=3.9 jupyter\
conda activate pai-demos\

pip3 install -r requirements.txt
conda install ipykernel\

conda update jupyter
conda search notebook
conda install notebook=6.4.11\

jupyter notebook --version
conda remove notebook
conda install notebook 
arecord --duration=5 test.wav\

xdg-open test.wav
rm test.wav
nvim --version
pip uninstall jupyter
sudo dnf reinstall jupyter-client
sudo dnf reinstall jupyterlab-4.1.0-1.fc40.noarch
sudo dnf remove python3-notebook
pip list --local
pip install jupyterlab 
jupyter lab
conda activate\
conda init --reverse --all
rm -rf miniconda3
jupyter -h
jupyter --version
pip uninstall jupyter-client
dnf list installed | grep -i "jupyter"
sudo dnf remove python3-jupyter-core-5.1.0-7.fc40.noarch
cd documents/ETHZ/Exchange
jupyter
sudo dnf remove youtube-dl-2024.08.06.gitc509896-1.fc40.noarch
sudo dnf remove yt-dlp-2024.08.06-1.fc40.noarch
poetry 
cd .local/share
cd pypoetry
cd venv
whereis poetry
rm /home/fcomoreira/.local/bin/poetry
rm -rf pypoetry
poetry
bash Miniconda3-latest-Linux-x86_64.sh
conda
conda init
pip install ipykernel
python -m ipykernel install --user --name=pai-demos\

conda activate
..
cd desktop
cd Exchange
cd PAI
cd pai-demos
nvim requirements.txt
conda env --list
conda remove --name pai-demos --al
conda remove --name pai-demos --all
nvim requirements.yml
conda env create -f requirements.yml
whereis jupyter
conda install jupyter
conda install nbgrader
sudo tlp-stat -s
sudo tlp-stat -t
sudo tlp-stat -c
sudo tlp-stat -
sudo tlp-stat --udev
cat /proc/$$/cmdline
echo $0
cd ~/.local/share/applications
cd /usr/share/wayland-sessions/
sudo nvim sway.desktop
whereis startsway
whereis startsway | nvim
nvim .local/bin/startsway
nvim confi
cd .config/gtk-3.0/
cd /.local/share/icons
cd ~/.loca;/share/icons
cd ~/.local/share/icons
cat ~/.local/share/icons/default
cd ~/.local/share/icons/default
cd /usr/share/icons
cd breeze_cursors
cd Breeze_Light
ln --symbolic /usr/share/icons/breeze_cursors ~/.local/share/icons/default\

nvim ~/.config/sway/config
nvim ~/.config/gtk-3.0/settings.ini
cd .config/gtk-4.0/
nvim settings.ini
nvim gtk-3.0/settings.ini
nvim .config/sway/config
sudo dnf install docker-compose
sudo systemctl enable docker
sudo systemctl start docker
cd .config/sway
cd ../waybar
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
(echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/fcomoreira/.bashrc
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brew install tamarin-prover
brew install tamarin-prover/tap/tamarin-prover
cd documents/ETHZ/ISL
tamarin-prover --prove sig.spthy
tamarin-prover interactive .
echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bash_profile\
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brave-browser
brew 
cd .config/zsh/
nvim .zsh_profile
echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.profile
cd linuxbrew
rm .zprofile
python -m ipykernel install --user --name pai-demos --display-name "PAI Demos"\

pip info ipython
pip list
pip list | grep "trail"
conda create -n datascience python=3.11
conda install pytorch torchvision torchaudio cpuonly -c pytorchi
conda install numpy
conda install ipykernel
python -m ipykernel install --user --name datascience\

conda install traitlets
conda install traitlets>5.13
conda install traitlets>=5.13
conda install ipython=7.*\

conda install "ipython=7.*"
conda search iptython
conda search ipython
conda install "ipython=8.20.0"
cd /usr/local/share/fonts
cd JetBrainsMono
fc-list : family
fc-list : family | grep -i "jetbrains"
cd /home/fcomoreira/.local/share/icons
cd fonts
cd /usr/share/fonts
tamarin-prover
cd exam-magic-box-v2
mv exam-magic-box-v2/big-data-exam-magic-box-v2 ./
rm exam-magic-box-v2
rmdir exam-magic-box-v2
nvim README.md
mv cheatsheet_* cheatsheet/
mv cheatsheet_* cheatsheets/
mv Cheatsheet_* cheatsheets/
mv *.jsonl cheatsheets
conda .
nordvpn connect br
nordvpn 
nordvpn account
cd big-data-exam-magic-box-v2
python3 --version
tamarin-prover my_demo.spthy
tamarin-prover --prove my_demo.spthy
nvim Protocol1.spthy
code 
conda create -n datascience python=3.10
conda install torch
conda install matplotlib
conda install pandas
conda install ipython
python3 task1.py
cd miniconda3/lib
mkdir backup
mv libstd* backup
cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6  ./
cd backup
cp /usr/lib64/libstdc++* ./ 
ln -s libstdc++.so.6 libstdc++.so
ln -s libstdc++.so.6 libstdc++.so.6.0.19
cd /usr/local/lib
cd lib64
ls -ash | grep -i "libstdc"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh)"
cd fcomoreira
tamarin-prover 
ipython --version
conda list ipython
conda list traitlets
pip list | grep "traitlets"
brew
conda create -n datascience -c conda-forge python=3.11
conda --version
conda config --add channels conda-forge
conda install pytorch torchvision torchaudio cpuonly -c pytorch
conda install pandas numpy matplotlib ipython jupyter
conda remove --name datascience --all
sudo dnf install boost-devel
sudo dnf install CGAL-devel\

sudo dnf groupinstall "Development Tools"\
sudo dnf install gcc-c++ make boost-devel CGAL-devel cmake\

conda rename -n pai-demos datascience
conda activate pai-demos
mv big-data-exam-magic-box-v2 magic-box
unzip projectExport_Problem_of_the_Week_3_-_Student_attempt_2024-10-02T22_41_14.360Z.tar 
tar xvf projectExport_Problem_of_the_Week_3_-_Student_attempt_2024-10-02T22_41_14.360Z.tar
rm projectExport_Problem_of_the_Week_3_-_Student_attempt_2024-10-02T22_41_14.360Z.tar
xdg-open this.pdf &
cd Thesis
xdg-open final_thesis_report.pdf
cd .config/zathur
cd exercises/week2
python3 verify.py
python3 verify.py --model_path ./models/net_10_PGD.pt
python3 verify.py --model_path ./models/net_10_TRADES.pt
cd exercises/week3
nvim verify
nvim verify.py
nvim verify_solution.py
cd week3/
cleae
../test.sh
cd public
cd notebooks
cd JSONiq
wl-paste > JSONiq-tutorial-2.ipynb
wl-paste > JSONiq-tutorial-3.ipynb
wl-paste > hamlet.txt
mv hamlet.txt ../
wl-paste > Exercise02.ipynb
cd magic-box/notebooks
cd exercises
git clone https://github.com/RumbleDB/bigdata-exercises.git
cd exercise02
cd exercise03
code Exercise03_HDFS
cd week3/ant_challenge
cd important_bridges
cd buddy_selection
cd ant_challenge
cd week3/iron_islands
./a.out < public/test1.in | diff -bsq public/test1.out 
./a.out < public/test1.in | diff -bsq public/test1.out -
./a.out < public/test.in | diff public/test3.out -
./a.out < public/user_test.
./a.out < public/test3.in
rm -rf *
mkdir week3
cd week3
nvim test.sh
chmod +x test.sh
./test.sh
cd First\ steps\ with\ BGL
mv week3/greyjoy week3/iron_islands
cd tracking
nvim public/user_test.in
../../test.sh
dnf list  |grep  -i "cgal"
dnf sarch CGAL-devel
dnf search CGAL-devel
sudo dnf downgrade CGAL-devel
g++ -std=c++14 -I /usr/local/include src/main.cpp 
cd week5/hit
g++ -std=c++14 -I /usr/local/include src/main.cpp | less
g++ -std=c++11 -I /usr/local/include src/main.cpp
make src/main.cpp
rm -rf Cmake*
rm -rf CMakeCache.txt CMakeFiles CMakeLists.txt
rm Makefile
rm cmake_install.cmake
./test.sh a
./test.sh a ~/documents
./test.sh a week5/hit/public
./main ../public/user_test.in
./main < ../public/user_test.
cd first_hit
cd hit
cd /etc/fonts
nvim fonts.conf
sudo dnf install downloads/slack-4.40.133-0.1.el8.x86_64.rpm
cd CSE305
cd td1
cd td3
nvim sum.cu
cd antenna
cd wee5
cd antenna/src
cd Big\ Data
bash oxygen-64bit-openjdk.sh
gnome-control-center --version
git clone git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
cd WhiteSur-gtk-theme
bash ./install.sh -l --shell -panelopacity 0
bash ./install.sh
cd week4
cd hiking_maps
ssh root@194.68.245.75 -p 22197 -i ~/.ssh/id_rsa
ls ~/.ssh/
ssh root@194.68.245.75 -p 22197 -i ~/.ssh/id_rsa.pub
sudo dnf install git-lfs
ela
./elan
\
./lake
./elan self update
./elan default leanprover/lean4:stable
eval $(ssh-agent -s)\

elan 
cd toolchains
cat 5.13
rm 5.13
conda create -n numina -c conda-forge python=3.9
python -m pip install huggingface_hub\
huggingface-cli login
git clone git@github.com:project-numina/autoformalizer.git
cd autoformalizer
cd mert
git checkout -b filter-leanv4
mkdir moreira
mv moreira scripts
cd moreira
pip install datasets
conda clean all
conda clean -all
conda env update --file autoformalization.yml
cd .elan
cd tmp
cd bin
lean 
./lean
ssh-keygen -t rsa -b 4096 -C "moreiramachadoneto@gmail.com"
cat .ssh/id_rsa_work
nvim .bash_profile
nvim .zprofile
ssh-add ~/.ssh/id_rsa
ssh moreira@194.68.245.75 -p 22197
cd .cache
rm -rf .elan
elan
sudo dnf downgrade kitty-0.35.2-1.fc40.x86_64
which elan
nvim .profile
cd week5
cd moving_books
cd asterix_the_gaul
./a.out < public/user_test.in | diff public/user_test.out -
cd week5/asterix_the_gaul
cd week5/severus_snape
1101107758
cd documents/ETHZ/Big\ Data
cd Big_Data/exercise05
cd boats
cd documents/ETHZ/Big\ Data/big-data-exam-magic-box-v2
cd exercise05
docker ps --format "{{.Names}}"
cd documents/ETHZ/Big\ Data/magic-box
cd bigdata-exercises/Big_Data/exercise05
docker cp enwiki-20200920-pages-articles-multistream_small.csv exercise05-hbase-master-1:/
docker exec -it exercise05-hbase-master-1 /bin/bash
py3
cd week6/motorcycles/
cd tiles
cd coin_tossing_tournament
cd knights
cd bistro
lsa
./main < ../public/test.in
cd documents/ETHZ/DL
cd AlgoLab
conda activate numina
conda remove --name numina --all
conda list env
conda env list
conda remove --name autoformalization --all
nvim init.lua
wl-copy < id_rsa_work.pub
ssh moreira@192.222.52.115
g++ -std=c++14 -I /usr/local/include src/main.cpp
nvim .clang-format
cat .clang-format
cd documents/ETHZ/AlgoLab/week8
cd attack_on_kings_landing
botp
vim
logout
cd inball
c dsrc
ssh-add -l
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa_work
ssh lambdalabs
sudo dnf install keyd
rm -rf keyd
git clone https://github.com/rvaiya/keyd\
cd keyd\
make && sudo make install\
sudo systemctl enable keyd && sudo systemctl start keyd
man keyd
cd idefix
cd week6
cd kingdom_defense
which zsh
g++ -std=c++17 -I /usr/local/include test.cpp
wget "https://repo.protonvpn.com/fedora-$(cat /etc/fedora-release | cut -d' ' -f 3)-stable/protonvpn-stable-release/protonvpn-stable-release-1.0.2-1.noarch.rpm"
sudo dnf install ./protonvpn-stable-release-1.0.2-1.noarch.rpm
rm protonvpn-stable-release-1.0.2-1.noarch.rpm
sudo dnf remove proton-vpn-gnome-desktop-0.8.0-1.fc40.noarch
sudo dnf install --refresh proton-vpn-gnome-desktop
nordvpn login
pavucontrol
/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/zsh/envVars.txt
cd documents/ETHZ/RTAI
git clone git@gitlab.inf.ethz.ch:COURSE-RELIABLEAI-2024/rtai-project-25.git
wl-copy < id_rsa.pub
pip install virtualenv
sudo dnf install python3.10\

virtualenv venv --python=python3.10
source venv/bin/activate
pip install -r requirements.txt
mv venv rtai-venv
source rtai-venv/bin/activate
cd rtai-
deactivate 
rm -rf rtai-venv\

virtualenv venv --python=python3.10\
 source venv/bin/activate\
 pip install -r requirements.txt
python code/verifier.py --net {net} --spec test_cases/{net}/img_{dataset}_{eps}.txt
chmod +x code/evaluate.sh\
./code/evaluate.sh
keyd
sudo nvim /etc/keyd/default.conf
cd cod
mv DeepPoly.py aux.py
pip install -e .
python code/DeepPoly.py
3
python code/linear.py
git add code/linear.py
git add code/DeepPoly.py
git commit -am "Initnial 'working' version of linear layer"
cd placing_knights
g++ -std=c++17 -I /usr/local/include src/main.cpp -o2
rm 2
g++ -std=c++17 -I /usr/local/include src/main.cpp -O2
cd Hermione_Granger
docker container prune\

docker ps -a\

exitt
sudo docker-compose up
docker image prune\

docker image prune -a\

docker volume prune\

sudo docker-compose up -d
cear
df -h
cd documents/ETHZ/BigData/bigdata-exercises/Big_Data/exercise07
cd Big_Data/exercise07
sudo docker-compose up 
cd Big_Data/exercise08
nvim docker-compose.yml
docker container prune -f
docker image prune -af
docker-compose up -d
docker cp fruits.txt jupyter:/home/jovyan/\
docker cp yellowthings.txt jupyter:/home/jovyan/
rm -rf result
docker cp gutenberg jupyter:/home/jovyan/
wget https://f003.backblazeb2.com/file/larsyencken-eu-public/greatlanguagegame/confusion-2014-03-02.tbz2
rm -rf confusion-2014-03-02
tar -jxvf confusion-2014-03-02.tbz2
cd confusion-2014-03-02
head -n 3000000 confusion-2014-03-02.json > confusion-part.json
docker cp confusion-2014-03-02/ jupyter:/home/jovyan/
cd documents/ETHZ/BigData/bigdata-exercises
cd exercise
sudo dnf install guvcview
ipyhon
python3 code/linear.py
git commit -am "WIP version of backsubstitute bounds"
git add code/DeepPoly.py code/linear.py
git commit -m "fixing merge conflicts"
python3 code/verifier.py
git commit -am "Hotfixes"
cd week
cd week9
cd real_estate_market
cat public/sample.in
cd canteen
cd algocoon
nvim /etc/keyd/default.conf
sudo keyd reload
zsh --version
kitty --config=NONE
sudo dnf downgrade kitty
killall kitty
sudo dnf upgrade zsh
kitty --version
sudo dnf upgrade kitty
sudo dnf reinstall zsh
zsh
echo $FPATH
realpath is-at-least
whereis is-at-least
which is-at-least
nvim /usr/lib64/kitty/shell-integration/zsh/.zshenv
builtin autoload -- is-at-least
git branch --list
git checkout -b skip-connection
python code/verifier.py --net fc_linear --spec test_cases/fc_base/img_mnist_0.048839.txt
git add . 
git commit -m "fix imports, now verifier.py can run, move backsubstitute bounds to DeepPoly.py"
git merge skip-connection
git checkout 66014c085993f2529ecc29f4479515c768c92e9c
git diff -- 66014c085993f2529ecc29f4479515c768c92e9c
git diff 66014c085993f2529ecc29f4479515c768c92e9c
git add code/verifier.py
git commit -m "hotfix for more general propagate_sample"
git checkout skip-connection
cd week1
cd week 11
cd Ceryneian_Hind
cd rtai-project-25
git diff code/verifier.py
rm tatus
python code/verifier.py --net fc_linear --spec test_cases/fc_linear/img_mnist_0.077340.tx
python code/verifier.py --net fc_base --spec test_cases/fc_base/img_mnist_0.048839.txt
git merge --abort\

python code/verifier.py --net fc_base --spec test_cases/fc_base/img_mnist_0.048508.txt
python my_code/verifier.py --net fc_base --spec test_cases/fc_base/img_mnist_0.048508.txt
git staus
git commit -m "fix bad assertion for weights of linear"
git commit -am "fix bad assertion for weights of linear"
git checkout cc030a3b44ce63d03c992abfc2ab3efea088178f
git diff cc030a3 -- code/verifier.py
grep -r "tests.propagations" .\

git add my_code/propagations/DeepPoly.py
git add tests/__init__.py
git commit -am "fix testing not finding paths"
git checkout -- tests/propagations_tests/linear_test.py
cd exercise09
cp * ../../../exam-magic-box-v3/notebooks/
install.sh
./install.sh
postgres
sudo systemctl start psql
cp bigdata-exercises/Big_Data/exercise09/* magic-box/notebooks/exercises/
cd magic-box
docker compose -d
cd BigData/
cd exam-magic-box-v3/
cd bigdata-exercises/Big_Data
cd exercise08
cp confusion-2014-03-02 ../../../exam-magic-box-v3/notebooks
cp -r confusion-2014-03-02 ../../../exam-magic-box-v3/notebooks
git rm my_code/propagations/skip.py
git commit -m "Working skip"
git commit -am "fix import"
python my_code/verifier.py --net skip --spec test_cases/skip/img_mnist_0.139199.txt
python my_code/verifier.py --net skip --spec test_cases/skip/img_mnist_0.078863.txt
git commit -am "implemented last layer optimization (subtract out[y] of all entries and consider ub (out[j] - out[y]) < 0)"
cd bigdata-exercises/Big_Data/exercise10/
curl -O https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/primer-dataset.json\
\

docker cp primer-dataset.json mongo:/primer-dataset.json\
\

docker exec -it mongo sh
\:q
eit
nvim .config/nvim
python3 day1.py
python3 day1.py < wl-paste 
wl-paste | python3 day1.py
python3 day2.py
wl-paste | python3 day2.py
mkdir adventofcode
nvim day1.py
ced clues
cd clues
cd pied_piper
cd bigdata-exercises/Big_Data/exercise10
curl -O https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/primer-dataset.json
docker cp primer-dataset.json mongo:/primer-dataset.json
docker exec -it mongo sh\
\

python3 day3.py
wl-paste | python3 day3.py > out.log
wl-paste | python3 day3.py
nvim day3.py
wl-paste | python3 day4.py
git commit -am "add test for preliminary cases and remove conv due to extreme resource usage"
cd San_Francisco
cd Rubeus_Hagrid
nvim bad_sample.txt
EXIT
cd week11/Sith	
./main < ../public/test1.in | diff - ../public/test1.out
./main < ../public/test1.in | nvim
./main < ../public/user_test.in
g++
./main < ../public/test1.in
g+
ping www.youtube.com
cd Worldcup
cat ../public/test1.in
cat ../public/test1.out
./main < ../public/test3.in
cd Asterix_in_Switzerland
git diff -- my_code/propagations/conv2d.py
git diff -- tests/verifier_test.py
git add my_code/propagations/relu.py
git add my_code/propagations/relu6.py
git commit -m "update relu to take input alphas"
git commit -m "add alpha optimization and updated relu"
git commit -m "Working alpha optimization and fix indexing for relu/relu6"
cd exercise11
cp Big_Data/exercise11/* ../exam-magic-box-v3/notebooks
cd exam-magic-box-v3
/usr/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/zsh/envVars.txt
/home/fcomoreira/code/continual-learning/.venv/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/shell_exec.py /home/fcomoreira/code/continual-learning/.venv/bin/python -m pip install -U torch-tb-profiler /tmp/tmp-677381sgTbWESFz151.log
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/zsh/envVars.txt
git clone https://github.com/wp99cp/continual-learning
git clone git@github.com:wp99cp/continual-learning.git
cd continual-learning
# create and activate a virtual environment\
python3 -m venv .venv\
source .venv/bin/activate\
\
# install the requirements\
pip install -r requirements.txt
python3 main.py
git fetch origin\
git checkout random-selection-from-replay-buffer
/bin/python3.10 /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/zsh/envVars.txt
/bin/python3.10 /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.0-linux-x64/python_files/deactivate/zsh/envVars.txt
wl-copy < .ssh/id_rsa.pub
ssh-copy-id fmachado@student-cluster.inf.ethz.ch -i ./.ssh/id_rsa.pub
ssh-copy-id -i ./.ssh/id_rsa.pub fmachado@student-cluster.inf.ethz.ch 
man ssh-copy-id
ssh-copy-id fmachado@student-cluster.inf.ethz.ch
ssh fmachado@student-cluster.infk.ethz.ch
ssh student-cluster.inf.ethz.ch
wl-paste | python3 day5.py
nvim .ssh/config
ssh fmachado@student-cluster.inf.ethz.ch
ssh-keygen -R student-cluster.inf.ethz.ch\

ssh -v fmachado@student-cluster.inf.ethz.ch
ssh -v fmachado@student-cluster2.inf.ethz.ch
/home/fcomoreira/miniconda3/envs/datascience/bin/python
wl-paste | python3 day6.py
wl-paste | python3 day7.py
/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.0-linux-x64/python_files/deactivate/zsh/envVars.txt
wl-paste | python3 day8.py
guvcview
git checkout -b "mistake"
git commit -am "Separate relation coefficient and biases in DeepPolyBounds and all propagations. It wasnt that big of a mistake afterall"
git merge mistake
cd bigdata-exercises
cd Big_Data
cd exercise12
docker compose down 
git add my_code/alpha_optim.py
git commit -am 
git commit -m "alpha mask optimization"
python my_code/verifier.py --net fc_linear --spec test_cases/fc_linear/img_mnist_0.082864.txt
python my_code/verifier.py --net fc_linear --spec test_cases/fc_linear/img_mnist_0.077340.txt
git checkout -b "verifier class"
git checkout -b "verifier-class"
git add my_code/.
git add tests/.
git commit -m "DeepPolyVerifier and overall reshaping of the code. Fix several tests"
git push --set-upstream origin verifier-class
codec.
git add my_code/. tests/.
git commit -m "Trying to fix last layer optimization, still broken"
git checkout new-main -- .
git checkout verifier-class
git checkout verifier-class -- .
git restore --staged my_code/propagations/DeepPoly.py
rm test.ipynb
git commit -am "fix last layer optimization"
\
tp
git commit -am "checkpoint"
git commit -am "their relu"
git commit --amend\

git chcekout new-main
git checkout new-main
cd reimbursement
pdfunite 'Documento PDF (1).pdf'
pdfunite 'Documento PDF (1).pdf' 'Documento PDF.pdf' 'FMMN, 16 Dec,Trains.pdf'
xdg-open 'Documento PDF (1).pdf'
cd documents/reimbursement
gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf 'Documento PDF (1).pdf' 'Documento PDF.pdf'
xdg-open merged.pdf
mv merged.pdf 'FMMN,16 Dec,Trains LCY'
git commit -m "add comments and be consistent with torch.maximum instead of functional.relu"
python code/verifier.py --net fc_linear --spec test_cases/fc_linear/img_mnist_0.077340.txt
python code/verifier.py --net fc_linear --spec test_cases/fc_linear/img_mnist_0.082864.txt
timeout 30 python code/verifier.py --net fc6_w --spec test_cases/fc6_w/img_mnist_0.124546.txt
timeout 30 python code/verifier.py --net fc6_w --spec test_cases/fc6_w/img_mnist_0.042779.txt
git checkout master
git merge new-main
git rm --cached results/ preliminary_test_cases/
git rm --cached -r results/ preliminary_test_cases/
timeout 30 python code/verifier.py --net conv_base --spec test_cases/conv_base/img_mnist_0.055929.txt
timeout 30 python code/verifier.py --net conv_base --spec test_cases/conv_base/img_mnist_0.075798.txt
git add code/.
git commit -m 
git commit -m "merge new-main to master"
python code/run_all.py
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.0-linux-x64/python_files/deactivate/zsh/envVars.txt
dnf check-update
sudo dnf install code
sudo dnf remove dropbox
cd /etc/yum.repos.d
sudo rm protonvpn-stable.repo
sudo rm dropbox.repo
sudo dnf repolist
rm 
dnf repoquery --installed --repoid=copr:croadfeldt/Unison\

dnf repoquery --installed --repoid=copr:croadfeldt:Unison\

sudo dnf copr remove croadfeldt:Unison
sudo dnf copr remove croadfeldt/Unison
sudo dnf clean all
dnf repolist
dnf list | grep -i "unison"
_unison
sudo dnf remove unison
sudo dnf list installed | grep -i "unison"
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\
echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null\

dnf check-update\
sudo dnf install code # or code-insiders\

cd Alastor_Moody
./a.out < public/test2.in
./a.out < public/test1.in
./a.out < sample.in
./a.out < public/test2.in | diff public/test2.out -
./a.out < public/test2.in 
./a.out < public/test3.in | diff public/test3.out -
cd Rapunzel
 /usr/bin/env /bin/sh /tmp/Microsoft-MIEngine-Cmd-f1coj4bm.5oe 
 /usr/bin/env /bin/sh /tmp/Microsoft-MIEngine-Cmd-lw3dy0dh.0xi 
CLEAR
cd week12/Rapunzel
g++ -std=c++17 -pg -I /usr/local/include src/main.cpp 
gprof a.out gmon.out > profile.txt\

/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.1-linux-x64/python_files/deactivate/zsh/envVars.txt
sudo systemctl restart bluetooth
sudo systemctl status bluetooth\

bluetoothctl power on
sudo modprobe -r btusb\
sudo modprobe btusb\

lspci | grep -i bluetooth\

lsusb\

python3 downloads/eduroam-linux-SFIoTZ-eduroam_ETH_Zurich.py
is-at-least
/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/deactivate/zsh/envVars.txt
cide .
cd Exercise12
python3 task2.py
cd Return_of_the_Jedi
cd documents/ETHZ/.obsidian/snippets/
nvim theme-override.css
cd cheetsheet
cd slides
cd Schneewittchen
cd exam-magic-box-v
docker compose up
cd files
cd week14
cd Ludo_Bagman
cd Asterix_and_the_Tour_of_Gaul
./a.out < public/test1.in 
./a.out < public/test1.in | diff public/test1.out -
cd week10
cd The_Hand_s_Tourney
cd Fighting_Pits_of_Meereen
lds
cd Asterix_and_the_Chariot_Race
./a.out < public/user_test.in
./a.out < public/test4.in | diff - public/test4.out
./a.out < public/test4.in
g++ -std=c++17 -I /usr/local/include src/main.cpp 
cd week7
cd H1N1
cd Nemean_Lion
cgal
cd exam-magic-box-v4
cd exam_docker_v4
docker compose up - d
cd documents/ETHZ/BigData
cd exam-magic-box-v4/exam_docker_v4
docker compose up -d
cd documents/ETHZ/BigData/exam-magic-box-v4/exam_docker_v4
docker compose up -d 
docker compose down
sudo dnf install `tex(soul.sty)`
sudo dnf install 'tex(soul.sty)'
wl-paste > a.jpg
pytho3n
wl-paste > table.jpg
wl-paste > table.jpeg
wl-paste --list-types
wl-paste > table.png
sudo dnf install pandoc
pandoc -s input.docx -o output.tex\

pandoc -s deep\ learning\ summary.docx -o output.tex\

mkdir cheatsheet
mv output.tex cheatsheet
cd cheatsheet
mv output.tex main.tex
cp ../../RTAI/cheetsheet/main.tex ./
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2024.22.2-linux-x64/python_files/deactivate/zsh/envVars.txt
cd exam
cd exams
cd PhantomMenace
g++ -std=c++17 -I /usr/local/include main.cpp 
cd week11
cd Lernaean_Hydra
cd week13/CarSharing
g++ -std=c++17 -I /usr/local/include src/algo.cpp 
./a.out < public/sample.in
../../test.sh a.out ./public
g++ -std=c++17 -I /usr/local/include src/main.cpp
./a.out < public/test5.in
cd week8
cd casterly_rock
cgal_create_cmake_script
./main < ../public/test2.in | diff ../public/test2.out -
./main < ../public/test3.in | diff ../public/test3.out -
./main <../publoc/sample.in
./main < ../public/sample.in
./main < ../public/test1.in | diff ../public/test1.out -
../../../test.sh main ../public
sudo systemctl restart systemd-resolved.service
ssh-keygen -t ed25519 -C "fmachado@student.ethz.ch"\

ssh-add ~/.ssh/id_sri
wl-copy < .ssh/id_sri.pub
nvim list.txt
rm a.jpg
rm bs.py
rm bad_sample.txt
cd documents/ETHZ/AlgoLab
git initt
find . -iname "*josue*"
rm week12/Rapunzel/src/josue.cpp
cd week13
rm *.tar
cd week12
git clone git@github.com:fcomoreira1/algolab2024.git
mv week* algolab2024
cd algolab2024
git reset
git commit -m "add all progress"
nvim documents/CV/resume.tex
ssh moreira@104.171.203.204
nvim .gitconfig
cd .git
cd wiki
nvim usefullinks.md
gsettings set org.gnome.mutter experimental-features "['scale-monitor-framebuffer']"
npm install -g @anthropic-ai/claude-code
sudo npm install -g @anthropic-ai/claude-code
sudo npm remove @anthropic-ai/claude-code
sudo npm uninstall @anthropic-ai/claude-code
sudo npm uninstall -g @anthropic-ai/claude-code
claude
gsettings set org.gnome.mutter experimental-features "[]"
for i in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
do\
  echo performance > $i\
done
sudo su
ls /proc/cpuinfo
cat /proc/cpuinfo
sudo dnf install msr-tools
wrmsr -a
wrmsr -a 0x1a0 0x4000850089
sudo zsh setup_cpu.sh
nvim wrsmr
nvim setup_cpu.sh
cpuid -1 | grep \(synth\)
./symm
./symm 3
./symm 4
./symm 10
./symm 1000
gcc symm.c -o symm -O3
./symm 100
bash setup_cpu.sh
l3
gcc exercise1.c -S -O0
gcc exercise1.c -S -O3
gcc main.c -o main
./main 3
./main 20
cd exercise5
bash ./bench.sh
ssh moreira@192.222.58.134
cd ..sh
cd .shh
kitty +kitten ssh oldsrilab
cd repor
bash ./bench.sh results2.csv
bash ./bench.sh results_opt.csv
cd hw01
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.0.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.0.0-linux-x64/python_files/deactivate/zsh/envVars.txt
bash be
gcc --version
lscpu | grep -i cache
cat /proc/cpuinfo | grep -i cache
getconf -a | grep CACHE
getconf
getconf -a
getconf -a | grep CACHE_SIZE | awk '{printf "%s: %.2f KB (%.2f MB)\n", $1, $2/1024, $2/(1024*1024)}'
lscpu | grep -i mhz
cpuid
lscpu -C
/bin/python3.10 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.0.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.0.0-linux-x64/python_files/deactivate/zsh/envVars.txt
cd h
cd symm
bash bench.sh
bash ./bench.sh results1.csv
nvim bench.sh
bash ./bench.sh results_opt4.csv
bash ./bench.sh results_opt3.csv
mv results_opt5.csv results_base.csv
bash ./bench.sh results_opt5.csv
bash ./bench.sh results_opt6.csv
bash ./bench.sh results_base1.csv
bash ./bench.sh results_opt7.csv
gcc main.c -o main -O3 -mfma -fno-tree-vectorize
./main 10
nvim main.c
sudo bash setup_cpu.sh
bash ./bench.sh results_opt10.csv
cd exercise4
cd documents/ETHZ/ASL/hw01
sl
cp main.pdf homework.pdf
/bin/python3.10 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.2.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.2.0-linux-x64/python_files/deactivate/zsh/envVars.txt
python3 a.py
ssh oldsrilab
cd .config/ssh
nvim a.py
python3 
cachegrind
g++ -std=c++11 main.cpp -O3 -march=skylake -mno-fma -fno-tree-vectorize
g++ main.cpp -O3 -march=skylake -mno-fma -fno-tree-vectorize
g++ *.cpp -O3 -march=skylake -mno-fma -fno-tree-vectorize
valgrind --tool=cachegrind ./a.out
nvim main.cpp
g++ *.cpp -O3 -march=skylake -mno-fma -fno-tree-vectorize -g -o main
valgrind --tool=cachegrind main
valgrind --tool=cachegrind ./main
rm ./a.out
bluetoothctl disconnect 94:DB:56:AC:88:CC
mkdir report
g++ test.cpp -fno-tree-vectorize -march=skylake -mno-fma -fno-math-errno -S
g++ test.cpp -fno-tree-vectorize -march=cascadelake -mno-fma -fno-math-errno -S
cat test.s
t
cd documents/ETHZ/ASL/hw02
xdg-open main.pdf &
rm main.pdf
rm main.aux
rm main.aux main.fdb_latexmk main.fls main.out main.synctex.gz main.log
rm main.fls
rm main.out
rm main.log
rm main.synctex\(busy\)
cd documents
cd ETHZ/ASL/hw02
cp main.tex homework.tex
rm main.*
nvim test.cpp
g++ test.cpp -O3 -march=skylake -mno-fma -fno-tree-vectorize
./a.out
latexmk -pdf homework.tex
netstat -nr
arp -a
ip route | grep default
dnf list installed | grep -i "NetworkManager"
sudo dnf downgrade NetworkManager
ping 10.216.0.0
ping 10.216.0.1
systemctl restart NetworkManager
route -n
nvim homework.
cd documents/ETHZ/ASL/hw02/report
nvim homework.tex
exi
sudo dnf install 'tex(lastpage.sty)'
sudo dnf install 'tex(pqfplots.sty)'
sudo dnf install 'tex(pgfplots.sty)'
sudo dnf install 'tex(nicefrac.sty)'
sudo dnf install 'tex(frmaed.sty)'
sudo dnf install 'tex(fraaed.sty)'
sudo dnf install 'tex(framed.sty)'
sudo dnf install 'tex(datetime.sty)'
sudo dnf install 'tex(algpseudocode.sty)'
sudo dnf install 'tex(blkarray.sty)'
sudo dnf install 'tex(cancel.sty)'
sudo dnf install 'tex(relsize.sty)'
sudo dnf install 'tex(multirow.sty)'
sudo dnf install 'tex(blindtext.sty)'
sudo dnf install 'tex(inconsolata.sty)'
sudo dnf install 'tex(scalerel.sty)'
sudo dnf install 'tex(mathabx.sty)'
sudo dnf install 'tex(imakeidx.sty)'
sudo dnf install 'tex(titling.sty)'
sudo dnf install 'tex(minted.sty)'
sudo dnf install 'tex(tikz-qtree.sty)'
sudo dnf install 'tex(tikz-dependency.sty)'
sudo dnf install 'tex(cleveref.sty)'
sudo dnf install 'tex(frecursive.sty)'
sudo dnf install 'tex(frcursive.sty)'
sudo dnf install 'tex(pygmentize.sty)'
pip install pygmentize
pip install Pygments
ssh srilaB
kitt
nvim resume.tex
sudo dnf install pipx
sudo dnf install nvm
sudo dnf install -y nodejs npm
sudo npm install -g nvm
sudo npm remove -g nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
nvim .bashrc
sudo tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM\
[google-cloud-cli]\
name=Google Cloud CLI\
baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el9-x86_64\
enabled=1\
gpgcheck=1\
repo_gpgcheck=0\
gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\
EOM
sudo dnf install libxcrypt-compat.x86_64
sudo dnf install google-cloud-cli
aws configure sso
sudo npm i -g quick-lint-js
rm -rf /usr/local/go && tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz\

cd dow
sudo rm -rf /usr/local/go && tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz\

cd /local/
cd /usr/local
tar -C /usr/local -xzf ~/downloads/go1.24.1.linux-amd64.tar.gz\

git clone https://github.com/lovablelabs/lovable.git
git clone git@github.com:lovablelabs/lovable.git
lov
cd scripts
nvim bootstrap-repo.sh
test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"\
test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"\
echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.config/zsh/.zshrc
brew install --cask google-cloud-sdk # install the gcloud cli\
gcloud auth login # authenticate with you @lovable.dev account (or other account that is invited to the org)\
gcloud config set project gpt-engineer-dev # specify the project you are working in and fetching secrets for\
./scripts/gcloud-secrets-pull # run this from the repository root
brew install --cask google-cloud-sdk\
gcloud auth login\
gcloud config set project gpt-engineer-dev ./scripts/gcloud-secrets-pull # run this from the repository root
brew cleanup --prune=all
brew install --cask google-cloud-sdk
cat .zshrc
cat ~/.zshrc
nvim ~/.config/zsh/.zshrc
rm ~/.zshrc
brew install go awscli
nvm
sudo dnf install go
sudo dnf install pypoetry
pipx install poetry
chmod +x ./scripts/bootstrap-repo.sh\
./scripts/bootstrap-repo.sh
cd lovable
go
go version
cd app
cd go
cd api
cd cmd/lov
go install .
bash ./run
cd code/lovable
nvim scripts/bootstrap-repo.sh 
pipx remove poetry
pipx uninstall poetry
google
sudo dnf remove google-cloud-cli
sudo dnf remove libxcrypt-compat-4.4.38-6.fc40.
sudo rm /etc/yum.repos.d/google-cloud-sdk.repo
sudo yum clean all
yum repoist
yum repolist
dnf copr list
btm 
sudo dnf copr remove phracek/PyCharm
sudo dnf remove SwayNotificationCenter-0.10.1-1.fc40.x86_64
sudo dnf repository-packages copr:copr.fedorainfracloud.org/atim/bottom
sudo dnf repository-packages copr:copr.fedorainfracloud.org/atim/bottom list installed
sudo dnf repository-packages copr:copr.fedorainfracloud.org:atim:bottom list installed
sudo dnf remove bottom
sudo dnf copr remove atim/bottom
sudo dnf remove golang
node --version
rm package.json
cat package.json
rm -f package.json
rm -r package-lock.json
rm test.s
rm a.out
rm a.py
rm test.cpp
echo $CLOUDSDK_CONFIG
rm -rf ~/.config/gcloud
cd .config
cat bottom/bottom.toml 
nvm deactivate
nvm unload
rm -rf ~/.nvm
g++ *.cpp -O3 -march=skylake -fno-tree-vectorize -ffp-contract=off -o main\

./main
cd convolutional_filter
nvim filter.cpp
nvim a.cpp
cd downloads/
nvim no_ifs.cpp
systemctl --user restart blueman-manager.service
systemctl --user restart bluetooth.target
cd documents/ETHZ/ASL/hw03
mv LLM\ Assignment\ 1\ Submission\ Template Assignment1
sudo dnf install `tex(tikz-blur.sty)`
sudo dnf install 'tex(tikz-blur.sty)'
tlmgr install tikz-blur
sudo dnf install texlive-tikz-blur
sudo dnf install 'tex(pgf-blur.sty)'
sudo dnf install texlive-pgf-blur
dnf install fira-code-fonts
sudo dnf install fira-code-fonts
python --version
python3 cache_gemini.py
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.2.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.2.0-linux-x64/python_files/deactivate/zsh/envVars.txt
cd .config/ktty
cd .config/kitty
nvim kitty.conf
cd .config/zathura
nvim zathurarc
adkb asdkbas
pip update black
pip upgrade black
pip install -u black
pip install --upgrade black
xit
sudo dnf upgrade
sudo dnf upgrade --refresh --best --alowerasing
sudo dnf upgrade --refresh --best --allowerasing
sudo dnf upgrade --refresh
sudo dnf system-upgrade download --releasever=41
sudo dnf system-upgrade download --releasever=41 --allowerasing --best
sudo dnf system-upgrade reboot
sh uninstall
rm -r Oxygen\ XML\ Editor\ 26
rm -r OxygenXMLEditor
cd OxygenXMLEditor
cd samples
sh oxygen-64bit-openjdk.sh
sudo nvim /usr/lib64/kitty/shell-integration/zsh/.zshenv
c;ear
cd code/adventofcode
nvim day8.py
ext
bash
nvim startups.txt
kitty --config NONE
/usr/bin/python3
/dirty
cd documents/CV
xdg-open resume.pdf
git clone git@gitlab.inf.ethz.ch:course-asl-fastcode25/team77.git
git checkout topic/baseline
conda create -n asl_clifford -f ../utils/env.yml
conda env create -f env.yml
pip install cmake
conda remove --name asl_clifford --all
conda remove --name asl_clifford
conda env remove --name asl_clifford
conda env create -f ../utils/env.yml
conda deactivate
pip uninstall torch\
pip install torch --index-url https://download.pytorch.org/whl/cpu
./inference
git stash -
conda activate asl_clifford
nvim report.tex
kitty +kitten ssh srilatb
kitty +kitten ssh srilat
nvim main.te
cd hw04
xdg-open hw04.pdf&
nvim report/report.tex
nvim report
killall brav
bluetoothctl connect 94:DB:56:AC:88:CC
cd LuaSnip
nvim tex.lua
sudo dnf upgrade code
killall code
sudo dnf remove tuned-ppd
sudo dnf remove power-profiles-daemon
git clone git@github.com:meta-llama/llama-cookbook.git
sudo dnf install ./warp-terminal-v0.2025.04.16.08.11.stable_02-1.x86_64.rpm
wget -qO- https://astral.sh/uv/install.sh | sh
uv
uv install python=3.10
uv pip install python=3.10
uv python install 3.10
git checkout topic/uv_infra
rm utils/condaenv.lrhlhd05.requirements.txt
uv pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
uv pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
git submodule add https://github.com/pybind/pybind11.git external/pybind11
uv run --reinstall asl_cliffor
cd .venv
cd lib
uv add torch
uv add torch-cpu
ls -ash
rm -rm .venv
rm -rf .venv
rm uv.lock
uv venv
deactivate
pip list installed | wc -l
pip list installed | grep -i "torch"
pip list installed 
nvim pyproject.toml
which python3
find $(python -c "import torch; print(torch.__path__[0])") -name "libtorch.so"
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(python -c "import torch; print(torch.__path__[0])")/lib
uv pip list
wl-copy < CMakeLists.txt
echo $LD_LIBRARY_PATH
cd documents/ETHZ/ASL
source .venv/bin/activate
git add CMakeLists.txt pyproject.toml uv.lock
git commit -m "add torch to pyproject and points cmake to correct installation of torch"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
ccache
which cmake
cd llama-cookbook
git clone git@github.com:tatsu-lab/stanford_alpaca.git
cd stanford_alpaca
uv run asl_clifford
git checkout -b "topic/activations"
git add src/layers/activations.h 
git commit -m "untested activation implementations"
git push --set-upstream origin topic/activations
git clone git@github.com:microsoft/cliffordlayers.git
cd cliffordlayers
cd .config/nvim
nvim LuaSnip/tex.lua
xetex
sudo dnf install 'tex(eurosm.sty)'
sudo dnf install 'tex(eurosym.sty)'
sudo dnf install texlive-xetec
sudo dnf install texlive-xetex
cd documents/Polytechnique
cd Sem6
cd CSE306
cd proj1
cd report
xdg-open report.pdf
wget https://raw.githubusercontent.com/rahuljangirwork/copmany-logos/refs/heads/main/cursor.png
xdg-open cursor.png
sudo mv cursor.png /opt/
cd /opt
chmod +x Cursor-0.49.6-x86_64.AppImage
./Cursor-0.49.6-x86_64.AppImage
sudo mv cursor-0.42.4x86_64.AppImage /opt/cursor.appimage
sudo mv cursor-0.49.4x86_64.AppImage /opt/cursor.appimage
sudo mv Cursor-0.49.6-x86_64.AppImage /opt/cursor.appimage
sudo nano /usr/share/applications/cursor.desktop
cd /usr/share/application
cd /usr/share/applications
sudo nvim cursor.desktop
jupyter nbconvert --generate-config
cd
cd .j
cd .jupyter
nvim jupyter_nbconvert_config.py
xdg-open final.pfd
cd downloads
jupyter notebook
jupyter nbconvert --to pdf --LatexExtraConfig.document_class=article --LatexExtraConfig.geometry=a4paper 'Copy_of_LLM_Assignment_1_(Coding).ipynb'
jupyter nbconvert --to pdf --PDFExporter.latex_count=1 --TemplateExporter.extra_template_paths=./ --LatexExporter.template_file='base' --LatexExporter.latex_elements="{'papersize': 'a4paper', 'geometry': '\\usepackage[a4paper,margin=1in]{geometry}'}" 'Copy_of_LLM_Assignment_1_(Coding).ipynb'
mv 'Copy_of_LLM_Assignment_1_(Coding).pdf' ~/documents/ETHZ/LLM/Assignment1
jupyter nbconvert --to pdf "Copy_of_LLM_Assignment_1_(Coding).ipynbâ€ƒ½\

jupyter nbconvert --to pdf "Copy_of_LLM_Assignment_1_(Coding).ipynb"\

gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -dNOPAUSE -dQUIET -dBATCH -dDetectDuplicateImages -dCompressFonts=true -r150 -sPAPERSIZE=a4 -dFIXEDMEDIA -dPDFFitPage -sOutputFile=code.pdf 'Copy_of_LLM_Assignment_1_(Coding).pdf'
xdg-open code.pdf
pdfunite main.pdf code.pdf final.pdf
pdfunite main.pdf 'Copy_of_LLM_Assignment_1_(Coding).pdf' final.pdf
xdg-open final.pdf
cd documents/ETHZ/LLM/Assignment1
vtune-gui 
tee > /tmp/oneAPI.repo << EOF\
[oneAPI]\
name=IntelÂ® oneAPI repository\
baseurl=https://yum.repos.intel.com/oneapi\
enabled=1\
gpgcheck=1\
repo_gpgcheck=1\
gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB\
EOF
sudo mv /tmp/oneAPI.repo /etc/yum.repos.d
sudo dnf install intel-oneapi-base-toolkit
vtune 
sudo dnf install intel-basekit
git checkout origin/topic/testing
git checkout topic/testing
vtune-gui
locate nvim.desktop
mkdir -p ~/.local/share/applications/\
cp /usr/share/applications/nvim.desktop ~/.local/share/applications/
sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator $(which kitty) 50
sudo update-alternatives --config x-terminal-emulator
nvim .local/share/applications/nvim.desktop
update-desktop-database ~/.local/share/applications
git checkout basic_linear
git rm --cached build
git rm --cached build =r
git rm --cached build -r
git commit -m "remove build from repo"
cmake clean
git add src/
git commit -m "testing tensor and hotfixes"
git commit -m "updated cmake"
./tensor
git add ..
git commit -m "update tensor"
git config pull.rebase false
git add ../src/timing.cpp
git add ../src/layers/activations.h
git commit -m "updating timing"
git add src/layers/base_layer.h
git commit -m "base layer"
/usr/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/deactivate/zsh/envVars.txt
/usr/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/deactivate/zsh/envVars.txt
rgit status
git checkout -- src/libtorch_layers/linear.h
./timing 
git add src/timing.cpp
git commit -m "create logs folder if needed"
git checkout -b "basic_activations"
mv layers/activations.h libtorch_layers
cleear
git add src 
git commit -m "change tensors to int64, fix converting to pytorch"
git add src/layers/sum_activation.h
git add src/asl_clifford/_core.pyi
git add src/layers/mean_activation.h
git add tests/test_activations.py
git commit -m "mean activation"
git commit -m "fix merge"
git reset --hard HEAD
mkdir buil
git add tests
git commit -m "fix seg fault and add tests for mean"
git checkout 8287f1a5b5fff3c1a14cb6965f35e96291f53ff4 -- tests/test_activations.py
git checkout 8287f1a5b5fff3c1a14cb6965f35e96291f53ff4 -- src/layers/linear_activation.h
git checkout 8287f1a5b5fff3c1a14cb6965f35e96291f53ff4 -- src/tensor.h
git checkout 8287f1a5b5fff3c1a14cb6965f35e96291f53ff4 -- src/tensor.cpp
git commit src/ 
git commit -m "fix broken merge"
git checkout 8287f1a5b5fff3c1a14cb6965f35e96291f53ff4
git checkout HEAD
git rebase -i origin/activations
git rebase --skip
git rebase --abort
git rebase -i activations
git add utils
git add CMakeLists.txt .clang-format
git commit -m "benchmark python script infra setup"
uv run --reinstall run_benchmark --name sum_activation
make format
./timing
git chcekout -- .
git pull 
git checkout origin/activations
cd adventofcode
python3 cache.py
pip install black
pip install black[jupyter]
pip install "black[jupyter]"
black Copy_of_assignment_2_q4_rag_student.ipynb
black "Copy of LLMs Assignment2 Q1.ipynb"
black copy_of_assignment2_q3.py
black "Copy of assignment2 q3.ipynb"
/usr/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.0-linux-x64/python_files/deactivate/zsh/envVars.txt
pip install numpy
black Copy_of_LLM_S25_Assignment_3_Q2_Watermark_API.ipynb
/usr/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.0-linux-x64/python_files/deactivate/zsh/envVars.txt
mkdir MP
cd MP
git clone https://gitlab.inf.ethz.ch/course-mp2025/AMMW.git
cd AMMW
rm -rf MP
git branch -d activations 
git branch -
git branch -D activations
git checkout -b "activations"
cd buid
uv run run_benchmark
cmake .
uv run run_benchmark --start 4 --end 48 --step 4
cd 
cdexit
rm -rf external
git submodule add https://github.com/simd-everywhere/simde.git
rm -rf simde
git submodule add https://github.com/simd-everywhere/simde.git ./external
git submodule add https://github.com/simd-everywhere/simde.git ./external/simde
pfetch
lss
cd documents/ethz 
cd ASL
uv run run_benchmark --start 64 --end 256 --step 32
uv run run_benchmark --start 64 --end 512 --step 32
make clean
mv plots/sum_activation.png plots/old_sum_activations.png
uv run run_benchmark --start 256 --end 1024 --step 64
nvim sum_activation.cpp
cd layers
cd src
cd asl_clifford
cd benchmarks
nvim run_benchmark.py
cd ../../..
build
cmake
mkae
uv run run_benchmark --start 256 --end 2048 --step 128
uv run run_benchmark --start 256 --end 2048 --step 128 --shape 2 2
uv run run_benchmark --start 256 --end 2048 --step 128 --shape 2 2 --cached
cmake 
cd ../
simde
cmake ..; make
cd pybind11
cd smide
cd simde
cd x86
cd buildls
mkdir build; cd build; cmake ..
nvim .gitignore
git remove --cached plots
git rm --cached plots
git add plots src tests .gitignore
git commit -m "V1-V4 sum activation + remove plots"
git push --set-upstream origin activations
nvim ~/.config/nvim/
mkdir build; cd build; cmake ..; make
rm -rf buid
lls
./time_sum_activation
kls
cd cp310-cp310-linux_x86_64
uv run --reinstall run_benchmark
rm -rm sum_activation.png
rm sum_activation.png
uv run --reinstall run_benchmark --step 4 --start 8 --end 16
git stauts
rm perf_design.txt
git commit -m "uv --reinstall does everything now"
git commit -m "quality of life improvements and BENCHMARK.md updated"
git commit -m "create plots folder and compiler flags platform dependent"
uv run --reinstall run_benchmark --step 4 --start 8 --end 16 --shape 4
git commit -m "yes"
git checkout origin/first_optimizations
uv run --reinstall run_benchmark --name linear_layer --start 4 --end 36 --step 4 --shape 4 8 1 -1
uv run --reinstall run_benchmark --name sum_activation --start 64 --end 256 --step 16 --shape 16
uv run --reinstall run_benchmark --name sum_activation --start 256 --end 1024 --step 64 --shape 4
uv run --reinstall run_benchmark --name sum_activation --start 256 --end 1024 --step 64 --shape 8 
uv run --reinstall run_benchmark --name sum_activation --start 256 --end 1024 --step 64 --shape 8 --cached
git commit -m "add mean and vectorized versions of mean and sum"
uv run --reinstall run_benchmark --cached --shape 2 2
uv run run_benchmark --name sum_activation --start 128 --end 512 --step 32 --shape 16
uv run --reinstall run_benchmark --name sum_activation --start 128 --end 512 --step 32 --shape 16
uv run --reinstall run_benchmark --name sum_activation --start 256 --end 512 --step 16 --shape 32
uv run --reinstall run_benchmark --name mean_activation --start 256 --end 512 --step 16 --shape 32
uv run run_benchmark --name mean_activation --start 256 --end 512 --step 16 --shape 32 --cached
/bin/python3.10 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/zsh/envVars.txt
kitty +kitten ssh student-cluster
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 12 --shape 8 16 16 3
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 12 --shape 8 32 32 3
git commit -m "set num_thread to 0 for openblas"
clerar
cd OpenBLAS
rm -rf OpenBLAS
git submodule init
 /usr/bin/env /bin/sh /tmp/Microsoft-MIEngine-Cmd-kinmpy3l.nxq 
uv run pytest tests/test_activations.py
gi tstatus
uv run --reinstall run_benchmark --name sum_activation --step 2 --start 4 --end 12 --shape 8
git staust
uv run --reinstall run_benchmark --name sum_activation --step 4 --start 4 --end 12 --shape 8
git commit -m "a"
cd doc
uv run --reinstall run_benchmark --name groupnorm1d_layer --start 4 --end 64 --step 4 --shape 8 0.00005 16 64 2
./time_groupnorm_layer 4 64 4 8 0.00005 16 64 2
uv run run_benchmark --name groupnorm1d_layer --start 4 --end 64 --step 4 --shape 16 64 2 --cached
uv run --reinstall run_benchmark --name mean_activation --start 256 --end 1024 --step 64 --shape 8
uv run --reinstall run_benchmark --name sum_activation --start 256 --end 1024 --step 64 --shape 8
rm VecV2.csv
uv run run_benchmark --name sum_activation --start 256 --end 1024 --step 64 --shape 8 --cached
uv run run_benchmark --name linear_activation --step 1 --start 1 --end 10 --shape 8 16 16 3
uv run --reinstall run_benchmark --name linear_activation --step 1 --start 1 --end 10 --shape 8 16 16 3
git checkout list
git branch -L
git branch -l
uv run --reinstall run_benchmark --name groupnorm1d_layer --start 4 --end 64 --step 4 --shape 16 64 2
git checkout temp_optimizations
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 256 --step 16 --shape 4 8 3
echo 1 > /sys/devices/system/cpu/intel_pstate/no_turbo
sudo echo 1 > /sys/devices/system/cpu/intel_pstate/no_turbo
uv run --reinstall run_benchmark --name sum_activation --start 512 --end 8192 --steps 256 --shape 8 
git checkout plots/linear_layer.png
git checkout -- plots/linear_layer.png
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 256 --step 16 --shape 4 8 3c
nvim src/benchmarks
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 256 --step 16 --shape 4 8 3 
bluetoothctl 
bluetoothctl list
curl -fsS https://dl.brave.com/install.sh | sh
sudo dnf upgrade brave
sudo dnf upgrade brave-browser
cd external
git submodule deinit -f external/OpenBLAS
git rm -f <submodule_path>
git rm -f external/OpenBLAS
clearl
nvim CMakeLists.txt
git commit -m "remove blas and remove copying from d_tensor"
sudo echo 0 > /sys/devices/system/cpu/intel_pstate/no_turbo
uv run --reinstall pytest -s
uv run pytest -s
uv run run_benchmark --name sum_activation --start 512 --end 8192 --step 256 --shape 8 -s
./time_sum_activation 1024 8192 512 8
uv run run_benchmark --name sum_activation --start 512 --end 8192 --step 256 --shape 8 
for file in logs/sum_activation; do\
    mv "$file" "old_$file"\
done
cd logs/sum_activation
for file in *; do\
    mv "$file" "old_$file"\
done
uv run --reinstall run_benchmark pytest
rclae
./time_sum_activation 4096 8192 512 8
uv run run_benchmark --name sum_activation --start 512 --end 8192 --step 256 --shape 8 --cached
uv run run_benchmark --name sum_activation --start 512 --end 8192 --step 256 --shape 8
uv run --reinstall run_benchmark --name sum_activation --start 512 --end 8192 --step 256 --shape 8
rm logs/sum_activation/old_Base.csv
uv run pytest
uv run pytest -v
uv run --reinstall pytest -v -s
code .
git commit -m "fix memory leak and add threads to cmake"
cd documents/ETHZ/LLM/Assignment2
cd assignment2
cd Assignment1
bto
cd llm_
mv test_script.py check_submission.py
scp Copy_of_assignment_2_q4_rag_student.ipynb srilab:
kitty srilab
kitty +ki
cd documents/ETHZ/LLM
cd Assignment\ 3
scp srilab:/home/moreira/Copy_of_assignment_2_q4_rag_student.ipynb documents/ETHZ 
cd documents/ETHZ/
mv Copy_of_assignment_2_q4_rag_student.ipynb LLM/Assignment2/q4_rag.ipynb
icxx
icx
sudo yum install intel-oneapi-toolkit
icc
icx 
cd .config/zsh
nvim .zshrc
nvim .config/zsh/.zshrc
git submodule deinit -f external/simde
git submodule update
git rm -f external/simde
git commit -m "move to intel compiler and remove simde"
git checkout activation
which icpx
git commit -m "add avx512 base reduce"
icpx
git push origin
icu-config-64
git commit -am "better avx512"
git commit -am "new avx512"
cd documents/ETHZ
cd LLM
scp Copy_of_assignment2_q3.ipynb srilab:
nautilus .
uv run check_submission.py 23-908-114
/usr/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/zsh/envVars.txt
cd documents/ETHZ/LLM/Assignment\ 3
cd Assignment2
cd LLM\ Assignment\ 2\ Submission\ Template
xdg-open main.pdf
nvim main.tex
git commit -am  "new best performance"
uv run --reinstall run_benchmark --name sum_activation --start 2048 --end 8192 --step 512 --shape 8
uv sync
uv run run_benchmark --name sum_activation --start 2048 --end 8192 --step 512 --shape 8
git commit -am "fix last avx versions for sum"
/usr/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/zsh/envVars.txt
kitty +kitten ssh ssh -i ~/Downloads/asl_vm.pem ubuntu@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
kitty +kitten ssh ssh -i ~/downloads/asl_vm.pem ubuntu@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
chmod 400 /home/fcomoreira/downloads/asl_vm.pem
python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/zsh/envVars.txt
nvim config
ssh-keygen -t rsa -b 4096 -C "fmachado@student-ethz.ch" -f ~/.ssh/id_rsa_vm
ssh-copy-id moreira@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
ssh-copy-id -i ~/.ssh/id_rsa_vm.pub moreira@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
ssh moreira@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
ssh -i ~/.ssh/id_rsa_vm moreira@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
nvim .ssh/id_rsa_vm.pub
kitty +kitten ssh -i ~/downloads/asl_vm.pem ubuntu@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
nvim id_rsa_vm.pub
cd .ssh
cat id_rsa.pub
git pull main
uv run run_benchmark --name sum_activation --start 2048 --end 8192 --step 1024 --shape 8
uv run --reinstall run_benchmark --name sum_activation --start 2048 --end 8192 --step 1024 --shape 8
uv run --reinstall run_benchmark --name mean_activation --start 2048 --end 8192 --step 1024 --shape 8
uv run --reinstall run_benchmark --name mean_activation --start 2048 --end 16384 --step 1024 --shape 8
git commit -m "mean activation impl"
git merge linear_vectorized -- src/asl_clifford/benchmarks
git merge linear_vectorized -- src/asl_clifford/benchmarks/*
git checkout linear_vectorized -- src/asl_clifford/benchmarks/
uv run --reinstall run_benchmark --name mean_activation --start 2048 --end 16384 --step 1024 --shape 8 --cached --roofline
uv run run_benchmark --name mean_activation --start 2048 --end 16384 --step 1024 --shape 8 --cached --roofline
uv run --reiinstall run_benchmark --name mean_activation --start 2048 --end 4096 --step 1024 --shape 8 --roofline
uv run --reinstall run_benchmark --name mean_activation --start 2048 --end 4096 --step 1024 --shape 8 --roofline
clang
cd /opt/intel/oneapi/compiler/2025.1/bin
uv run --reinstall pytest tests/test_activations.py
mkdir build
uv run --reinstall pytest 
git commit -m "moving tests, removing warnings, adding roofline info for activations"
uv run --reinstall run_benchmark --name mean_activation --start 2048 --end 8192 --step 1024 --shape 8 --roofline
uv run run_benchmark --name mean_activation --start 2048 --end 8192 --step 1024 --shape 8 --roofline --cached
nvim /opt/intel/oneapi/setvars.sh
uv run --reinstall run_benchmark --name sum_activation --start 2048 --end 4096 --step 512 --shape 8 --roofline
uv run run_benchmark --name sum_activation --start 2048 --end 4096 --step 512 --shape 8 --roofline --cached
git add src
git add CMakeLists.txt
git add .gitignore
git commit -m "add roofline"
git fetch
git checkout activatoins
export CC=/opt/intel/oneapi/compiler/2025.1/bin/icx\
export CXX=/opt/intel/oneapi/compiler/2025.1/bin/icpx
git add src/asl_clifford/benchmarks/layers.py
git commit -m "simplify layers"
git merge activations
/bin/python3 /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/zsh/envVars.txt
cpu-info
cpufreqinfo 
cpufreq-info
sudo dnf install cpufreq-info
kitty +kitten ssh moreira@ec2-16-170-110-128.eu-north-1.compute.amazonaws.com
cat /proc/cpuinfo | grep cache
git commit -am  "taskset benchmark and fix cache size"
btpo
uv run --reinstall 
taskset -c 0 ./time_groupnorm_layer 4 32 4 2 0.00005 16 16 16 4
xdg-open plots/groupnorm1d_layer.png
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 64 --step 4 --shape 16 16 16 64 8 --cached
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 64 --step 4 --shape 16 16 16 8 --cached
uv run --reinstall run_benchmark --name groupnorm1d_layer --start 4 --end 64 --step 4 --shape 16 16 16 4
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 64 --step 4 --shape 16 16 16 4
taskset -c 0 ./time_groupnorm_layer 4 64 4 2 0.00005 16 16 16 4
taskset -c 0 ./time_groupnorm_layer 32 96 16 2 0.00005 16 16 16 4
cd //
cd -
cd team77
taskset -c 0 ./time_groupnorm_layer 32 160 32 2 0.00005 16 16 16 4
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached
./time_groupnorm_layer 32 160 32 2 0.00005 16 16 16 4
htop
top
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
cat /sys/devices/system/cpu/intel_pstate/no_turbo
dmesg | grep -i thermal
sudo dmesg | grep -i thermal
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 32 --shape 8 32 32 3
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq
cd ../..
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\

uv run run_benchmark --name linear_activation --step 2 --start 4 --end 32 --shape 8 32 32 3
uv run run_benchmark --name linear_activation --step 2 --start 4 --end 20 --shape 8 32 32 3
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 20 --shape 8 32 32 3
cd logs/linear_activation
rm V1.csv V2.csv VecV1.csv Vec1.csv
cd .
rm logs/linear_activation/V3.csv
uv run run_benchmark --name linear_activation --step 2 --start 4 --end 20 --shape 8 32 32 3 --cached --roofline
uv run run_benchmark --name sum_activation --start 4096 --end 32768 --step 4096 --shape 8 --roofline --cached
rm -r logs/mean_activation
uv run run_benchmark --name mean_activation --start 4096 --end 32768 --step 4096 --shape 8 --roofline
rm logs/mean_activation/AVX256_V1.csv logs/mean_activation/V1.csv
uv run run_benchmark --name mean_activation --start 4096 --end 32768 --step 4096 --shape 8 --roofline --cached
git commit -m "i dont even know what this is"
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 48 --step 16 --shape 32 32 3 --roofline
cd plots
rm Naive.csv V1.csv V2.csv V3.csv
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 48 --step 16 --shape 32 32 3 --roofline --cached
uv run run_benchmark --name linear_layer --start 32 --end 48 --step 16 --shape 32 32 3 --roofline --cached
cd linear_
cat V4.csv
cat Vec2.csv
cat FinalImpl.csv
rm -r sum_activation
git checkout --
l
cd linear_layer
cat V3.csv
cat V5.csv
cat V6.csv
python
nvim src/main.cpp
uv run run_benchmark --name mean_activation --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached --roofline
uv run run_benchmark --name linaer_layer --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached --roofline
uv run run_benchmark --name linear_layer --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached --roofline
uv run run_benchmark --name sum_activation --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached --roofline
uv run run_benchmark --name linear_activation --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached --roofline
uv run run_benchmark --name sum_activation --start 4096 --end 32768 --step 4096 --shape 8 --cached --roofline
uv run run_benchmark --name mean_activation --start 4096 --end 32768 --step 4096 --shape 8 --cached --roofline
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 32 --shape 8 32 32 3 --cached --roofline
uv run run_benchmark --name linear_activation --step 2 --start 4 --end 32 --shape 8 32 32 3 --cached --roofline
uv run run_benchmark --name linear_layer --start 32 --end 256 --step 16 --shape 4 8 3 --cached --roofline 
# Stop the service\
sudo systemctl stop tlp\
\
# Disable it from starting at boot\
sudo systemctl disable tlp\
\
# Also disable the sleep service if it exists\
sudo systemctl disable tlp-sleep
sudo systemctl start tlp
uv run run_benchmark --name linear_layer --start 32 --end 256 --step 16 --shape 32 32 3 --cached --roofline 
# Check current governor and frequencies\
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_cur_freq\
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_available_frequencies\
\
# Check if turbo is disabled\
cat /sys/devices/system/cpu/intel_pstate/no_turbo
neofetch
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies
# Check current governor\
cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
\
# Check intel_pstate status\
cat /sys/devices/system/cpu/intel_pstate/no_turbo\
cat /sys/devices/system/cpu/intel_pstate/min_perf_pct\
cat /sys/devices/system/cpu/intel_pstate/max_perf_pct
# Check TLP status\
sudo tlp-stat -s\
\
# Check TLP configuration\
sudo tlp-stat -c
A\

uv run --reinstall run_benchmark --name sum_activation --start 4096 --end 32768 --step 4096 --shape 8 --roofline
uv run --reinstall run_benchmark --name sum_activation --start 4096 --end 8192 --step 4096 --shape 8 --roofline
uv run --reinstall run_benchmark --name mean_activation --start 2048 --end 8192 --step 2048 --shape 8 --roofline
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 96 --step 32 --shape 32 32 3 --roofline
uv run --reinstall run_benchmark --name groupnorm1d_layer --start 4 --end 32 --step 4 --shape 16 16 16 4
./time_groupnorm_layer 4 32 4 2 0.00005 16 16 16 4
uv run --reinstall
 ./time_groupnorm_layer 4 64 4 2 0.00005 16 16 16 4
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 64 --step 4 --shape 16 16 16 4 --cached --roofline
ssh stude
ssh student-cluster
sudo tlp-stat -b
ssh srilab
# Stop TLP\
sudo systemctl stop tlp\
\
# Set performance mode\
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/min_perf_pct\
\
# Verify the fix\
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
# Stop TLP\
sudo systemctl stop tlp\
\
# Apply your settings\
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/min_perf_pct\
\
# Verify frequency\
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq\
\
# Re-enable TLP later\
sudo systemctl start tlp
uv run  run_benchmark --name linear_layer_generated --start 32 --end 256 --step 32 --shape 32 32 3
cpUpower frequency-info
rm logs/linear_layer_generated/B\ =\ 32.csv
uv run run_benchmark --name linear_layer_generated --start 32 --end 256 --step 32 --shape 32 32 3 --cached
sudo tlp-stat
cd code
git clone git@github.com:alsoc/bandwidth.git
git submodule update --init --recursive
mkdir build\
cd build\
cmake .. -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-march=native" -DENABLE_OMP=ON -DENABLE_F16=ON\
make -j4
taskset -c 0 ./bin/bandwidth
taskset -c 0 OMP_NUM_THREADS=1 ./bin/bandwidth -M 2GiB -C > bandwidth_output.csv\
../plot.py bandwidth_output.csv -o plot.png\

taskset -c 0 export OMP_NUM_THREADS=1 ./bin/bandwidth -M 2GiB -C > bandwidth_output.csv\
../plot.py bandwidth_output.csv -o plot.png\

export OMP_NUM_THREADS=1\
taskset -c 0 ./bin/bandwidth -M 2GiB -C > bandwidth_output.csv\
../plot.py bandwidth_output.csv -o plot.png
git clone https://github.com/intel/memory-bandwidth-benchmarks.git\
cd memory-bandwidth-benchmarks\

nvim makefile
make
nvim  run.sh
./stream_avx512.bin
nvim ./bandwidth_per_cycle.sh
bash ./bandwidth_per_cycle.sh
export OMP_NUM_THREADS=1\
\

bc
cd bandwidth
xdg-open plot.png
cd memory-bandwidth-benchmarks
nvim bandwidth_per_cycle.sh
conda activate datascience
ipython
python3
sudo tlp-stat -p -v
git stash 
git commit -m "add beta to run_benchmark"
git merge main
rm 77.pdf
xdg-open 77.pdf
git merge abort
git rebase main
nvim add src/asl_clifford/benchmarks/run_benchmark.py
rm add
git rebase --continue
git push -f
git merge --abrot
git merge --abort
clea
rclear
uv run --reinstall run_benchmark --name sum_activation --start 2 --end 10 --step 2 --shape 8 16 16 8
uv run run_benchmark --name sum_activation --start 2 --end 10 --step 2 --shape 8 16 16 8 --cached
uv run run_benchmark --name sum_activation --start 2 --end 10 --step 2 --shape 8 16 16 8 --cached --roofline
uv run run_benchmark --name sum_activation --start 2 --end 10 --step 2 --shape 8 32 32 8 --roofline
cat /sys/class/thermal/thermal_zone*/temp\
cat /sys/class/thermal/thermal_zone*/type
sudo systemctl stop tlp thermald poweer-profiles-daemon tuned
# Monitor CPU temperature and frequency in real-time\
watch -n 1 'cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq && sensors | grep Core'\
\
# Check throttling status\
cat /sys/devices/system/cpu/cpu0/thermal_throttle/*\
\
# Check thermal events in dmesg\
dmesg | grep -i thermal
# Check Intel power limits (requires msr-tools)\
sudo modprobe msr\
sudo rdmsr -a 0x610  # PL1/PL2 limits\
sudo rdmsr -a 0x1FC  # Power limit status
uv run --reinstall run_benchmark --name sum_activation --start 2 --end 10 --step 2 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name sum_activation --start 4 --end 16 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name sum_activation --start 8 --end 32 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name sum_activation --start 8 --end 48 --step 4 --shape 8 32 32 8 --roofline --cached
uv run run_benchmark --name sum_activation --start 8 --end 48 --step 4 --shape 8 32 32 8 --roofline --cached
sudo systemctl disable tlp
lscpu
icpx --versio
icpx --version
git checkout src/layers/linear_activation.h -- .
git checkout -- src/layers/linear_activation.h
ping www.google.com
rm -rf build
uv run --reinstall run_benchmark --name sum_activation --start 8 --end 64 --step 8 --shape 8 32 32 8 --roofline
git diff src/asl_clifford/benchmarks/layers.py
git stash show
git stash drop
git stash
git stash pop
git stash src/asl_clifford/benchmarks/layers.py
git stash push src/asl_clifford/benchmarks/layers.py
cat logs/mean_activation/Best\ AVX512.csv
rm logs/mean_activation/AVX256_V1.csv logs/mean_activation/V1.csv logs/mean_activation/AVX256_V4.csv logs/mean_activation/AVX512_V2.csv logs/mean_activation/V3.csv
ls logs/mean_activation
cat logs/mean_activation/Torch.csv
rm -rf groupnorm1d_layer groupnorm2d_layer linear_layer linear_activation linear_layer_generated sum_activation_old activationsperformance_results_SumActivation.csv
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.6.1-linux-x64/python_files/deactivate/zsh/envVars.txt
cpupower frequency-info\ 
cpupower frequency-info\\
cpupower frequency-info
sudo systemctl status tlp
# Check ThinkPad thermal mode\
cat /proc/acpi/ibm/thermal 2>/dev/null || echo "No ThinkPad thermal info"\
\
# Check platform profile (you have this module loaded)\
cat /sys/firmware/acpi/platform_profile\
cat /sys/firmware/acpi/platform_profile_choices\
\
# Set to performance if not already\
echo performance | sudo tee /sys/firmware/acpi/platform_profile
sudo wrmsr -a 0x1FC 0x0
cd ../logs
cd logs/
cd logs/mean_activation
cat Base.csv
cat Best\ AVX256.csv
cat Best\ AVX512.csv
cat Torch.csv
uv run --reinstall pytest
uv run --reinstall pytest tests/test_groupnorm.py
uv run pytest tests/test_groupnorm.py
uv run pytest tests/test_linear_act.py
uv run pytest tests/test_linear.py
uv run pytest tests/test_sum_act.py
uv run pytest tests/test_mean_act.py
git add src/core_bindings.cpp
git commit -m "fix bindings"
git checkout main
uv run run_benchmark --name sum_activation --start 8 --end 48 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name sum_activation --start 8 --end 48 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name sum_activation --start 4 --end 36 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name mean_activation --start 4 --end 36 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name mean_activation --start 2 --end 28 --step 2 --shape 8 32 32 8 --roofline && uv run --reinstall run_benchmark --name sum_activation --start 2 --end 28 --step 2 --shape 8 32 32 8
xdg-open roofline_plots/sum_activation.png
git commit -m "final version(?)"
git checkout -- 
git checkout -- .
git rm --cached plots -r
git checkout -- src/asl_clifford/benchmarks/run_benchmark.py
git add .
git commit -m "change plots layout"
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 16 --shape 8 32 32 3 --roofline
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 4 --end 18 --shape 8 32 32 3 --roofline
xdg-open roofline_plots/linear_activation.png
xdg-open plots/linear_activation.png
cd linear_activation
rm FinalImpl*
rm V4.csv
rm Vec2.csv
uv run run_benchmark --name linear_activation --step 2 --start 4 --end 18 --shape 8 32 32 3 --roofline --cached
s
cd logs
ld
cd sum_activation
rm *
uv run --reinstall run_benchmark --name sum_activation --start 2 --end 28 --step 2 --shape 8 32 32 8
xdg-open plots/sum_activation.png
git checkout groupnorm
git log
cd build
cmake ..
cd ..
uv run --reinstall asl_clifford
cpupower frequency-info
git commit -am "remove smide"
uv run pytest 
sudo acpi -v
# Check all power-related kernel modules\
lsmod | grep -E "(acpi|thermal|intel|cpufreq)"\
\
# Check MSR registers if available\
sudo modprobe msr\
sudo rdmsr -a 0x1FC 2>/dev/null || echo "Cannot read MSR 0x1FC"\
sudo rdmsr -a 0x610 2>/dev/null || echo "Cannot read MSR 0x610"
# Try disabling ThinkPad thermal management temporarily\
sudo modprobe -r thinkpad_acpi\
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/min_perf_pct\
\
# Check frequency\
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
sudo tlp-stat -o
uv run --reinstall run_benchmark --name groupnorm2d_layer --start 4 --end 128 --step 4 --shape 8 8 8 4
git checkout activations -- src/asl_clifford/benchmarks/run_benchmark.py
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 128 --step 4 --shape 8 8 8 4 --roofline --cached
xdg-open roofline_plots/mean_activation.png
uv run --reinstall run_benchmark --name groupnorm2d_layer --start 4 --end 128 --step 4 --shape 8 8 8 4 --roofline
xdg-open roofline_plots/groupnorm2d_layer.png
git add src/asl_clifford/benchmarks/run_benchmark.py
git diff src/asl_clifford/benchmarks/run_benchmark.py
git diff HEAD -- src/asl_clifford/benchmarks/run_benchmark.py \ 
git diff HEAD -- src/asl_clifford/benchmarks/run_benchmark.py
git commit -m "format for benchmark plots"
git push
xdg-open plots/groupnorm2d_layer.png
nvim
kitty +kitten ssh srilab
nvim 
clear
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq\
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_min_freq\
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
echo performance | sudo tee /sys/devices/system/cpu/cpufreq/policy*/energy_performance_preference\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/min_perf_pct\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct
cpupower frequency-info 0\
cpupower frequency-info
# Remove and reload intel_pstate driver\
sudo modprobe -r intel_pstate\
sudo modprobe intel_pstate\
\
# Set everything back to performance\
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/min_perf_pct\
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct
sudo wrmsr -a 0x1a0 0x4000850089
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq\
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_min_freq
# Try to reset max frequency to 2.6GHz\
echo 2600000 | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq\
\
# Check if it worked\
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq\
cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/max_perf_pct
echo 100 | sudo tee /sys/devices/system/cpu/intel_pstate/min_perf_pct
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
tlp-stat -p
echo 0 | sudo tee /sys/devices/platform/thinkpad_acpi/dytc_lapmode
reboot
op
killall brave
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/deactivate/zsh/envVars.txt
cpupower frequency-info\
cpupower frequency-info
btop
ls
uv run --reinstall run_benchmark --name linear_layer_generated --start 32 --end 256 --step 32 --shape 32 32 3
git checkout activations
git status
sudo modprobe -r thinkpad_acpi
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
sudo tlp-stat -p
cd documents/ETHZ/ASL/team77
source /opt/intel/oneapi/setvars.sh
uv run --reinstall run_benchmark --name mean_activation --start 2 --end 28 --step 2 --shape 8 32 32 8 --roofline
xdg-open plots/mean_activation.png
git checkout linear_vectorized
git pull
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 256 --step 32 --shape 32 32 3 --roofline
xdg-open plots/linear_layer.png
uv run run_benchmark --name linear_layer --start 32 --end 256 --step 32 --shape 32 32 3 --roofline --cached
uv run run_benchmark --name linear_layer_generated --start 32 --end 256 --step 32 --shape 32 32 3 --cached --roofline
xdg-open plots/linear_layer_generated.png
xdg-open roofline_plots/linear_layer_generated.png
xdg-open roofline_plots/linear_layer.png
sudo systemctl enable tlp
exit
cd plots
cd logs/mean_activation
cat Base.csv
cat Best\ AVX512.csv
cat Best\ Scalar.csv
cat Best\ AVX256.csv
cd ../..
cd -
cat Torch.csv
nvim
clear
cd logs
cd linear_layer_generated
rm *U*.csv
ls
git checkout -- .
git stash
git pull
cd ..
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
cpupower frequency-info\
cpupower frequency-info
cd documents/ETHZ/ASL/team77
uv run run_benchmark --name linear_layer_generated --start 32 --end 256 --step 32 --shape 32 32 3 --cached --roofline
uv run run_benchmark --name linear_layer --start 32 --end 256 --step 32 --shape 32 32 3 --cached --roofline
xdg-open roofline_plots/linear_layer.png
xdg-open roofline_plots/linear_layer_generated.png
git rm --cached roofline_plots/linear_layer.png
git commit -am "remove plots from the repo"
clear
ls
git checkout activations
git checkout main
git merge activations
nvim
nvim src/asl_clifford/benchmarks/layers.py
source /opt/intel/oneapi/setvars.sh
uv run --reinstall pytest
uv run --reinstall pytest tests/test_groupnorm.py
uv run pytest tests/test_mean_act.py
uv run pytest tests/test_sum_act.py
uv run pytest tests/test_linear_act.py
uv run pytest tests/test_groupnorm.py
git add .
git commit -am "merge activations"
git push
git status
btop
nvim 
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
sudo modprobe -r thinkpad_acpi
cpupower frequency-info\
cpupower frequency-info
btop
cd documents/ETHZ/ASL/team77
ls
git status
source /opt/intel/oneapi/setvars.sh
git pull
uv run --reinstall run_benchmark --name linear_activation --step 4 --start 4 --end 48 --shape 8 32 32 3 --roofline
xdg-open roofline_plots/linear_activation.png
uv run --reinstall run_benchmark --name linear_activation --step 4 --start 4 --end 80 --shape 8 32 32 3 --roofline
uv run --reinstall run_benchmark --name mean_activation --start 4 --end 40 --step 4 --shape 8 32 32 8 --roofline
xdg-open plots/linear_activation.png
xdg-open plots/mean_activation.png
uv run run_benchmark --name mean_activation --start 4 --end 80 --step 4 --shape 8 32 32 8 --roofline
sudo modprobe -r thinkpad_acpi
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
btop
killall brave
cd ..
nvim 
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
ls
clear
cpupower frequency-info\
cpupower frequency-info
reboot
cd documents/ETHZ/ASL/team77
ls
uv run run_benchmark --name mean_activation --start 4 --end 80 --step 4 --shape 8 32 32 8 --roofline
xdg-open plots/mean_activation.png
uv run run_benchmark --name mean_activation --start 4 --end 100 --step 4 --shape 8 32 32 8 --roofline
uv run run_benchmark --name sum_activation --start 4 --end 100 --step 4 --shape 8 32 32 8 --roofline
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
source /opt/intel/oneapi/setvars.sh
uv run --reinstall run_benchmark --name sum_activation --start 4 --end 100 --step 4 --shape 8 32 32 8 --roofline
xdg-open plots/sum_activation.png
BTOP
btop
nvim sum_activation.cpp
nvim
cpupower frequency-info\
cpupower frequency-info
sudo modprobe -r thinkpad_acpi
clear
btop
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
cd documents/ETHZ/ASL/team77
clea
clear
ls
git pull
git status
source /opt/intel/oneapi/setvars.sh
uv run --reinstall run_benchmark --name sum_activation --start 60 --end 100 --step 4 --shape 8 32 32 8 --roofline
xdg-open plots/sum_activation.png
uv run --reinstall run_benchmark --name sum_activation --start 4 --end 40 --step 4 --shape 8 32 32 8
cd ..
clear
ls
cat logs/linear_activation/Base.csv
nvim
btop
lscpu
cpupower frequency-info\
cpupower frequency-info
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
btop
cd documents/ETHZ/ASL/team77
uv run run_benchmark --name sum_activation --start 4 --end 40 --step 4 --shape 8 32 32 8
source /opt/intel/oneapi/setvars.sh
uv run --reinstall run_benchmark --name sum_activation --start 4 --end 40 --step 4 --shape 8 32 32 8
uv run run_benchmark --name sum_activation --start 4 --end 100 --step 4 --shape 8 32 32 8
xdg-open plots/sum_activation.png
uv run run_benchmark --name linear_activation --step 4 --start 8 --end 100 --shape 8 32 32 3 --roofline
uv run --reinstall run_benchmark --name linear_activation --step 4 --start 8 --end 100 --shape 8 32 32 3 --roofline
xdg-open plots/linear_activation.png
xdg-open roofline_plots/linear_activation.png
uv run --reinstall run_benchmark --name linear_activation --step 2 --start 8 --end 66 --shape 8 32 32 3 --roofline
uv run --reinstall run_benchmark --name linear_activation --step 4 --start 2 --end 66 --shape 8 32 32 3 --roofline
uv run run_benchmark --name mean_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --roofline
xdg-open roofline_plots/mean_activation.png
xdg-open plots/mean_activation.png
uv run --reinstall run_benchmark --name mean_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --roofline
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
sudo systemctl status tlp
cd docde
ls
cd code/team77
uv venv --python 3.10
git submodule update --init --recursive
uv syng
source .venv/bin/activate
source /opt/intel/oneapi/setvars.sh
uv sync
echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
btop
cd documents/ETHZ/ASL/team77
xdg-open plots/mean_activation.png
source /opt/intel/oneapi/setvars.sh
uv run run_benchmark --name mean_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --roofline
uv run --reinstall run_benchmark --name mean_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --roofline
uv run run_benchmark --name sum_activation --start 2 --end 62 --step 4 --shape 8 32 32 8
git add src/layers/mean_activation.h src/layers/sum_activation.h
git status
git pull
uv run run_benchmark --name linear_layer --start 32 --end 256 --step 32 --shape 32 32 3 --roofline
uv run --reinstall run_benchmark --name linear_layer --start 32 --end 256 --step 32 --shape 32 32 3 --roofline
xdg-open plots/linear_activation.png
xdg-open plots/linear_layer.pnh
xdg-open plots/linear_layer.png
uv run run_benchmark --name sum_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --cached --roofline
uv run pytest
uv run run_benchmark --name mean_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --cached
xdg-open plots/sum_activation.png
/home/fcomoreira/documents/ETHZ/ASL/team77/plots/sum_activation.png
uv run run_benchmark --name sum_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --cached
xdg-open roofline_plots/mean_activation.png
xdg-open roofline_plots/sum_activation.png
uv run run_benchmark --name sum_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --cached --roofline 
uv run run_benchmark --name mean_activation --start 2 --end 62 --step 4 --shape 8 32 32 8 --cached --roofline 
uv run run_benchmark --name linear_layer --start 32 --end 256 --step 32 --shape 32 32 3 --roofline --cached
xdg-open roofline_plots/linear_layer.png
uv run run_benchmark --name linear_activation --step 4 --start 8 --end 60 --shape 8 32 32 3 --roofline --cached
xdg-open roofline_plots/linear_activation.png
uv run run_benchmark --name linear_layer_generated --start 32 --end 256 --step 32 --shape 32 32 3 --cached --roofline
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 128 --step 4 --shape 8 8 8 4 --roofline --cached
uv run run_benchmark --name groupnorm2d_layer --start 4 --end 128 --step 4 --shape 8 8 8 4 --roofline --cached --roofline
nvim 
rm logs/sum_activation/AVX256_V3.csv
nvim
cd code
git clone git@gitlab.inf.ethz.ch:course-asl-fastcode25/team77.git
cd team77
git submodule init
nvim .gitmodules
git submodule update
source /opt/intel/oneapi/setvars.sh
uv run --reinstall pytest tests/test_groupnorm.py
ls
rm -rf build
git checkout fixbuild
git status
nvim README.md
python3
echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo
btop
python3
git add src/asl_clifford/benchmarks/run_benchmark.py
nvim 
nvim
clear
git pull
git add src/benchmarks/linear_activation.cpp
git commit -m "better plotting"
git push
git status
cd code
rm -rf cliffordlayers
rm -rf bandwidth
rm -rf llama-cookbook
rm -rf lovable
rm -rf memory-bandwidth-benchmarks
rm -rf team77
rm -rf stanford_alpaca
mkdir uni
mv Authentification-System uni
mv autoformalizer uni
mv continual-learning uni
mv oneshot-learning/ uni
mv tqdne uni
rm test.ipynb
cat selected_strings.txt
wc -l selected_strings.txt
rm selected_strings.txt
cat ft_trainer.py
rm ft_trainer.py
rm losses.py
mv competitions
mkdir competitions
mv adventofcode competitions
mv kaggle competitions
ls
git clone git@github.com:lucasoeth/shipped-10.git
code .
/bin/python /home/fcomoreira/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/printEnvVariablesToFile.py /home/fcomoreira/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/deactivate/zsh/envVars.txt
cd code/shipped-10
code .
cd documents
mkdir security
touch stripe-verification.txt
nvim stripe-verification.txt
mv ~/github-recovery-codes.txt ./
mv *.txt security
ls
node
clear
txs
tsx
python3
btop
mv ADMIN_MATCHMAKING.md MATCHMAKING.md
git checkout admin-improvements
git checkout admin_improvements
git checkout -b admin_improvements
nvim ~/.config/zsh/.zshrc
npm run matchups:single-user:help
tsx
c;ear
clear
npm run matchups:single-user -- --email moreira@lovable.dev
git add package.json src/lib/matchmaking.ts scripts/generate-single-user-matchups.ts
git push --set-upstream origin admin_improvements
npm run matchups:dry-run:admin
npm run matchups:dry-run:admin -- --week 25
npm run matchups:generate:admin -- --week 25
npm run matchups:generate:admin -- --dry-run --force --week 25
npm run matchups:generate:admin -- --force --week 25
git status
git pull pull.rebase false
git config pull.rebase false
git pull
git push
cd -
ls
cd code/shipped-10
npm i
npm run dev
